[{"/home/vladichka/VladTaras/Boichuk/src/index.js":"1","/home/vladichka/VladTaras/Boichuk/src/App.js":"2","/home/vladichka/VladTaras/Boichuk/src/reportWebVitals.js":"3","/home/vladichka/VladTaras/Boichuk/src/store/reducers/workReducer.js":"4","/home/vladichka/VladTaras/Boichuk/src/store/reducers/userReducer.js":"5","/home/vladichka/VladTaras/Boichuk/src/hoc/Layout/Layout.js":"6","/home/vladichka/VladTaras/Boichuk/src/containers/Login/Login.js":"7","/home/vladichka/VladTaras/Boichuk/src/containers/Logout/Logout.js":"8","/home/vladichka/VladTaras/Boichuk/src/containers/Works/Works.js":"9","/home/vladichka/VladTaras/Boichuk/src/containers/Auth/Auth.js":"10","/home/vladichka/VladTaras/Boichuk/src/components/About/About.js":"11","/home/vladichka/VladTaras/Boichuk/src/containers/Works/CreateWork/CreateWork.js":"12","/home/vladichka/VladTaras/Boichuk/src/store/actions/actionTypes.js":"13","/home/vladichka/VladTaras/Boichuk/src/store/actions/index.js":"14","/home/vladichka/VladTaras/Boichuk/src/components/Navigation/Toolbar/Toolbar.js":"15","/home/vladichka/VladTaras/Boichuk/src/components/UI/Card/Card.js":"16","/home/vladichka/VladTaras/Boichuk/src/components/UI/Button/Button.js":"17","/home/vladichka/VladTaras/Boichuk/src/components/UI/Input/Input.js":"18","/home/vladichka/VladTaras/Boichuk/src/components/UI/Spinner/Spinner.js":"19","/home/vladichka/VladTaras/Boichuk/src/components/Works/WorkComponent/WorkComponent.js":"20","/home/vladichka/VladTaras/Boichuk/src/store/actions/actions.js":"21","/home/vladichka/VladTaras/Boichuk/src/components/Navigation/Toolbar/Logo/Logo.js":"22","/home/vladichka/VladTaras/Boichuk/src/components/Navigation/Toolbar/NavigationItems/NavigationItems.js":"23","/home/vladichka/VladTaras/Boichuk/src/components/Navigation/Toolbar/NavigationItems/NavigationItem/NavigationItem.js":"24","/home/vladichka/VladTaras/Boichuk/src/containers/GetJob/GetJob.js":"25","/home/vladichka/VladTaras/Boichuk/src/functions/validity.js":"26","/home/vladichka/VladTaras/Boichuk/src/functions/getWorkByPassword.js":"27"},{"size":1348,"mtime":1608683358055,"results":"28","hashOfConfig":"29"},{"size":1772,"mtime":1608765446115,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1608206995000,"results":"31","hashOfConfig":"29"},{"size":1925,"mtime":1608815422965,"results":"32","hashOfConfig":"29"},{"size":2241,"mtime":1608679943060,"results":"33","hashOfConfig":"29"},{"size":377,"mtime":1608486601000,"results":"34","hashOfConfig":"29"},{"size":5113,"mtime":1608680781592,"results":"35","hashOfConfig":"29"},{"size":749,"mtime":1608680769612,"results":"36","hashOfConfig":"29"},{"size":2264,"mtime":1608766286175,"results":"37","hashOfConfig":"29"},{"size":5771,"mtime":1608680795180,"results":"38","hashOfConfig":"29"},{"size":3425,"mtime":1608815118627,"results":"39","hashOfConfig":"29"},{"size":5516,"mtime":1608680754088,"results":"40","hashOfConfig":"29"},{"size":1033,"mtime":1608815418905,"results":"41","hashOfConfig":"29"},{"size":124,"mtime":1608815177559,"results":"42","hashOfConfig":"29"},{"size":1204,"mtime":1608506377999,"results":"43","hashOfConfig":"29"},{"size":495,"mtime":1608487330000,"results":"44","hashOfConfig":"29"},{"size":326,"mtime":1608206995000,"results":"45","hashOfConfig":"29"},{"size":2031,"mtime":1608670474770,"results":"46","hashOfConfig":"29"},{"size":202,"mtime":1608299646000,"results":"47","hashOfConfig":"29"},{"size":3961,"mtime":1608766120706,"results":"48","hashOfConfig":"29"},{"size":10359,"mtime":1608815296460,"results":"49","hashOfConfig":"29"},{"size":375,"mtime":1608561721677,"results":"50","hashOfConfig":"29"},{"size":1423,"mtime":1608769700284,"results":"51","hashOfConfig":"29"},{"size":476,"mtime":1608505441430,"results":"52","hashOfConfig":"29"},{"size":4137,"mtime":1608815584033,"results":"53","hashOfConfig":"29"},{"size":715,"mtime":1608765893669,"results":"54","hashOfConfig":"29"},{"size":418,"mtime":1608814013581,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},"4tqs0z",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"59"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"59"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"59"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"59"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"59"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"59"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"59"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/vladichka/VladTaras/Boichuk/src/index.js",["119"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { createStore, compose, applyMiddleware, combineReducers } from \"redux\";\nimport workReducer from \"./store/reducers/workReducer\";\nimport userReducer from \"./store/reducers/userReducer\";\nimport thunk from \"redux-thunk\";\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst logger = (store) => {\n  return (next) => {\n    return (action) => {\n      console.log(\"middle\", action);\n      const result = next(action);\n      console.log(\"middle get state\", store.getState());\n      return result;\n    };\n  };\n};\nconst rootReducer = combineReducers({\n  auth: userReducer,\n  works: workReducer,\n});\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["120","121"],"/home/vladichka/VladTaras/Boichuk/src/App.js",[],"/home/vladichka/VladTaras/Boichuk/src/reportWebVitals.js",[],"/home/vladichka/VladTaras/Boichuk/src/store/reducers/workReducer.js",["122"],"/home/vladichka/VladTaras/Boichuk/src/store/reducers/userReducer.js",["123","124"],"import * as actionTypes from \"../actions/actionTypes\";\nconst initialState = {\n  token: null,\n  userId: null,\n  error: null,\n  redirect: null,\n  loading: null,\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_SUCCESS: {\n      return {\n        token: null,\n        userId: null,\n        error: null,\n        redirect: \"/login\",\n        loading: false,\n      };\n    }\n    case actionTypes.AUTH_FAIL: {\n      return {\n        token: null,\n        userId: null,\n        error: action.error,\n        loading: false,\n      };\n    }\n    case actionTypes.AUTH_START: {\n      return {\n        token: null,\n        userId: null,\n        error: null,\n        loading: true,\n      };\n    }\n    case actionTypes.LOGIN_START: {\n      return {\n        token: null,\n        userId: null,\n        error: null,\n        loading: true,\n        redirect: null,\n      };\n      return;\n    }\n    case actionTypes.LOGIN_FAIL: {\n      return {\n        token: null,\n        userId: null,\n        error: action.error,\n        loading: null,\n        redirect: null,\n      };\n    }\n    case actionTypes.LOGIN_SUCCESS: {\n      return {\n        token: action.token,\n        userId: action.userId,\n        error: null,\n        redirect: \"/about\",\n        loading: false,\n      };\n    }\n    case actionTypes.SET_PATH: {\n      if (action.path == \"null\") {\n        return {\n          ...state,\n          redirect: null,\n        };\n      } else {\n        return {\n          ...state,\n          redirect: action.path,\n        };\n      }\n    }\n    case actionTypes.LOGOUT: {\n      return {\n        token: null,\n        userId: null,\n        error: null,\n        loading: null,\n        redirect: null,\n      };\n    }\n    case actionTypes.CREATE_WORK_FAIL: {\n      return {\n        ...state,\n        error: action.error,\n        loading: false,\n      };\n    }\n    case actionTypes.CREATE_WORK_START: {\n      return {\n        ...state,\n        error: null,\n        loading: true,\n      };\n    }\n    case actionTypes.CREATE_WORK_SUCCESS: {\n      return {\n        ...state,\n        error: null,\n        loading: false,\n        redirect: \"/myWorks\",\n      };\n    }\n    default:\n      return state;\n  }\n};\nexport default reducer;\n","/home/vladichka/VladTaras/Boichuk/src/hoc/Layout/Layout.js",[],"/home/vladichka/VladTaras/Boichuk/src/containers/Login/Login.js",["125"],"import React, { Component } from \"react\";\nimport classes from \"./Login.module.css\";\nimport Card from \"../../components/UI/Card/Card\";\nimport InputElement from \"../../components/UI/Input/Input\";\nimport ButtonElement from \"../../components/UI/Button/Button\";\nimport * as actionTypes from \"../../store/actions/actionTypes\";\nimport * as actions from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nclass Login extends Component {\n  state = {\n    controls: {\n      email: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"email\",\n          placeholder: \"Mail Address\",\n        },\n        label: \"Email\",\n        touched: false,\n        value: \"\",\n        validation: {\n          required: true,\n          valid: false,\n          minLength: 6,\n          isEmail: true,\n        },\n      },\n      password: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"password\",\n          placeholder: \"Password\",\n        },\n        label: \"Password\",\n        touched: false,\n        value: \"\",\n        validation: {\n          required: true,\n          valid: false,\n          minLength: 6,\n          maxLength: 25,\n        },\n      },\n    },\n    signUp: true,\n  };\n  componentDidMount() {\n    if (this.props.token) {\n      this.props.setRedirectPath(\"/\");\n    } else {\n      this.props.setRedirectPath(\"null\");\n    }\n  }\n  checkValidity(value, rules) {\n    let isValid = true;\n    if (!rules) {\n      return true;\n    }\n    if (rules.required) {\n      isValid = value.trim() !== \"\" && isValid;\n    }\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n    if (rules.isEmail) {\n      const pattern = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n      console.log(value);\n      isValid = pattern.test(value) && isValid;\n      console.log(isValid);\n    }\n    if (rules.isNumeric) {\n      const pattern = /^\\d+$/;\n      isValid = pattern.test(value) && isValid;\n    }\n    return isValid;\n  }\n  inputChangedHandler = (event, controlName) => {\n    const updatedControls = {\n      ...this.state.controls,\n      [controlName]: {\n        ...this.state.controls[controlName],\n        value: event.target.value,\n        validation: {\n          ...this.state.controls[controlName].validation,\n          valid: this.checkValidity(\n            event.target.value,\n            this.state.controls[controlName].validation\n          ),\n        },\n        touched: true,\n      },\n    };\n    this.setState({ controls: updatedControls });\n  };\n  submitHandler = (event) => {\n    event.preventDefault();\n    this.props.onLogin(\n      this.state.controls.email.value,\n      this.state.controls.password.value,\n    );\n  };\n  render() {\n    const formElementsArray = [];\n    for (let key in this.state.controls) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.controls[key],\n      });\n    }\n    let form = formElementsArray.map((element) => {\n      return (\n        <InputElement\n          key={element.id}\n          changed={(event) => this.inputChangedHandler(event, element.id)}\n          elementType={element.config.elementType}\n          elementConfig={element.config.elementConfig}\n          invalid={!element.config.validation.valid}\n          value={element.config.value}\n          shouldValidate={element.config.validation.required}\n          touched={element.config.touched}\n          label={element.config.label}\n        />\n      );\n    });\n    let error = null;\n    if (this.props.error) {\n      error = (\n        <React.Fragment>\n          <style>\n            @import\n            url('https://fonts.googleapis.com/css2?family=Russo+One&display=swap');\n          </style>\n          <div className={classes.errorMessage}>{this.props.error}</div>\n        </React.Fragment>\n      );\n      console.log(\"fefef\");\n    }\n    let spinner = null;\n    if (this.props.loading) {\n      spinner = <Spinner />;\n    }\n    let redirect = null;\n    if (this.props.redirect) {\n      redirect = <Redirect to={this.props.redirect} />;\n    }\n    return (\n      <React.Fragment>\n        {spinner}\n        <Card titleName=\"Log in\" width=\"500px\">\n          {redirect}\n          <form className={classes.form} onSubmit={this.submitHandler}>\n            {form}\n            {error}\n            <ButtonElement btnType=\"Success\">OK</ButtonElement>\n          </form>\n        </Card>\n      </React.Fragment>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    userId: state.auth.userId,\n    error: state.auth.error,\n    redirect: state.auth.redirect,\n    loading: state.auth.loading,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onLogin: (login, password) => dispatch(actions.login(login, password)),\n    setRedirectPath: (path) => dispatch(actions.setRedirectPath(path)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","/home/vladichka/VladTaras/Boichuk/src/containers/Logout/Logout.js",[],"/home/vladichka/VladTaras/Boichuk/src/containers/Works/Works.js",["126","127","128"],"import React, { Component } from \"react\";\nimport * as actions from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport WorkComponent from \"../../components/Works/WorkComponent/WorkComponent\";\nimport classes from \"./Works.module.css\";\n\nclass MyWorks extends Component {\n  state = { works: [], didComponentsLoad: false };\n\n  componentDidMount() {\n    this.props.onUploadWorks(this.props.userId, this.props.token);\n    console.log(this.props.works);\n    this.props.setRedirectPath(\"null\");\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.works != this.props.works) {\n      this.setState({ didComponentsLoad: true });\n      this.state.works = this.props.works;\n    }\n  }\n\n  render() {\n    let worksRender;\n    if (this.state.didComponentsLoad == false) {\n      worksRender = this.props.works.map((work, id) => {\n        return (\n          <WorkComponent\n            key={id}\n            description={work.description}\n            name={work.name}\n            password={work.password}\n            workId={work.id}\n          />\n        );\n      });\n    } else {\n      worksRender = this.state.works.map((work, id) => {\n        return (\n          <WorkComponent\n            key={id}\n            description={work.description}\n            name={work.name}\n            password={work.password}\n            workId={work.id}\n          />\n        );\n      });\n    }\n\n    return (\n      <React.Fragment>\n        <ul className={classes.WorkList}>{worksRender}</ul>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    userId: state.auth.userId,\n    error: state.auth.error,\n    redirect: state.auth.redirect,\n    loading: state.auth.loading,\n    works: state.works.works,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onUploadWorks: (userId, token) =>\n      dispatch(actions.uploadWorks(userId, token)),\n    setRedirectPath: (path) => dispatch(actions.setRedirectPath(path)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(MyWorks);\n","/home/vladichka/VladTaras/Boichuk/src/containers/Auth/Auth.js",["129"],"import React, { Component } from \"react\";\nimport classes from \"./Auth.module.css\";\nimport Card from \"../../components/UI/Card/Card\";\nimport InputElement from \"../../components/UI/Input/Input\";\nimport ButtonElement from \"../../components/UI/Button/Button\";\nimport * as actionTypes from \"../../store/actions/actionTypes\";\nimport * as actions from \"../../store/actions/index\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nclass Auth extends Component {\n  state = {\n    controls: {\n      nickname: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"\",\n          placeholder: \"VladichBub\",\n        },\n        label: \"Nickname\",\n        touched: false,\n        value: \"\",\n        validation: {\n          required: true,\n          valid: false,\n          minLength: 4,\n          isEmail: false,\n        },\n      },\n      email: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"email\",\n          placeholder: \"Mail Address\",\n        },\n        label: \"Email\",\n        touched: false,\n        value: \"\",\n        validation: {\n          required: true,\n          valid: false,\n          minLength: 6,\n          isEmail: true,\n        },\n      },\n      password: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"password\",\n          placeholder: \"Password\",\n        },\n        label: \"Password\",\n        touched: false,\n        value: \"\",\n        validation: {\n          required: true,\n          valid: false,\n          minLength: 6,\n          maxLength: 25,\n        },\n      },\n      confirmPassword: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"password\",\n          placeholder: \"Confirm password\",\n        },\n        label: \"Confirm password\",\n        touched: false,\n        value: \"\",\n        validation: {\n          required: true,\n          valid: false,\n          minLength: 6,\n          maxLength: 25,\n        },\n      },\n    },\n    signUp: true,\n  };\n  checkValidity(value, rules) {\n    let isValid = true;\n    if (!rules) {\n      return true;\n    }\n    if (rules.required) {\n      isValid = value.trim() !== \"\" && isValid;\n    }\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n    if (rules.isEmail) {\n      const pattern = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n      console.log(value);\n      isValid = pattern.test(value) && isValid;\n      console.log(isValid);\n    }\n    if (rules.isNumeric) {\n      const pattern = /^\\d+$/;\n      isValid = pattern.test(value) && isValid;\n    }\n    return isValid;\n  }\n  inputChangedHandler = (event, controlName) => {\n    const updatedControls = {\n      ...this.state.controls,\n      [controlName]: {\n        ...this.state.controls[controlName],\n        value: event.target.value,\n        validation: {\n          ...this.state.controls[controlName].validation,\n          valid: this.checkValidity(\n            event.target.value,\n            this.state.controls[controlName].validation\n          ),\n        },\n        touched: true,\n      },\n    };\n    this.setState({ controls: updatedControls });\n  };\n  submitHandler = (event) => {\n    event.preventDefault();\n    this.props.onAuth(\n      this.state.controls.email.value,\n      this.state.controls.password.value,\n      this.state.controls.confirmPassword.value,\n      this.state.controls.nickname.value\n    );\n  };\n  render() {\n    const formElementsArray = [];\n    for (let key in this.state.controls) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.controls[key],\n      });\n    }\n    let form = formElementsArray.map((element) => {\n      return (\n        <InputElement\n          key={element.id}\n          changed={(event) => this.inputChangedHandler(event, element.id)}\n          elementType={element.config.elementType}\n          elementConfig={element.config.elementConfig}\n          invalid={!element.config.validation.valid}\n          value={element.config.value}\n          shouldValidate={element.config.validation.required}\n          touched={element.config.touched}\n          label={element.config.label}\n        />\n      );\n    });\n    let error = null;\n    if (this.props.error) {\n      error = (\n        <React.Fragment>\n          <style>\n            @import\n            url('https://fonts.googleapis.com/css2?family=Russo+One&display=swap');\n          </style>\n          <div className={classes.errorMessage}>{this.props.error}</div>\n        </React.Fragment>\n      );\n      console.log(\"fefef\");\n    }\n    let redirect = null;\n    if (this.props.redirect) {\n      redirect = <Redirect to={this.props.redirect} />;\n    }\n    let spinner = null;\n    if (this.props.loading) {\n      spinner = <Spinner />;\n    }\n    return (\n      <React.Fragment>\n        {spinner}\n        <Card titleName=\"Authentification\" width=\"500px\">\n          {redirect}\n          <form className={classes.form} onSubmit={this.submitHandler}>\n            {form}\n            {error}\n            <ButtonElement btnType=\"Success\">OK</ButtonElement>\n          </form>\n        </Card>\n      </React.Fragment>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    userId: state.auth.userId,\n    error: state.auth.error,\n    redirect: state.auth.redirect,\n    loading: state.auth.loading,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAuth: (login, password, repeatPassword, nickname) =>\n      dispatch(actions.auth(login, password, repeatPassword, nickname)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\n","/home/vladichka/VladTaras/Boichuk/src/components/About/About.js",["130","131","132","133","134"],"/home/vladichka/VladTaras/Boichuk/src/containers/Works/CreateWork/CreateWork.js",["135","136","137"],"import React, { Component } from \"react\";\nimport classes from \"../../Login/Login.module.css\";\nimport classesTwo from \"./CreateWork.module.css\";\nimport Card from \"../../../components/UI/Card/Card\";\nimport InputElement from \"../../../components/UI/Input/Input\";\nimport ButtonElement from \"../../../components/UI/Button/Button\";\nimport * as actionTypes from \"../../../store/actions/actionTypes\";\nimport * as actions from \"../../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\nclass CreateWork extends Component {\n  state = {\n    controls: {\n      WorkName: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"\",\n          placeholder: \"Dota 2\",\n        },\n        label: \"Work name\",\n        touched: false,\n        value: \"\",\n        validation: {\n          required: true,\n          valid: false,\n          minLength: 1,\n          maxLength: 20,\n          isEmail: false,\n        },\n      },\n      WorkDescription: {\n        elementType: \"textarea\",\n        elementConfig: {\n          type: \"\",\n          placeholder:\n            \"At w3schools.com you will learn how to make a website. They offer free tutorials in all web development technologies.\",\n        },\n        label: \"Description\",\n        touched: false,\n        value: \"\",\n        validation: {\n          required: true,\n          valid: false,\n          minLength: 3,\n          maxLength: 500,\n        },\n      },\n    },\n    signUp: true,\n  };\n  componentDidMount() {\n    this.props.setRedirectPath(\"null\");\n  }\n  checkValidity(value, rules) {\n    let isValid = true;\n    if (!rules) {\n      return true;\n    }\n    if (rules.required) {\n      isValid = value.trim() !== \"\" && isValid;\n    }\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n    if (rules.isEmail) {\n      const pattern = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n      console.log(value);\n      isValid = pattern.test(value) && isValid;\n      console.log(isValid);\n    }\n    if (rules.isNumeric) {\n      const pattern = /^\\d+$/;\n      isValid = pattern.test(value) && isValid;\n    }\n    return isValid;\n  }\n  inputChangedHandler = (event, controlName) => {\n    const updatedControls = {\n      ...this.state.controls,\n      [controlName]: {\n        ...this.state.controls[controlName],\n        value: event.target.value,\n        validation: {\n          ...this.state.controls[controlName].validation,\n          valid: this.checkValidity(\n            event.target.value,\n            this.state.controls[controlName].validation\n          ),\n        },\n        touched: true,\n      },\n    };\n    this.setState({ controls: updatedControls });\n  };\n  submitHandler = (event) => {\n    event.preventDefault();\n    this.props.onCreateWork(\n      this.state.controls.WorkName.value,\n      this.state.controls.WorkDescription.value,\n      this.props.userId,\n      this.props.token\n    );\n  };\n  render() {\n    const formElementsArray = [];\n    for (let key in this.state.controls) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.controls[key],\n      });\n    }\n    let form = formElementsArray.map((element) => {\n      return (\n        <InputElement\n          key={element.id}\n          changed={(event) => this.inputChangedHandler(event, element.id)}\n          elementType={element.config.elementType}\n          elementConfig={element.config.elementConfig}\n          invalid={!element.config.validation.valid}\n          value={element.config.value}\n          shouldValidate={element.config.validation.required}\n          touched={element.config.touched}\n          label={element.config.label}\n        />\n      );\n    });\n    let error = null;\n    if (this.props.error) {\n      error = (\n        <React.Fragment>\n          <style>\n            @import\n            url('https://fonts.googleapis.com/css2?family=Russo+One&display=swap');\n          </style>\n          <div className={classes.errorMessage}>{this.props.error}</div>\n        </React.Fragment>\n      );\n      console.log(\"fefef\");\n    }\n    let spinner = null;\n    if (this.props.loading) {\n      spinner = <Spinner />;\n    }\n    let redirect = null;\n    if (this.props.redirect) {\n      redirect = <Redirect to={this.props.redirect} />;\n    }\n    if (this.props.redirect == null || this.props.redirect == \"null\") {\n      redirect = null;\n    }\n\n    return (\n      <React.Fragment>\n        {spinner}\n        <Card titleName=\"Create new work\" width=\"500px\">\n          {redirect}\n          <form className={classes.form} onSubmit={this.submitHandler}>\n            {form}\n            {error}\n            <ButtonElement btnType=\"Success\">CREATE</ButtonElement>\n          </form>\n        </Card>\n      </React.Fragment>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n    return {\n        token: state.auth.token,\n        userId: state.auth.userId,\n        error: state.auth.error,\n        redirect: state.auth.redirect,\n        loading: state.auth.loading,\n      };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onCreateWork: (name, description, userId, token) =>\n      dispatch(actions.createWork(name, description, userId, token)),\n    setRedirectPath: (path) => dispatch(actions.setRedirectPath(path)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateWork);\n","/home/vladichka/VladTaras/Boichuk/src/store/actions/actionTypes.js",[],"/home/vladichka/VladTaras/Boichuk/src/store/actions/index.js",[],"/home/vladichka/VladTaras/Boichuk/src/components/Navigation/Toolbar/Toolbar.js",[],"/home/vladichka/VladTaras/Boichuk/src/components/UI/Card/Card.js",[],"/home/vladichka/VladTaras/Boichuk/src/components/UI/Button/Button.js",[],"/home/vladichka/VladTaras/Boichuk/src/components/UI/Input/Input.js",[],"/home/vladichka/VladTaras/Boichuk/src/components/UI/Spinner/Spinner.js",[],"/home/vladichka/VladTaras/Boichuk/src/components/Works/WorkComponent/WorkComponent.js",["138"],"import React, { Component } from \"react\";\n\nimport classes from \"./WorkComponent.module.css\";\nimport \"../../../../node_modules/@fortawesome/fontawesome-free/css/all.css\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport * as actions from \"../../../store/actions/actions\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\nclass WorkComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      copied: false,\n      delete: false,\n    };\n  }\n\n  cancelDelete = () => {\n    console.log(\"pyk\");\n    this.setState({\n      delete: !this.state.delete,\n    });\n  };\n  removeWork = (workId) => {\n    this.props.onRemoveWork(workId, this.props.token, this.props.works);\n  };\n\n  render() {\n    return (\n      <li className={classes.Work}>\n        <div className={classes.TopWorkHeader}>\n          <div className={classes.RemoveWork} onClick={this.cancelDelete}>\n            <i class=\"fas fa-trash-alt\"></i>\n          </div>\n          <div className={classes.Label}>{this.props.name}</div>\n        </div>\n        <div className={classes.Description}>\n          <style>\n            @import\n            url('https://fonts.googleapis.com/css2?family=Langar&family=Pacifico&family=Questrial&display=swap');\n          </style>\n          {this.props.description}\n        </div>\n\n        <div className={classes.Password}>\n          <style>\n            @import\n            url('https://fonts.googleapis.com/css2?family=Andika+New+Basic:ital@1&display=swap');\n          </style>\n          <div>password:</div>\n          <div className={classes.PasswordFont}>{this.props.password}</div>\n          <CopyToClipboard onCopy={this.props.copyFunc} text=\"zabastovka2002\">\n            <div className={classes.clipBoard}>\n              <i class={\"far fa-copy\"}></i>\n            </div>\n          </CopyToClipboard>\n        </div>\n        <div className={classes.Users}>\n          <div className={classes.UserGroup}>\n            <i class=\"fa fa-users\" aria-hidden=\"true\">\n              :\n            </i>\n            <font className={classes.UsersGroupValue}>5</font>\n          </div>\n          <div className={classes.UserGroup}>\n            <i class=\"fas fa-user-tie\">:</i>\n            <font className={classes.UsersGroupValue}>5</font>\n          </div>\n          <div className={classes.UserGroup}>\n            <i class=\"fas fa-hospital-user\">:</i>\n            <font className={classes.UsersGroupValue}>5</font>\n          </div>\n        </div>\n        <div\n          className={\n            this.state.delete\n              ? [classes.active, classes.DeleteContainer].join(\" \")\n              : classes.DeleteContainer\n          }\n        >\n          <div className={classes.container}>\n            <h1>Delete Work</h1>\n            <p>Are you sure you want to delete your work?</p>\n\n            <div className={classes.clearfix}>\n              <button\n                type=\"button\"\n                onClick={this.cancelDelete}\n                className={classes.cancelbtn}\n              >\n                Cancel\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => this.removeWork(this.props.workId)}\n                className={classes.deletebtn}\n              >\n                Delete\n              </button>\n            </div>\n          </div>\n        </div>\n      </li>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    userId: state.auth.userId,\n    error: state.auth.error,\n    redirect: state.auth.redirect,\n    loading: state.auth.loading,\n    works: state.works.works,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onRemoveWork: (id, token, oldWorks) =>\n      dispatch(actions.removeWork(id, token, oldWorks)),\n    setRedirectPath: (path) => dispatch(actions.setRedirectPath(path)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(WorkComponent);\n","/home/vladichka/VladTaras/Boichuk/src/store/actions/actions.js",["139","140","141","142","143","144","145"],"/home/vladichka/VladTaras/Boichuk/src/components/Navigation/Toolbar/Logo/Logo.js",[],"/home/vladichka/VladTaras/Boichuk/src/components/Navigation/Toolbar/NavigationItems/NavigationItems.js",["146"],"import React, { Component } from \"react\";\nimport classes from \"./NavigationItems.module.css\";\nimport NavigationItem from \"./NavigationItem/NavigationItem\";\nimport { connect } from \"react-redux\";\nclass NavigationItems extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    let links = [];\n    if (this.props.token) {\n      links = [\n        { link: \"/getJob\", label: \"Get job\" },\n        { link: \"/myWorks\", label: \"My works\" },\n        { link: \"/createNewJob\", label: \"Create work\" },\n        { link: \"/about\", label: \"About\" },\n        { link: \"/logout\", label: \"Log out\" },\n         \n        \n      ];\n    } else {\n      links = [\n        { link: \"/login\", label: \"Log in\" },\n        { link: \"/auth\", label: \"Registration\" },\n      ];\n    }\n    let linksElements = links.map((element, id) => {\n      return (\n        <NavigationItem {...this.props} link={element.link}>\n          {element.label}\n        </NavigationItem>\n      );\n    });\n    return (\n      <nav\n        className={\n          this.props.clicked\n            ? [classes.active, classes.headerMenu].join(\" \")\n            : classes.headerMenu\n        }\n      >\n        <ul className={classes.NavigationItems}>{linksElements}</ul>\n      </nav>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    userId: state.auth.userId,\n  };\n};\n\nexport default connect(mapStateToProps)(NavigationItems);\n","/home/vladichka/VladTaras/Boichuk/src/components/Navigation/Toolbar/NavigationItems/NavigationItem/NavigationItem.js",[],"/home/vladichka/VladTaras/Boichuk/src/containers/GetJob/GetJob.js",["147"],"/home/vladichka/VladTaras/Boichuk/src/functions/validity.js",[],"/home/vladichka/VladTaras/Boichuk/src/functions/getWorkByPassword.js",["148"],{"ruleId":"149","severity":1,"message":"150","line":13,"column":7,"nodeType":"151","messageId":"152","endLine":13,"endColumn":13},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":78,"column":23,"nodeType":"159","messageId":"160","endLine":78,"endColumn":25},{"ruleId":"161","severity":1,"message":"162","line":44,"column":7,"nodeType":"163","messageId":"164","endLine":44,"endColumn":14},{"ruleId":"157","severity":1,"message":"158","line":65,"column":23,"nodeType":"159","messageId":"160","endLine":65,"endColumn":25},{"ruleId":"149","severity":1,"message":"165","line":6,"column":13,"nodeType":"151","messageId":"152","endLine":6,"endColumn":24},{"ruleId":"157","severity":1,"message":"166","line":16,"column":25,"nodeType":"159","messageId":"160","endLine":16,"endColumn":27},{"ruleId":"167","severity":1,"message":"168","line":18,"column":7,"nodeType":"169","endLine":18,"endColumn":17},{"ruleId":"157","severity":1,"message":"158","line":24,"column":38,"nodeType":"159","messageId":"160","endLine":24,"endColumn":40},{"ruleId":"149","severity":1,"message":"165","line":6,"column":13,"nodeType":"151","messageId":"152","endLine":6,"endColumn":24},{"ruleId":"170","severity":1,"message":"171","line":30,"column":13,"nodeType":"172","endLine":30,"endColumn":42},{"ruleId":"170","severity":1,"message":"171","line":61,"column":13,"nodeType":"172","endLine":61,"endColumn":36},{"ruleId":"170","severity":1,"message":"171","line":68,"column":15,"nodeType":"172","endLine":68,"endColumn":38},{"ruleId":"170","severity":1,"message":"171","line":72,"column":13,"nodeType":"172","endLine":72,"endColumn":36},{"ruleId":"170","severity":1,"message":"171","line":79,"column":15,"nodeType":"172","endLine":79,"endColumn":38},{"ruleId":"149","severity":1,"message":"173","line":3,"column":8,"nodeType":"151","messageId":"152","endLine":3,"endColumn":18},{"ruleId":"149","severity":1,"message":"165","line":7,"column":13,"nodeType":"151","messageId":"152","endLine":7,"endColumn":24},{"ruleId":"157","severity":1,"message":"158","line":152,"column":60,"nodeType":"159","messageId":"160","endLine":152,"endColumn":62},{"ruleId":"149","severity":1,"message":"174","line":8,"column":8,"nodeType":"151","messageId":"152","endLine":8,"endColumn":15},{"ruleId":"157","severity":1,"message":"158","line":27,"column":9,"nodeType":"159","messageId":"160","endLine":27,"endColumn":11},{"ruleId":"157","severity":1,"message":"158","line":91,"column":9,"nodeType":"159","messageId":"160","endLine":91,"endColumn":11},{"ruleId":"157","severity":1,"message":"158","line":130,"column":14,"nodeType":"159","messageId":"160","endLine":130,"endColumn":16},{"ruleId":"175","severity":1,"message":"176","line":216,"column":38,"nodeType":"177","messageId":"178","endLine":216,"endColumn":40},{"ruleId":"157","severity":1,"message":"158","line":217,"column":34,"nodeType":"159","messageId":"160","endLine":217,"endColumn":36},{"ruleId":"157","severity":1,"message":"166","line":275,"column":31,"nodeType":"159","messageId":"160","endLine":275,"endColumn":33},{"ruleId":"157","severity":1,"message":"166","line":303,"column":25,"nodeType":"159","messageId":"160","endLine":303,"endColumn":27},{"ruleId":"179","severity":1,"message":"180","line":6,"column":3,"nodeType":"181","messageId":"182","endLine":8,"endColumn":4},{"ruleId":"149","severity":1,"message":"165","line":6,"column":13,"nodeType":"151","messageId":"152","endLine":6,"endColumn":24},{"ruleId":"157","severity":1,"message":"158","line":6,"column":31,"nodeType":"159","messageId":"160","endLine":6,"endColumn":33},"no-unused-vars","'logger' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["183"],"no-negated-in-lhs",["184"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'actionTypes' is defined but never used.","Expected '!==' and instead saw '!='.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'classesTwo' is defined but never used.","'Spinner' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]