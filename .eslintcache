[{"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\index.js":"1","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\App.js":"2","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\reportWebVitals.js":"3","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\store\\reducers\\workReducer.js":"4","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\store\\reducers\\workersReducer.js":"5","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\store\\reducers\\userReducer.js":"6","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\containers\\Works\\Works.js":"7","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\containers\\Login\\Login.js":"8","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\containers\\Auth\\Auth.js":"9","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\containers\\GetJob\\GetJob.js":"10","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\containers\\Logout\\Logout.js":"11","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\containers\\Works\\CreateWork\\CreateWork.js":"12","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\hoc\\Layout\\Layout.js":"13","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\containers\\SelectedWorkWorkers\\SelectedWorkWorkers.js":"14","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\containers\\Tasks\\MyTasks.js":"15","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\About\\About.js":"16","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\store\\actions\\actionTypes.js":"17","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\store\\actions\\index.js":"18","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\functions\\validity.js":"19","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\User\\User.js":"20","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\containers\\Tasks\\TaskConponent\\TaskComponent.js":"21","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\Works\\WorkComponent\\WorkComponent.js":"22","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\UI\\Spinner\\Spinner.js":"23","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\UI\\Card\\Card.js":"24","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\UI\\Input\\Input.js":"25","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\UI\\Button\\Button.js":"26","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\Navigation\\Toolbar\\Toolbar.js":"27","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\store\\actions\\actions.js":"28","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\Navigation\\Toolbar\\NavigationItems\\NavigationItems.js":"29","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\Navigation\\Toolbar\\Logo\\Logo.js":"30","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\functions\\getWorkByPassword.js":"31","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\functions\\getWorkersByWork.js":"32","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\Navigation\\Toolbar\\NavigationItems\\NavigationItem\\NavigationItem.js":"33","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\TasksArray\\TasksArray.js":"34","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\store\\reducers\\taskReducer.js":"35"},{"size":1563,"mtime":1609095442937,"results":"36","hashOfConfig":"37"},{"size":2565,"mtime":1609091133418,"results":"38","hashOfConfig":"37"},{"size":375,"mtime":1609070817706,"results":"39","hashOfConfig":"37"},{"size":3046,"mtime":1609070817732,"results":"40","hashOfConfig":"37"},{"size":1785,"mtime":1609071532226,"results":"41","hashOfConfig":"37"},{"size":2353,"mtime":1609070817731,"results":"42","hashOfConfig":"37"},{"size":2509,"mtime":1609087966646,"results":"43","hashOfConfig":"37"},{"size":5294,"mtime":1609070817679,"results":"44","hashOfConfig":"37"},{"size":5979,"mtime":1609070817678,"results":"45","hashOfConfig":"37"},{"size":4278,"mtime":1609070817678,"results":"46","hashOfConfig":"37"},{"size":776,"mtime":1609070817680,"results":"47","hashOfConfig":"37"},{"size":5703,"mtime":1609070817688,"results":"48","hashOfConfig":"37"},{"size":390,"mtime":1609070817704,"results":"49","hashOfConfig":"37"},{"size":2338,"mtime":1609070817680,"results":"50","hashOfConfig":"37"},{"size":1180,"mtime":1609094574249,"results":"51","hashOfConfig":"37"},{"size":3583,"mtime":1609070817651,"results":"52","hashOfConfig":"37"},{"size":2246,"mtime":1609091855611,"results":"53","hashOfConfig":"37"},{"size":280,"mtime":1609092200261,"results":"54","hashOfConfig":"37"},{"size":742,"mtime":1609070817696,"results":"55","hashOfConfig":"37"},{"size":9220,"mtime":1609071282387,"results":"56","hashOfConfig":"37"},{"size":2906,"mtime":1609085842184,"results":"57","hashOfConfig":"37"},{"size":4793,"mtime":1609087983431,"results":"58","hashOfConfig":"37"},{"size":210,"mtime":1609070817673,"results":"59","hashOfConfig":"37"},{"size":512,"mtime":1609070817672,"results":"60","hashOfConfig":"37"},{"size":2108,"mtime":1609070817673,"results":"61","hashOfConfig":"37"},{"size":339,"mtime":1609070817671,"results":"62","hashOfConfig":"37"},{"size":1262,"mtime":1609076526905,"results":"63","hashOfConfig":"37"},{"size":22777,"mtime":1609094786952,"results":"64","hashOfConfig":"37"},{"size":1664,"mtime":1609093251458,"results":"65","hashOfConfig":"37"},{"size":389,"mtime":1609070817667,"results":"66","hashOfConfig":"37"},{"size":431,"mtime":1609070817693,"results":"67","hashOfConfig":"37"},{"size":712,"mtime":1609070817695,"results":"68","hashOfConfig":"37"},{"size":1815,"mtime":1609096132452,"results":"69","hashOfConfig":"37"},{"size":2639,"mtime":1609091471899,"results":"70","hashOfConfig":"37"},{"size":1282,"mtime":1609094864608,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1gpp7qd",{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"76"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"76"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\index.js",["159"],"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\App.js",[],["160","161"],"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\reportWebVitals.js",[],"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\store\\reducers\\workReducer.js",["162"],"import * as actionTypes from \"../actions/actionTypes\";\r\nconst initialState = {\r\n  works: [],\r\n  loading: false,\r\n  error: false,\r\n  redirectWork: null,\r\n  worksTask: [],\r\n};\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.UPLOAD_WORKS_START: {\r\n      return {\r\n        ...state,\r\n        error: false,\r\n        loading: true,\r\n      };\r\n    }\r\n    case actionTypes.UPLOAD_WORKS_FAIL: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        loading: false,\r\n      };\r\n    }\r\n    case actionTypes.UPLOAD_WORKS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        error: false,\r\n        loading: false,\r\n        works: action.works,\r\n      };\r\n    }\r\n    case actionTypes.REMOVE_WORK_START: {\r\n      return {\r\n        ...state,\r\n        error: false,\r\n        loading: true,\r\n      };\r\n    }\r\n    case actionTypes.REMOVE_WORK_FAIL: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        loading: false,\r\n      };\r\n    }\r\n    case actionTypes.REMOVE_WORK_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        error: false,\r\n        loading: false,\r\n        works: action.works,\r\n        redirectWork: \"/myWorks\",\r\n      };\r\n    }\r\n    case actionTypes.GET_JOB_START: {\r\n      return {\r\n        ...state,\r\n        error: false,\r\n        loading: true,\r\n      };\r\n    }\r\n    case actionTypes.GET_JOB_FAIL: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        loading: false,\r\n      };\r\n    }\r\n    case actionTypes.GET_JOB_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        error: false,\r\n        loading: false,\r\n        redirectWork: \"/about\",\r\n      };\r\n    }\r\n    case actionTypes.SET_REDIRECT_WORK_PATH: {\r\n      if (action.path == \"null\") {\r\n        return {\r\n          ...state,\r\n          redirectWork: null,\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          redirectWork: action.path,\r\n        };\r\n      }\r\n    }\r\n    //\r\n    //\r\n    //\r\n    case actionTypes.GET_WORKS_TASKS_START: {\r\n      return {\r\n        ...state,\r\n        error: false,\r\n        loading: true,\r\n      };\r\n    }\r\n    case actionTypes.GET_WORKS_TASKS_FAIL: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        loading: false,\r\n      };\r\n    }\r\n    case actionTypes.GET_WORKS_TASKS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        error: false,\r\n        loading: false,\r\n        worksTask: action.worksTask,\r\n      };\r\n    }\r\n    //\r\n    //\r\n    //\r\n    case actionTypes.LEAVE_WORK_FAIL: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        loading: false,\r\n      };\r\n    }\r\n    case actionTypes.LEAVE_WORK_START: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        loading: true,\r\n      };\r\n    }\r\n    case actionTypes.LEAVE_WORK_SUCCESS: {\r\n     \r\n      return {\r\n        ...state,\r\n        error: false,\r\n        loading: false,\r\n        worksTask:action.newTasks,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default reducer;\r\n","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\store\\reducers\\workersReducer.js",[],"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\store\\reducers\\userReducer.js",["163","164"],"import * as actionTypes from \"../actions/actionTypes\";\r\nconst initialState = {\r\n  token: null,\r\n  userId: null,\r\n  error: null,\r\n  redirect: null,\r\n  loading: null,\r\n};\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.AUTH_SUCCESS: {\r\n      return {\r\n        token: null,\r\n        userId: null,\r\n        error: null,\r\n        redirect: \"/login\",\r\n        loading: false,\r\n      };\r\n    }\r\n    case actionTypes.AUTH_FAIL: {\r\n      return {\r\n        token: null,\r\n        userId: null,\r\n        error: action.error,\r\n        loading: false,\r\n      };\r\n    }\r\n    case actionTypes.AUTH_START: {\r\n      return {\r\n        token: null,\r\n        userId: null,\r\n        error: null,\r\n        loading: true,\r\n      };\r\n    }\r\n    case actionTypes.LOGIN_START: {\r\n      return {\r\n        token: null,\r\n        userId: null,\r\n        error: null,\r\n        loading: true,\r\n        redirect: null,\r\n      };\r\n      return;\r\n    }\r\n    case actionTypes.LOGIN_FAIL: {\r\n      return {\r\n        token: null,\r\n        userId: null,\r\n        error: action.error,\r\n        loading: null,\r\n        redirect: null,\r\n      };\r\n    }\r\n    case actionTypes.LOGIN_SUCCESS: {\r\n      return {\r\n        token: action.token,\r\n        userId: action.userId,\r\n        error: null,\r\n        redirect: \"/about\",\r\n        loading: false,\r\n      };\r\n    }\r\n    case actionTypes.SET_PATH: {\r\n      if (action.path == \"null\") {\r\n        return {\r\n          ...state,\r\n          redirect: null,\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          redirect: action.path,\r\n        };\r\n      }\r\n    }\r\n    case actionTypes.LOGOUT: {\r\n      return {\r\n        token: null,\r\n        userId: null,\r\n        error: null,\r\n        loading: null,\r\n        redirect: null,\r\n      };\r\n    }\r\n    case actionTypes.CREATE_WORK_FAIL: {\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        loading: false,\r\n      };\r\n    }\r\n    case actionTypes.CREATE_WORK_START: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        loading: true,\r\n      };\r\n    }\r\n    case actionTypes.CREATE_WORK_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        loading: false,\r\n        redirect: \"/myWorks\",\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default reducer;\r\n","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\containers\\Works\\Works.js",["165","166","167"],"import React, { Component } from \"react\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport WorkComponent from \"../../components/Works/WorkComponent/WorkComponent\";\r\nimport classes from \"./Works.module.css\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nclass MyWorks extends Component {\r\n  state = { works: [], didComponentsLoad: false };\r\n\r\n  componentDidMount() {\r\n    this.props.onUploadWorks(this.props.userId, this.props.token);\r\n    console.log(this.props.works);\r\n    this.props.setRedirectPath(\"null\");\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.works != this.props.works) {\r\n      this.setState({ didComponentsLoad: true });\r\n      this.state.works = this.props.works;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let spinner = null;\r\n    if (this.props.loadingWork) {\r\n      spinner = <Spinner />;\r\n    }\r\n    let worksRender;\r\n    if (this.state.didComponentsLoad == false) {\r\n      worksRender = this.props.works.map((work, id) => {\r\n        return (\r\n          <WorkComponent\r\n            key={id}\r\n            description={work.description}\r\n            name={work.name}\r\n            password={work.password}\r\n            workId={work.id}\r\n            workers={work.workers ? work.workers : null}\r\n            index={id}\r\n          />\r\n        );\r\n      });\r\n    } else {\r\n      worksRender = this.state.works.map((work, id) => {\r\n        return (\r\n          <WorkComponent\r\n            key={id}\r\n            description={work.description}\r\n            name={work.name}\r\n            password={work.password}\r\n            workId={work.id}\r\n            workers={work.workers ? work.workers : null}\r\n            index={id}\r\n          />\r\n        );\r\n      });\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {spinner}\r\n        <ul className={classes.WorkList}>{worksRender}</ul>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n    error: state.auth.error,\r\n    redirect: state.auth.redirect,\r\n    loading: state.auth.loading,\r\n    works: state.works.works,\r\n    loadingWork: state.works.loading,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onUploadWorks: (userId, token) =>\r\n      dispatch(actions.uploadWorks(userId, token)),\r\n    setRedirectPath: (path) => dispatch(actions.setRedirectPath(path)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyWorks);\r\n","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\containers\\Login\\Login.js",["168"],"import React, { Component } from \"react\";\r\nimport classes from \"./Login.module.css\";\r\nimport Card from \"../../components/UI/Card/Card\";\r\nimport InputElement from \"../../components/UI/Input/Input\";\r\nimport ButtonElement from \"../../components/UI/Button/Button\";\r\nimport * as actionTypes from \"../../store/actions/actionTypes\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nclass Login extends Component {\r\n  state = {\r\n    controls: {\r\n      email: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"email\",\r\n          placeholder: \"Mail Address\",\r\n        },\r\n        label: \"Email\",\r\n        touched: false,\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          valid: false,\r\n          minLength: 6,\r\n          isEmail: true,\r\n        },\r\n      },\r\n      password: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"password\",\r\n          placeholder: \"Password\",\r\n        },\r\n        label: \"Password\",\r\n        touched: false,\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          valid: false,\r\n          minLength: 6,\r\n          maxLength: 25,\r\n        },\r\n      },\r\n    },\r\n    signUp: true,\r\n  };\r\n  componentDidMount() {\r\n    if (this.props.token) {\r\n      this.props.setRedirectPath(\"/\");\r\n    } else {\r\n      this.props.setRedirectPath(\"null\");\r\n    }\r\n  }\r\n  checkValidity(value, rules) {\r\n    let isValid = true;\r\n    if (!rules) {\r\n      return true;\r\n    }\r\n    if (rules.required) {\r\n      isValid = value.trim() !== \"\" && isValid;\r\n    }\r\n    if (rules.minLength) {\r\n      isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n    if (rules.maxLength) {\r\n      isValid = value.length <= rules.maxLength && isValid;\r\n    }\r\n    if (rules.isEmail) {\r\n      const pattern = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n      console.log(value);\r\n      isValid = pattern.test(value) && isValid;\r\n      console.log(isValid);\r\n    }\r\n    if (rules.isNumeric) {\r\n      const pattern = /^\\d+$/;\r\n      isValid = pattern.test(value) && isValid;\r\n    }\r\n    return isValid;\r\n  }\r\n  inputChangedHandler = (event, controlName) => {\r\n    const updatedControls = {\r\n      ...this.state.controls,\r\n      [controlName]: {\r\n        ...this.state.controls[controlName],\r\n        value: event.target.value,\r\n        validation: {\r\n          ...this.state.controls[controlName].validation,\r\n          valid: this.checkValidity(\r\n            event.target.value,\r\n            this.state.controls[controlName].validation\r\n          ),\r\n        },\r\n        touched: true,\r\n      },\r\n    };\r\n    this.setState({ controls: updatedControls });\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    this.props.onLogin(\r\n      this.state.controls.email.value,\r\n      this.state.controls.password.value,\r\n    );\r\n  };\r\n  render() {\r\n    const formElementsArray = [];\r\n    for (let key in this.state.controls) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.controls[key],\r\n      });\r\n    }\r\n    let form = formElementsArray.map((element) => {\r\n      return (\r\n        <InputElement\r\n          key={element.id}\r\n          changed={(event) => this.inputChangedHandler(event, element.id)}\r\n          elementType={element.config.elementType}\r\n          elementConfig={element.config.elementConfig}\r\n          invalid={!element.config.validation.valid}\r\n          value={element.config.value}\r\n          shouldValidate={element.config.validation.required}\r\n          touched={element.config.touched}\r\n          label={element.config.label}\r\n        />\r\n      );\r\n    });\r\n    let error = null;\r\n    if (this.props.error) {\r\n      error = (\r\n        <React.Fragment>\r\n          <style>\r\n            @import\r\n            url('https://fonts.googleapis.com/css2?family=Russo+One&display=swap');\r\n          </style>\r\n          <div className={classes.errorMessage}>{this.props.error}</div>\r\n        </React.Fragment>\r\n      );\r\n      console.log(\"fefef\");\r\n    }\r\n    let spinner = null;\r\n    if (this.props.loading) {\r\n      spinner = <Spinner />;\r\n    }\r\n    let redirect = null;\r\n    if (this.props.redirect) {\r\n      redirect = <Redirect to={this.props.redirect} />;\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        {spinner}\r\n        <Card titleName=\"Log in\" width=\"500px\">\r\n          {redirect}\r\n          <form className={classes.form} onSubmit={this.submitHandler}>\r\n            {form}\r\n            {error}\r\n            <ButtonElement btnType=\"Success\">OK</ButtonElement>\r\n          </form>\r\n        </Card>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n    error: state.auth.error,\r\n    redirect: state.auth.redirect,\r\n    loading: state.auth.loading,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onLogin: (login, password) => dispatch(actions.login(login, password)),\r\n    setRedirectPath: (path) => dispatch(actions.setRedirectPath(path)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\containers\\Auth\\Auth.js",["169"],"import React, { Component } from \"react\";\r\nimport classes from \"./Auth.module.css\";\r\nimport Card from \"../../components/UI/Card/Card\";\r\nimport InputElement from \"../../components/UI/Input/Input\";\r\nimport ButtonElement from \"../../components/UI/Button/Button\";\r\nimport * as actionTypes from \"../../store/actions/actionTypes\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nclass Auth extends Component {\r\n  state = {\r\n    controls: {\r\n      nickname: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"\",\r\n          placeholder: \"VladichBub\",\r\n        },\r\n        label: \"Nickname\",\r\n        touched: false,\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          valid: false,\r\n          minLength: 4,\r\n          isEmail: false,\r\n        },\r\n      },\r\n      email: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"email\",\r\n          placeholder: \"Mail Address\",\r\n        },\r\n        label: \"Email\",\r\n        touched: false,\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          valid: false,\r\n          minLength: 6,\r\n          isEmail: true,\r\n        },\r\n      },\r\n      password: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"password\",\r\n          placeholder: \"Password\",\r\n        },\r\n        label: \"Password\",\r\n        touched: false,\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          valid: false,\r\n          minLength: 6,\r\n          maxLength: 25,\r\n        },\r\n      },\r\n      confirmPassword: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"password\",\r\n          placeholder: \"Confirm password\",\r\n        },\r\n        label: \"Confirm password\",\r\n        touched: false,\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          valid: false,\r\n          minLength: 6,\r\n          maxLength: 25,\r\n        },\r\n      },\r\n    },\r\n    signUp: true,\r\n  };\r\n  checkValidity(value, rules) {\r\n    let isValid = true;\r\n    if (!rules) {\r\n      return true;\r\n    }\r\n    if (rules.required) {\r\n      isValid = value.trim() !== \"\" && isValid;\r\n    }\r\n    if (rules.minLength) {\r\n      isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n    if (rules.maxLength) {\r\n      isValid = value.length <= rules.maxLength && isValid;\r\n    }\r\n    if (rules.isEmail) {\r\n      const pattern = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n      console.log(value);\r\n      isValid = pattern.test(value) && isValid;\r\n      console.log(isValid);\r\n    }\r\n    if (rules.isNumeric) {\r\n      const pattern = /^\\d+$/;\r\n      isValid = pattern.test(value) && isValid;\r\n    }\r\n    return isValid;\r\n  }\r\n  inputChangedHandler = (event, controlName) => {\r\n    const updatedControls = {\r\n      ...this.state.controls,\r\n      [controlName]: {\r\n        ...this.state.controls[controlName],\r\n        value: event.target.value,\r\n        validation: {\r\n          ...this.state.controls[controlName].validation,\r\n          valid: this.checkValidity(\r\n            event.target.value,\r\n            this.state.controls[controlName].validation\r\n          ),\r\n        },\r\n        touched: true,\r\n      },\r\n    };\r\n    this.setState({ controls: updatedControls });\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    this.props.onAuth(\r\n      this.state.controls.email.value,\r\n      this.state.controls.password.value,\r\n      this.state.controls.confirmPassword.value,\r\n      this.state.controls.nickname.value\r\n    );\r\n  };\r\n  render() {\r\n    const formElementsArray = [];\r\n    for (let key in this.state.controls) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.controls[key],\r\n      });\r\n    }\r\n    let form = formElementsArray.map((element) => {\r\n      return (\r\n        <InputElement\r\n          key={element.id}\r\n          changed={(event) => this.inputChangedHandler(event, element.id)}\r\n          elementType={element.config.elementType}\r\n          elementConfig={element.config.elementConfig}\r\n          invalid={!element.config.validation.valid}\r\n          value={element.config.value}\r\n          shouldValidate={element.config.validation.required}\r\n          touched={element.config.touched}\r\n          label={element.config.label}\r\n        />\r\n      );\r\n    });\r\n    let error = null;\r\n    if (this.props.error) {\r\n      error = (\r\n        <React.Fragment>\r\n          <style>\r\n            @import\r\n            url('https://fonts.googleapis.com/css2?family=Russo+One&display=swap');\r\n          </style>\r\n          <div className={classes.errorMessage}>{this.props.error}</div>\r\n        </React.Fragment>\r\n      );\r\n      console.log(\"fefef\");\r\n    }\r\n    let redirect = null;\r\n    if (this.props.redirect) {\r\n      redirect = <Redirect to={this.props.redirect} />;\r\n    }\r\n    let spinner = null;\r\n    if (this.props.loading) {\r\n      spinner = <Spinner />;\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        {spinner}\r\n        <Card titleName=\"Authentification\" width=\"500px\">\r\n          {redirect}\r\n          <form className={classes.form} onSubmit={this.submitHandler}>\r\n            {form}\r\n            {error}\r\n            <ButtonElement btnType=\"Success\">OK</ButtonElement>\r\n          </form>\r\n        </Card>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n    error: state.auth.error,\r\n    redirect: state.auth.redirect,\r\n    loading: state.auth.loading,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAuth: (login, password, repeatPassword, nickname) =>\r\n      dispatch(actions.auth(login, password, repeatPassword, nickname)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\r\n","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\containers\\GetJob\\GetJob.js",["170"],"import React, { Component } from \"react\";\r\nimport classes from \"../Login/Login.module.css\";\r\nimport Card from \"../../components/UI/Card/Card\";\r\nimport InputElement from \"../../components/UI/Input/Input\";\r\nimport ButtonElement from \"../../components/UI/Button/Button\";\r\nimport * as actionTypes from \"../../store/actions/actionTypes\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport checkValidity from \"../../functions/validity\";\r\nclass GetJob extends Component {\r\n  state = {\r\n    controls: {\r\n      jobPassCode: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"\",\r\n          placeholder: \"2bod7f22-453a-11eb-b378-0242ac130002\",\r\n        },\r\n        label: \"Pass code\",\r\n        touched: false,\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          valid: false,\r\n          minLength: 36,\r\n          maxLength: 36,\r\n          isEmail: false,\r\n        },\r\n      },\r\n    },\r\n    signUp: true,\r\n  };\r\n  componentDidMount() {\r\n    console.log(this.props);\r\n  }\r\n\r\n  inputChangedHandler = (event, controlName) => {\r\n    const updatedControls = {\r\n      ...this.state.controls,\r\n      [controlName]: {\r\n        ...this.state.controls[controlName],\r\n        value: event.target.value,\r\n        validation: {\r\n          ...this.state.controls[controlName].validation,\r\n          valid: checkValidity(\r\n            event.target.value,\r\n            this.state.controls[controlName].validation\r\n          ),\r\n        },\r\n        touched: true,\r\n      },\r\n    };\r\n    this.setState({ controls: updatedControls });\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    this.props.onGetJob(\r\n      this.state.controls.jobPassCode.value,\r\n      this.props.userId,\r\n      this.props.token\r\n    );\r\n  };\r\n  render() {\r\n    const formElementsArray = [];\r\n    for (let key in this.state.controls) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.controls[key],\r\n      });\r\n    }\r\n    let form = formElementsArray.map((element) => {\r\n      return (\r\n        <InputElement\r\n          key={element.id}\r\n          changed={(event) => this.inputChangedHandler(event, element.id)}\r\n          elementType={element.config.elementType}\r\n          elementConfig={element.config.elementConfig}\r\n          invalid={!element.config.validation.valid}\r\n          value={element.config.value}\r\n          shouldValidate={element.config.validation.required}\r\n          touched={element.config.touched}\r\n          label={element.config.label}\r\n        />\r\n      );\r\n    });\r\n    let error = null;\r\n    if (this.props.error) {\r\n      error = (\r\n        <React.Fragment>\r\n          <style>\r\n            @import\r\n            url('https://fonts.googleapis.com/css2?family=Russo+One&display=swap');\r\n          </style>\r\n          <div className={classes.errorMessage}>{this.props.error}</div>\r\n        </React.Fragment>\r\n      );\r\n      console.log(\"fefef\");\r\n    }\r\n    let spinner = null;\r\n    if (this.props.loading) {\r\n      spinner = <Spinner />;\r\n    }\r\n    let redirect = null;\r\n    if (this.props.redirectWork) {\r\n      redirect = <Redirect to={this.props.redirectWork} />;\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        {spinner}\r\n        <Card titleName=\"Get a job\" width=\"500px\">\r\n          {redirect}\r\n          <form className={classes.form} onSubmit={this.submitHandler}>\r\n            {form}\r\n            {error}\r\n            <ButtonElement btnType=\"Success\">OK</ButtonElement>\r\n          </form>\r\n        </Card>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n    redirect: state.auth.redirect,\r\n    error: state.works.error,\r\n    loading: state.works.loading,\r\n    redirectWork: state.works.redirectWork,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onGetJob: (password, userId, jobId) =>\r\n      dispatch(actions.getJob(password, userId, jobId)),\r\n    setRedirectPath: (path) => dispatch(actions.setRedirectPath(path)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GetJob);\r\n","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\containers\\Logout\\Logout.js",[],"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\containers\\Works\\CreateWork\\CreateWork.js",["171","172","173"],"import React, { Component } from \"react\";\r\nimport classes from \"../../Login/Login.module.css\";\r\nimport classesTwo from \"./CreateWork.module.css\";\r\nimport Card from \"../../../components/UI/Card/Card\";\r\nimport InputElement from \"../../../components/UI/Input/Input\";\r\nimport ButtonElement from \"../../../components/UI/Button/Button\";\r\nimport * as actionTypes from \"../../../store/actions/actionTypes\";\r\nimport * as actions from \"../../../store/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\r\nclass CreateWork extends Component {\r\n  state = {\r\n    controls: {\r\n      WorkName: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"\",\r\n          placeholder: \"Dota 2\",\r\n        },\r\n        label: \"Work name\",\r\n        touched: false,\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          valid: false,\r\n          minLength: 1,\r\n          maxLength: 20,\r\n          isEmail: false,\r\n        },\r\n      },\r\n      WorkDescription: {\r\n        elementType: \"textarea\",\r\n        elementConfig: {\r\n          type: \"\",\r\n          placeholder:\r\n            \"At w3schools.com you will learn how to make a website. They offer free tutorials in all web development technologies.\",\r\n        },\r\n        label: \"Description\",\r\n        touched: false,\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          valid: false,\r\n          minLength: 3,\r\n          maxLength: 500,\r\n        },\r\n      },\r\n    },\r\n    signUp: true,\r\n  };\r\n  componentDidMount() {\r\n    this.props.setRedirectPath(\"null\");\r\n  }\r\n  checkValidity(value, rules) {\r\n    let isValid = true;\r\n    if (!rules) {\r\n      return true;\r\n    }\r\n    if (rules.required) {\r\n      isValid = value.trim() !== \"\" && isValid;\r\n    }\r\n    if (rules.minLength) {\r\n      isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n    if (rules.maxLength) {\r\n      isValid = value.length <= rules.maxLength && isValid;\r\n    }\r\n    if (rules.isEmail) {\r\n      const pattern = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n      console.log(value);\r\n      isValid = pattern.test(value) && isValid;\r\n      console.log(isValid);\r\n    }\r\n    if (rules.isNumeric) {\r\n      const pattern = /^\\d+$/;\r\n      isValid = pattern.test(value) && isValid;\r\n    }\r\n    return isValid;\r\n  }\r\n  inputChangedHandler = (event, controlName) => {\r\n    const updatedControls = {\r\n      ...this.state.controls,\r\n      [controlName]: {\r\n        ...this.state.controls[controlName],\r\n        value: event.target.value,\r\n        validation: {\r\n          ...this.state.controls[controlName].validation,\r\n          valid: this.checkValidity(\r\n            event.target.value,\r\n            this.state.controls[controlName].validation\r\n          ),\r\n        },\r\n        touched: true,\r\n      },\r\n    };\r\n    this.setState({ controls: updatedControls });\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    this.props.onCreateWork(\r\n      this.state.controls.WorkName.value,\r\n      this.state.controls.WorkDescription.value,\r\n      this.props.userId,\r\n      this.props.token\r\n    );\r\n  };\r\n  render() {\r\n    const formElementsArray = [];\r\n    for (let key in this.state.controls) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.controls[key],\r\n      });\r\n    }\r\n    let form = formElementsArray.map((element) => {\r\n      return (\r\n        <InputElement\r\n          key={element.id}\r\n          changed={(event) => this.inputChangedHandler(event, element.id)}\r\n          elementType={element.config.elementType}\r\n          elementConfig={element.config.elementConfig}\r\n          invalid={!element.config.validation.valid}\r\n          value={element.config.value}\r\n          shouldValidate={element.config.validation.required}\r\n          touched={element.config.touched}\r\n          label={element.config.label}\r\n        />\r\n      );\r\n    });\r\n    let error = null;\r\n    if (this.props.error) {\r\n      error = (\r\n        <React.Fragment>\r\n          <style>\r\n            @import\r\n            url('https://fonts.googleapis.com/css2?family=Russo+One&display=swap');\r\n          </style>\r\n          <div className={classes.errorMessage}>{this.props.error}</div>\r\n        </React.Fragment>\r\n      );\r\n      console.log(\"fefef\");\r\n    }\r\n    let spinner = null;\r\n    if (this.props.loading) {\r\n      spinner = <Spinner />;\r\n    }\r\n    let redirect = null;\r\n    if (this.props.redirect) {\r\n      redirect = <Redirect to={this.props.redirect} />;\r\n    }\r\n    if (this.props.redirect == null || this.props.redirect == \"null\") {\r\n      redirect = null;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {spinner}\r\n        <Card titleName=\"Create new work\" width=\"500px\">\r\n          {redirect}\r\n          <form className={classes.form} onSubmit={this.submitHandler}>\r\n            {form}\r\n            {error}\r\n            <ButtonElement btnType=\"Success\">CREATE</ButtonElement>\r\n          </form>\r\n        </Card>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        token: state.auth.token,\r\n        userId: state.auth.userId,\r\n        error: state.auth.error,\r\n        redirect: state.auth.redirect,\r\n        loading: state.auth.loading,\r\n      };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onCreateWork: (name, description, userId, token) =>\r\n      dispatch(actions.createWork(name, description, userId, token)),\r\n    setRedirectPath: (path) => dispatch(actions.setRedirectPath(path)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateWork);\r\n","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\hoc\\Layout\\Layout.js",[],"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\containers\\SelectedWorkWorkers\\SelectedWorkWorkers.js",["174","175"],"import React, { Component } from \"react\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport UserComponent from \"../../components/User/User\";\r\nimport classes from \"./SelectedWorkWorkers.module.css\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nclass SelectedWorkWorkers extends Component {\r\n  state = {\r\n    workId: \"lol\",\r\n  };\r\n  componentDidMount() {\r\n    const search = this.props.location.search;\r\n    const params = new URLSearchParams(search);\r\n    const workId = params.get(\"workId\");\r\n    this.setState({ workId: workId });\r\n    if (this.props.jobWorkers.length != 0) {\r\n      this.props.onSetEmptyWorkers();\r\n    }\r\n    this.props.onUploadWorkers(workId, this.props.userId, this.props.token);\r\n  }\r\n  render() {\r\n    let spinner = null;\r\n    if (this.props.loading) {\r\n      spinner = <Spinner />;\r\n    }\r\n    let error = null;\r\n    if (this.props.error) {\r\n      error = <div>{this.props.error}</div>;\r\n    }\r\n    console.log(this.props.jobWorkers);\r\n\r\n    let workersToRender = this.props.jobWorkers.map((worker) => {\r\n      return (\r\n        <UserComponent\r\n          selectedUserId={worker.userId}\r\n          userName={worker.nickname}\r\n          userRating={\"high\"}\r\n          userTasks={2}\r\n          workId={this.state.workId}\r\n        />\r\n      );\r\n    });\r\n    return (\r\n      <React.Fragment>\r\n        {error}\r\n        {spinner}\r\n        <ul className={classes.UserList}>{workersToRender}</ul>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n    error: state.jobWorkers.error,\r\n    redirect: state.auth.redirect,\r\n    loading: state.jobWorkers.loading,\r\n    jobWorkers: state.jobWorkers.workers,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onLogin: (login, password) => dispatch(actions.login(login, password)),\r\n    setRedirectPath: (path) => dispatch(actions.setRedirectPath(path)),\r\n    onUploadWorkers: (workId, userId, token) =>\r\n      dispatch(actions.uploadWorkers(workId, userId, token)),\r\n    onSetEmptyWorkers: () => dispatch(actions.setEmptyWorkers()),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SelectedWorkWorkers);\r\n","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\containers\\Tasks\\MyTasks.js",[],"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\About\\About.js",["176","177","178","179","180"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classes from \"./About.module.css\";\r\nimport AboutProjectImg from \"./img/AboutProject.jpg\";\r\nimport developerTaras from \"./img/taras.jpg\";\r\nimport developerVlad from \"./img/vlad.jpg\";\r\nimport instagram from \"./img/instagram.png\";\r\nimport * as actions from \"../../store/actions/index\";\r\nclass About extends Component {\r\n  state = {\r\n    lol: \"null\",\r\n  };\r\n  componentDidMount() {\r\n    this.props.setRedirectPath(\"null\");\r\n    this.props.setRedirectWorkPath(\"null\");\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={classes.About}>\r\n        <h3>Strong Manager</h3>\r\n        <h2>What we do</h2>\r\n        <hr />\r\n        <p>\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\r\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\r\n          aliquip ex ea commodo consequat\r\n        </p>\r\n        <div className={classes.AboutProject}>\r\n          <div className={classes.AboutProjectImg}>\r\n            <img src={AboutProjectImg} />\r\n          </div>\r\n          <div className={classes.AboutProjectText}>\r\n            <div className={classes.TextContainer}>\r\n              <h4>Organization</h4>\r\n              <p>\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n                eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n              </p>\r\n            </div>\r\n            <div className={classes.TextContainer}>\r\n              <h4>Team Work</h4>\r\n              <p>\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n                eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n              </p>\r\n            </div>\r\n            <div className={classes.TextContainer}>\r\n              <h4>Management</h4>\r\n              <p>\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n                eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <h3 className={classes.weAre}>Who we are</h3>\r\n        <h2>Meet our team</h2>\r\n        <hr />\r\n        <div className={classes.Team}>\r\n          <div className={classes.developer}>\r\n            <img src={developerVlad} />\r\n            <h2>Vlad Boichuk</h2>\r\n            <h3>Project Manager</h3>\r\n            <a\r\n              href=\"https://www.instagram.com/vla2383public/?hl=ru\"\r\n              target=\"blank\"\r\n            >\r\n              <img src={instagram} />\r\n            </a>\r\n          </div>\r\n          <div className={classes.developer}>\r\n            <img src={developerTaras} />\r\n            <h2>Taras Hnatkiv</h2>\r\n            <h3>Project Manager</h3>\r\n            <a\r\n              href=\"https://www.instagram.com/chelovek_afk/?hl=ru\"\r\n              target=\"blank\"\r\n            >\r\n              <img src={instagram} />\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.token,\r\n    userId: state.userId,\r\n    error: state.error,\r\n    redirect: state.redirect,\r\n    loading: state.loading,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setRedirectPath: (path) => dispatch(actions.setRedirectPath(path)),\r\n    setRedirectWorkPath: (path) => dispatch(actions.setRedirectWorkPath(path)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(About);\r\n","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\store\\actions\\actionTypes.js",[],"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\store\\actions\\index.js",[],"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\functions\\validity.js",[],"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\User\\User.js",["181","182","183","184"],"import React, { Component } from \"react\";\r\nimport \"../../../node_modules/@fortawesome/fontawesome-free/css/all.css\";\r\nimport classes from \"./User.module.css\";\r\nimport femaleUser from \"./femaleUser.png\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport InputElement from \"../../components/UI/Input/Input\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\n\r\nclass User extends Component {\r\n  state = {\r\n    delete: false,\r\n    addTask: false,\r\n    controls: {\r\n      TaskName: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"\",\r\n          placeholder: \"make coffe\",\r\n        },\r\n        label: \"Task name\",\r\n        touched: false,\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          valid: false,\r\n          minLength: 1,\r\n          maxLength: 20,\r\n          isEmail: false,\r\n        },\r\n      },\r\n      TaskDescription: {\r\n        elementType: \"textarea\",\r\n        elementConfig: {\r\n          type: \"\",\r\n          placeholder:\r\n            \"At w3schools.com you will learn how to make a website. They offer free tutorials in all web development technologies.\",\r\n        },\r\n        label: \"Description\",\r\n        touched: false,\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          valid: false,\r\n          minLength: 3,\r\n          maxLength: 500,\r\n        },\r\n      },\r\n    },\r\n    signUp: true,\r\n  };\r\n  checkValidity(value, rules) {\r\n    let isValid = true;\r\n    if (!rules) {\r\n      return true;\r\n    }\r\n    if (rules.required) {\r\n      isValid = value.trim() !== \"\" && isValid;\r\n    }\r\n    if (rules.minLength) {\r\n      isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n    if (rules.maxLength) {\r\n      isValid = value.length <= rules.maxLength && isValid;\r\n    }\r\n    if (rules.isEmail) {\r\n      const pattern = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n      console.log(value);\r\n      isValid = pattern.test(value) && isValid;\r\n      console.log(isValid);\r\n    }\r\n    if (rules.isNumeric) {\r\n      const pattern = /^\\d+$/;\r\n      isValid = pattern.test(value) && isValid;\r\n    }\r\n    return isValid;\r\n  }\r\n  inputChangedHandler = (event, controlName) => {\r\n    const updatedControls = {\r\n      ...this.state.controls,\r\n      [controlName]: {\r\n        ...this.state.controls[controlName],\r\n        value: event.target.value,\r\n        validation: {\r\n          ...this.state.controls[controlName].validation,\r\n          valid: this.checkValidity(\r\n            event.target.value,\r\n            this.state.controls[controlName].validation\r\n          ),\r\n        },\r\n        touched: true,\r\n      },\r\n    };\r\n    this.setState({ controls: updatedControls });\r\n  };\r\n\r\n  cancelDelete = () => {\r\n    if (this.state.addTask) {\r\n      this.setState({\r\n        addTask: !this.state.addTask,\r\n      });\r\n    }\r\n    this.setState({\r\n      delete: !this.state.delete,\r\n    });\r\n  };\r\n\r\n  addTaskFunc = () => {\r\n    if (this.state.delete) {\r\n      this.setState({\r\n        delete: !this.state.delete,\r\n      });\r\n    }\r\n    this.setState({\r\n      addTask: !this.state.addTask,\r\n    });\r\n  };\r\n  startCreatingTask = () => {\r\n    this.addTaskFunc();\r\n    this.props.onAddTask(\r\n      this.props.workId,\r\n      this.props.selectedUserId,\r\n      this.props.token,\r\n      this.state.controls.TaskName.value,\r\n      this.state.controls.TaskDescription.value\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const formElementsArray = [];\r\n    for (let key in this.state.controls) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.controls[key],\r\n      });\r\n    }\r\n    let form = formElementsArray.map((element) => {\r\n      return (\r\n        <InputElement\r\n          key={element.id}\r\n          changed={(event) => this.inputChangedHandler(event, element.id)}\r\n          elementType={element.config.elementType}\r\n          elementConfig={element.config.elementConfig}\r\n          invalid={!element.config.validation.valid}\r\n          value={element.config.value}\r\n          shouldValidate={element.config.validation.required}\r\n          touched={element.config.touched}\r\n          label={element.config.label}\r\n        />\r\n      );\r\n    });\r\n    let error = null;\r\n    if (this.props.error) {\r\n      error = (\r\n        <React.Fragment>\r\n          <style>\r\n            @import\r\n            url('https://fonts.googleapis.com/css2?family=Russo+One&display=swap');\r\n          </style>\r\n          <div className={classes.errorMessage}>{this.props.error}</div>\r\n        </React.Fragment>\r\n      );\r\n      console.log(\"fefef\");\r\n    }\r\n    let spinner = null;\r\n    if (this.props.loading) {\r\n      spinner = <Spinner />;\r\n    }\r\n    let redirect = null;\r\n    if (this.props.redirect) {\r\n      redirect = <Redirect to={this.props.redirect} />;\r\n    }\r\n    if (this.props.redirect == null || this.props.redirect == \"null\") {\r\n      redirect = null;\r\n    }\r\n\r\n    return (\r\n      <li className={classes.User}>\r\n        <div className={classes.UserMainPart}>\r\n          <div className={classes.LeftPart}>\r\n            <div className={classes.DeleteUser} onClick={this.cancelDelete}>\r\n              <i class=\"fas fa-user-minus\"></i>\r\n            </div>\r\n            <img className={classes.Avatar} src={femaleUser} />\r\n          </div>\r\n          <div className={classes.RightPart}>\r\n            <div className={classes.TopUserHeader}>\r\n              <div className={classes.Label}>{this.props.userName}</div>\r\n            </div>\r\n            <div className={classes.TaskGroup}>\r\n              <style>\r\n                @import\r\n                url('https://fonts.googleapis.com/css2?family=Langar&family=Pacifico&family=Questrial&display=swap');\r\n              </style>\r\n              <div>Tasks:</div>\r\n              <div className={classes.TaskGroupValue}>\r\n                <i class=\"fas fa-tasks\"></i>\r\n              </div>\r\n              <div className={classes.TaskGroupValue}>\r\n                {this.props.userTasks}\r\n              </div>\r\n            </div>\r\n            <div className={classes.RatingGroup}>\r\n              <style>\r\n                @import\r\n                url('https://fonts.googleapis.com/css2?family=Langar&family=Pacifico&family=Questrial&display=swap');\r\n              </style>\r\n              <div>Rating:</div>\r\n              <div className={classes.RatingGroupValue}>\r\n                <i class=\"far fa-smile\"></i>\r\n              </div>\r\n              <div className={classes.TaskGroupValue}>{\"88/100\"}</div>\r\n            </div>\r\n            <button\r\n              className={classes.ButtonAddTask}\r\n              onClick={this.addTaskFunc}\r\n            >\r\n              Add task\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={\r\n            this.state.delete\r\n              ? [classes.active, classes.DeleteContainer].join(\" \")\r\n              : classes.DeleteContainer\r\n          }\r\n        >\r\n          <div className={classes.container}>\r\n            <h1>Delete User</h1>\r\n            <p>Are you sure you want to delete your user?</p>\r\n\r\n            <div className={classes.clearfix}>\r\n              <button\r\n                type=\"button\"\r\n                onClick={this.cancelDelete}\r\n                className={classes.cancelbtn}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button type=\"button\" className={classes.deletebtn}\r\n              onClick={() => this.props.deleteWorker(this.props.token, this.props.workId, this.props.selectedUserId)}>\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className={\r\n            this.state.addTask\r\n              ? [classes.active, classes.addTaskContainer].join(\" \")\r\n              : classes.addTaskContainer\r\n          }\r\n        >\r\n          <div className={classes.addTask}>\r\n            <h1>Add task</h1>\r\n            <form className={classes.form}>\r\n              {form}\r\n              {error}\r\n              <div className={classes.clearfix}>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={this.addTaskFunc}\r\n                  className={classes.cancelbtn}\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={this.startCreatingTask}\r\n                  className={classes.deletebtn}\r\n                >\r\n                  Send\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteWorker: (token, workId, userId) => dispatch(actions.deleteWorker(token, workId, userId)),\r\n    onAddTask: (workId, recipientId, token, taskLabel, taskDescription) =>\r\n      dispatch(\r\n        actions.addTask(workId, recipientId, token, taskLabel, taskDescription)\r\n      ),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(User);\r\n","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\containers\\Tasks\\TaskConponent\\TaskComponent.js",["185"],"import React from \"react\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport classes from \"./TaskComponent.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../store/actions/index\";\r\nclass TaskComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      delete: false,\r\n    };\r\n  }\r\n\r\n  cancelDelete = () => {\r\n    this.setState({\r\n      delete: !this.state.delete,\r\n    });\r\n  };\r\n  leaveWorkClick = () => {\r\n    this.props.onLeaveWork(\r\n      this.props.info.id,\r\n      this.props.userId,\r\n      this.props.token\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <li className={classes.Work}>\r\n          <div className={classes.number}>#{this.props.index+1}</div>\r\n        <div className={classes.TopWorkHeader}>\r\n          <div className={classes.RemoveWork} onClick={this.cancelDelete}>\r\n            <i className={\"fas fa-door-open\"}></i>\r\n          </div>\r\n          <div className={classes.Label}>{this.props.info.name}</div>\r\n        </div>\r\n        <div className={classes.Description}>\r\n          <style>\r\n            @import\r\n            url('https://fonts.googleapis.com/css2?family=Langar&family=Pacifico&family=Questrial&display=swap');\r\n          </style>\r\n          {this.props.info.description}\r\n        </div>\r\n        <div className={classes.Task}>\r\n          <i className={\"fas fa-tasks\"}></i>\r\n          <span>{this.props.info.number}</span>\r\n        </div>\r\n        <div\r\n          className={\r\n            this.state.delete\r\n              ? [classes.active, classes.DeleteContainer].join(\" \")\r\n              : classes.DeleteContainer\r\n          }\r\n        >\r\n          <div className={classes.container}>\r\n            <h1>Leave Work</h1>\r\n            <p className={classes.confirm}>\r\n              Are you sure you want to leave your work?\r\n            </p>\r\n            <div className={classes.clearfix}>\r\n              <button\r\n                type=\"button\"\r\n                onClick={this.cancelDelete}\r\n                className={classes.cancelbtn}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={this.leaveWorkClick}\r\n                type=\"button\"\r\n                className={classes.deletebtn}\r\n              >\r\n                Leave\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n    error: state.auth.error,\r\n    redirect: state.auth.redirect,\r\n    loading: state.auth.loading,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onLeaveWork: (workId, userId, token) =>\r\n      dispatch(actions.leaveWork(workId, userId, token)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskComponent);\r\n","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\Works\\WorkComponent\\WorkComponent.js",["186","187","188"],"import React, { Component } from \"react\";\r\nimport classes from \"./WorkComponent.module.css\";\r\nimport \"../../../../node_modules/@fortawesome/fontawesome-free/css/all.css\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport * as actions from \"../../../store/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\r\nimport { Redirect, NavLink } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass WorkComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      copied: false,\r\n      delete: false,\r\n    };\r\n  }\r\n\r\n  cancelDelete = () => {\r\n    console.log(\"pyk\");\r\n    this.setState({\r\n      delete: !this.state.delete,\r\n    });\r\n  };\r\n  removeWork = (workId) => {\r\n    this.props.onRemoveWork(workId, this.props.token, this.props.works);\r\n  };\r\n  redirectClick = () => {\r\n    this.props.history.push(`selectedWorkers?workId=${this.props.workId}`);\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props);\r\n\r\n    let redirect = null;\r\n    if (this.props.redirectWork) {\r\n      redirect = <Redirect to={this.props.redirectWork} />;\r\n    }\r\n    return (\r\n      <li className={classes.Work}>\r\n          <div className={classes.number}>#{this.props.index+1}</div>\r\n        <div className={classes.TopWorkHeader}>\r\n          <div className={classes.RemoveWork} onClick={this.cancelDelete}>\r\n            <i class=\"fas fa-trash-alt\"></i>\r\n          </div>\r\n          <div className={classes.Label}>{this.props.name}</div>\r\n        </div>\r\n        <div className={classes.Description}>\r\n          <style>\r\n            @import\r\n            url('https://fonts.googleapis.com/css2?family=Langar&family=Pacifico&family=Questrial&display=swap');\r\n          </style>\r\n          {this.props.description}\r\n        </div>\r\n\r\n        <div className={classes.Password}>\r\n          <style>\r\n            @import\r\n            url('https://fonts.googleapis.com/css2?family=Andika+New+Basic:ital@1&display=swap');\r\n          </style>\r\n          <div>password:</div>\r\n          <div className={classes.PasswordFont}>{this.props.password}</div>\r\n          <CopyToClipboard onCopy={this.props.copyFunc} text={this.props.password}>\r\n            <div className={classes.clipBoard}>\r\n              <i class={\"far fa-copy\"}></i>\r\n            </div>\r\n          </CopyToClipboard>\r\n        </div>\r\n        <div onClick={this.redirectClick} className={classes.Users}>\r\n          <div className={classes.UserGroup}>\r\n            <i class=\"fa fa-users\" aria-hidden=\"true\">\r\n              :\r\n            </i>\r\n            <font className={classes.UsersGroupValue}>\r\n              {this.props.workers ? this.props.workers.length : 0}\r\n            </font>\r\n          </div>\r\n          <div className={classes.UserGroup}>\r\n            <i class=\"fas fa-user-tie\">:</i>\r\n            <font className={classes.UsersGroupValue}>0</font>\r\n          </div>\r\n          <div className={classes.UserGroup}>\r\n            <i class=\"fas fa-hospital-user\">:</i>\r\n            <font className={classes.UsersGroupValue}>0</font>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={\r\n            this.state.delete\r\n              ? [classes.active, classes.DeleteContainer].join(\" \")\r\n              : classes.DeleteContainer\r\n          }\r\n        >\r\n          <div className={classes.container}>\r\n            <h1>Delete Work</h1>\r\n            <p>Are you sure you want to delete your work?</p>\r\n\r\n            <div className={classes.clearfix}>\r\n              <button\r\n                type=\"button\"\r\n                onClick={this.cancelDelete}\r\n                className={classes.cancelbtn}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => this.removeWork(this.props.workId)}\r\n                className={classes.deletebtn}\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n    error: state.auth.error,\r\n    redirect: state.auth.redirect,\r\n    loading: state.auth.loading,\r\n    works: state.works.works,\r\n    redirectWork: state.works.redirectWork,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onRemoveWork: (id, token, oldWorks) =>\r\n      dispatch(actions.removeWork(id, token, oldWorks)),\r\n    setRedirectPath: (path) => dispatch(actions.setRedirectPath(path)),\r\n    setRedirectWorkPath: (path) => dispatch(actions.setRedirectWorkPath(path)),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(WorkComponent));\r\n","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\UI\\Spinner\\Spinner.js",[],"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\UI\\Card\\Card.js",[],"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\UI\\Input\\Input.js",[],"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\UI\\Button\\Button.js",[],"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\Navigation\\Toolbar\\Toolbar.js",[],"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\store\\actions\\actions.js",["189","190","191","192","193","194","195","196","197","198","199","200"],"import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"axios\";\r\nimport getWorkByPassword from \"../../functions/getWorkByPassword\";\r\nimport getWorkersByWork from \"../../functions/getWorkersByWork\";\r\nexport const authStart = () => {\r\n    return { type: actionTypes.AUTH_START };\r\n};\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        token: token,\r\n        userId: userId,\r\n    };\r\n};\r\nexport const authFail = (error) => {\r\n    return { type: actionTypes.AUTH_FAIL, error: error };\r\n};\r\nexport const auth = (login, password, repeatPassword, nickname) => {\r\n    return (dispatch) => {\r\n        dispatch(authStart());\r\n        if (nickname.length < 4 || nickname.length > 25) {\r\n            dispatch(\r\n                authFail(\"Ooops, nickname has to be between 4 and 25 characters!\")\r\n            );\r\n        } else if (\r\n            /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(\r\n                login\r\n            ) == false\r\n        ) {\r\n            dispatch(authFail(\"Ooops, it seems that email isn't correct!\"));\r\n        } else if (password.length < 6 || password.length > 20) {\r\n            dispatch(\r\n                authFail(\"Ooops, password has to be between 6 and 20 characters!\")\r\n            );\r\n        } else if (repeatPassword !== password) {\r\n            dispatch(authFail(\"Ooops, passwords do not match!\"));\r\n        } else {\r\n            const authData = {\r\n                email: login,\r\n                password: password,\r\n                returnSecureToken: true,\r\n            };\r\n            axios\r\n                .post(\r\n                    \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyByJGBJ1ZfClAOLx6PR3391TK2f7bZM6bs\",\r\n                    authData\r\n                )\r\n                .then((response) => {\r\n                    console.log(response);\r\n                    dispatch(\r\n                        authSuccess(response.data.idToken, response.data.localId, nickname)\r\n                    );\r\n                    return axios.post(\r\n                        `https://strongmanagment-default-rtdb.firebaseio.com/users.json?auth=${response.data.idToken}`,\r\n                        {\r\n                            nickname: nickname,\r\n                            userId: response.data.localId,\r\n                            rating: \"0/0\",\r\n                            tasks: [],\r\n                        }\r\n                    );\r\n                })\r\n                .then((response) => {\r\n                    console.log(response);\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                    if (typeof error == \"string\") {\r\n                        dispatch(authFail(error));\r\n                    } else {\r\n                        // if error.response \"ooips email already exists\"\r\n                        dispatch(authFail(\"Ooops user with this email already exists\"));\r\n                    }\r\n                });\r\n        }\r\n    };\r\n};\r\nexport const loginStart = () => {\r\n    return { type: actionTypes.LOGIN_START };\r\n};\r\nexport const loginSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.LOGIN_SUCCESS,\r\n        token: token,\r\n        userId: userId,\r\n    };\r\n};\r\nexport const loginFail = (error) => {\r\n    return { type: actionTypes.LOGIN_FAIL, error: error };\r\n};\r\nexport const login = (login, password) => {\r\n    return (dispatch) => {\r\n        dispatch(loginStart());\r\n        if (\r\n            /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(\r\n                login\r\n            ) == false\r\n        ) {\r\n            dispatch(loginFail(\"Ooops, it seems that email isn't correct!\"));\r\n        } else if (password.length < 6 || password.length > 20) {\r\n            dispatch(\r\n                loginFail(\"Ooops, password has to be between 6 and 20 characters!\")\r\n            );\r\n        } else {\r\n            const authData = {\r\n                email: login,\r\n                password: password,\r\n                returnSecureToken: true,\r\n            };\r\n            axios\r\n                .post(\r\n                    \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyByJGBJ1ZfClAOLx6PR3391TK2f7bZM6bs\",\r\n                    authData\r\n                )\r\n                .then((response) => {\r\n                    console.log(response);\r\n                    dispatch(loginSuccess(response.data.idToken, response.data.localId));\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                    if (typeof error == \"string\") {\r\n                        dispatch(loginFail(error));\r\n                    } else {\r\n                        // if error.response \"ooips email already exists\"\r\n                        dispatch(loginFail(\"Ooops, login or password is incorrect\"));\r\n                    }\r\n                });\r\n        }\r\n    };\r\n};\r\nexport const setPath = (path) => {\r\n    return { type: actionTypes.SET_PATH, path: path };\r\n};\r\nexport const setRedirectPath = (path) => {\r\n    return (dispatch) => {\r\n        if (path == \"null\") {\r\n            dispatch(setPath(\"null\"));\r\n        } else {\r\n            dispatch(setPath(path));\r\n        }\r\n    };\r\n};\r\nexport const logout = () => {\r\n    return { type: actionTypes.LOGOUT };\r\n};\r\n//\r\n//\r\n//\r\nexport const createWorkFail = (error) => {\r\n    return { type: actionTypes.CREATE_WORK_FAIL, error: error };\r\n};\r\nexport const createWorkStart = () => {\r\n    return { type: actionTypes.CREATE_WORK_START };\r\n};\r\nexport const createWorkSuccess = () => {\r\n    return {\r\n        type: actionTypes.CREATE_WORK_SUCCESS,\r\n    };\r\n};\r\nexport const createWork = (name, description, userId, token) => {\r\n    return (dispatch) => {\r\n        dispatch(createWorkStart());\r\n\r\n        if (name.length < 1 || name.length > 50) {\r\n            dispatch(\r\n                createWorkFail(\"Ooops, name has to be between 1 and 20 characters!\")\r\n            );\r\n        } else if (description.length < 3 || description.length > 500) {\r\n            dispatch(\r\n                createWorkFail(\r\n                    \"Ooops, description has to be between 3 and 500 characters!\"\r\n                )\r\n            );\r\n        } else {\r\n            let work = {\r\n                name: name,\r\n                description: description,\r\n                ownerId: userId,\r\n                workers: [],\r\n            };\r\n\r\n            axios\r\n                .get(\"https://www.uuidgenerator.net/api/version1\")\r\n                .then((response) => {\r\n                    console.log(response);\r\n                    work = { ...work, password: response.data };\r\n                    return axios.post(\r\n                        `https://strongmanagment-default-rtdb.firebaseio.com/works.json?auth=${token}`,\r\n                        work\r\n                    );\r\n                })\r\n                .then((response) => {\r\n                    dispatch(createWorkSuccess());\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                    if (typeof error == \"string\") {\r\n                        dispatch(createWorkFail(error));\r\n                    } else {\r\n                        console.log(error);\r\n                        // if error.response \"ooips email already exists\"\r\n                        dispatch(createWorkFail(\"Ooops, some propblem exists\"));\r\n                    }\r\n                });\r\n        }\r\n    };\r\n};\r\nexport const uploadWorksStart = () => {\r\n    return { type: actionTypes.UPLOAD_WORKS_START };\r\n};\r\nexport const uploadWorksFail = (error) => {\r\n    return { type: actionTypes.UPLOAD_WORKS_FAIL, error: error };\r\n};\r\nexport const uploadWorksSuccess = (works) => {\r\n    return {\r\n        type: actionTypes.UPLOAD_WORKS_SUCCESS,\r\n        works: works,\r\n    };\r\n};\r\nfunction getUserWorks(userId, worksObject) {\r\n    let worksArray = [];\r\n    Object.keys(worksObject).map((key) => {\r\n        if (worksObject[key].ownerId == userId) {\r\n            worksArray.push({ ...worksObject[key], id: key });\r\n        }\r\n    });\r\n    return worksArray;\r\n}\r\nexport const uploadWorks = (userId, token) => {\r\n    return (dispatch) => {\r\n        dispatch(uploadWorksStart());\r\n        axios\r\n            .get(\r\n                `https://strongmanagment-default-rtdb.firebaseio.com/works.json?auth=${token}`\r\n            )\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                dispatch(uploadWorksSuccess(getUserWorks(userId, response.data)));\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                if (typeof error == \"string\") {\r\n                    dispatch(uploadWorksFail(error));\r\n                } else {\r\n                    console.log(error);\r\n                    // if error.response \"ooips email already exists\"\r\n                    dispatch(uploadWorksFail(\"Ooops, some propblem exists\"));\r\n                }\r\n            });\r\n    };\r\n};\r\n//\r\n//\r\n//\r\n//\r\n//\r\n\r\nexport const removeWorkStart = () => {\r\n    return { type: actionTypes.REMOVE_WORK_START };\r\n};\r\nexport const removeWorkFail = (error) => {\r\n    return { type: actionTypes.REMOVE_WORK_FAIL, error: error };\r\n};\r\nexport const removeWorkSuccess = (works) => {\r\n    return {\r\n        type: actionTypes.REMOVE_WORK_SUCCESS,\r\n        works: works,\r\n    };\r\n};\r\nexport const removeWork = (workId, token, prevWorks) => {\r\n    return (dispatch) => {\r\n        dispatch(removeWorkStart());\r\n        axios\r\n            .delete(\r\n                `https://strongmanagment-default-rtdb.firebaseio.com/works/${workId}.json?auth=${token}`\r\n            )\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                let newWorks = [];\r\n                for (let i = 0; i < prevWorks.length; i++) {\r\n                    if (prevWorks[i].id != workId) {\r\n                        newWorks.push(prevWorks[i]);\r\n                    }\r\n                }\r\n                dispatch(removeWorkSuccess(newWorks));\r\n            })\r\n            .catch((error) => {\r\n                dispatch(removeWorkFail(error));\r\n            });\r\n    };\r\n};\r\n//\r\n//\r\n//\r\nexport const getJobStart = () => {\r\n    return { type: actionTypes.GET_JOB_START };\r\n};\r\nexport const getJobFail = (error) => {\r\n    return { type: actionTypes.GET_JOB_FAIL, error: error };\r\n};\r\nexport const getJobSuccess = () => {\r\n    return {\r\n        type: actionTypes.GET_JOB_SUCCESS,\r\n    };\r\n};\r\nexport const getJob = (password, userId, token) => {\r\n    return (dispatch) => {\r\n        dispatch(getJobStart());\r\n        if (password.length != 36) {\r\n            dispatch(getJobFail(\"Ooops,password must be 36 characters long\"));\r\n        } else {\r\n            axios\r\n                .get(\r\n                    `https://strongmanagment-default-rtdb.firebaseio.com/works.json?auth=${token}`\r\n                )\r\n                .then((response) => {\r\n                    console.log(response.data);\r\n                    let allWorks = response.data;\r\n                    let findedWork = getWorkByPassword(allWorks, password);\r\n                    if (findedWork.error) {\r\n                        return Promise.reject(findedWork.error);\r\n                    } else {\r\n                        let findedWorkValue = findedWork.work;\r\n                        let updatedWorkers = [];\r\n                        console.log(findedWorkValue + \"findedWork\");\r\n\r\n                        if (findedWorkValue.workers) {\r\n                            console.log(findedWorkValue.workers + \"findedWork.workers\");\r\n                            updatedWorkers = findedWorkValue.workers;\r\n                            for (let existedWorker of updatedWorkers) {\r\n                                if (existedWorker == userId) {\r\n                                    return Promise.reject(\"You already work at this job\");\r\n                                }\r\n                            }\r\n                            updatedWorkers.push(userId);\r\n                        } else {\r\n                            updatedWorkers.push(userId);\r\n                        }\r\n                        console.log(updatedWorkers + \"updated workers\");\r\n                        let updatedWork = { ...findedWorkValue, workers: updatedWorkers };\r\n                        console.log(findedWork.id);\r\n                        return axios.patch(\r\n                            `https://strongmanagment-default-rtdb.firebaseio.com/works/${findedWorkValue.id}.json?auth=${token}`,\r\n                            updatedWork\r\n                        );\r\n                    }\r\n                })\r\n                .then((response) => {\r\n                    console.log(response);\r\n                    dispatch(getJobSuccess());\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                    dispatch(getJobFail(error));\r\n                });\r\n        }\r\n    };\r\n};\r\nexport const setRedirectWorkPath = (path) => {\r\n    return { type: actionTypes.SET_REDIRECT_WORK_PATH, path: path };\r\n};\r\n\r\nexport const uploadWorkersFail = (error) => {\r\n    return { type: actionTypes.UPLOAD_WORKERS_FAIL, error: error };\r\n};\r\nexport const uploadWorkersStart = () => {\r\n    return { type: actionTypes.UPLOAD_WORKERS_START };\r\n};\r\nexport const uploadWorkersSuccess = (workers) => {\r\n    return {\r\n        type: actionTypes.UPLOAD_WORKERS_SUCCESS,\r\n        workers: workers,\r\n    };\r\n};\r\nexport const uploadWorkers = (workId, userId, token) => {\r\n    return (dispatch) => {\r\n        dispatch(uploadWorkersStart());\r\n        axios\r\n            .get(\r\n                `https://strongmanagment-default-rtdb.firebaseio.com/works.json?auth=${token}`\r\n            )\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                console.log(workId);\r\n                let selectedWork = response.data[workId];\r\n                console.log(selectedWork);\r\n                if (selectedWork.ownerId != userId) {\r\n                    return Promise.reject(\r\n                        \"Oooops, you dont have enough permissions to upload this page\"\r\n                    );\r\n                } else {\r\n                    return Promise.all([\r\n                        axios.get(\r\n                            `https://strongmanagment-default-rtdb.firebaseio.com/users.json?auth=${token}`\r\n                        ),\r\n                        selectedWork,\r\n                    ]);\r\n                }\r\n            })\r\n            .then(([response, selectedWork]) => {\r\n                console.log(response.data, \"promose.ALL RESPONSE\");\r\n                console.log(selectedWork, \"promose.ALL selectedWork\");\r\n                let allWorkersArray = getWorkersByWork(response.data, selectedWork);\r\n                dispatch(uploadWorkersSuccess(allWorkersArray.workers));\r\n            })\r\n            .catch((error) => {\r\n                if (typeof error == \"string\") {\r\n                    console.log(error);\r\n                    dispatch(uploadWorkersFail(error));\r\n                } else {\r\n                    dispatch(uploadWorkersFail(\"Ooops, something went wrong\"));\r\n                    console.log(error);\r\n                }\r\n            });\r\n    };\r\n};\r\nexport const setEmptyWorkers = () => {\r\n    return {\r\n        type: actionTypes.SET_EMPTY_WORKERS,\r\n    };\r\n};\r\n\r\n//\r\n//\r\n//\r\nexport const getWorksTasksStart = () => {\r\n    return { type: actionTypes.GET_WORKS_TASKS_START };\r\n};\r\nexport const getWorksTasksFail = (error) => {\r\n    return { type: actionTypes.GET_WORKS_TASKS_FAIL, error: error };\r\n};\r\nexport const getWorksTasksSuccess = (worksTask) => {\r\n    return { type: actionTypes.GET_WORKS_TASKS_SUCCESS, worksTask: worksTask };\r\n};\r\n\r\nexport const getWorksTasks = (userId, token) => {\r\n    return (dispatch) => {\r\n        dispatch(getWorksTasksStart());\r\n        axios\r\n            .get(\r\n                `https://strongmanagment-default-rtdb.firebaseio.com/works.json?auth=${token}`\r\n            )\r\n            .then((response) => {\r\n                let worksTasks = [];\r\n                let allWorks = response.data;\r\n                for (let key in allWorks) {\r\n                    if (allWorks[key].hasOwnProperty(\"workers\")) {\r\n                        if (allWorks[key].workers.includes(userId)) {\r\n                            worksTasks.push(allWorks[key]);\r\n                        }\r\n                    }\r\n                }\r\n                dispatch(getWorksTasksSuccess(worksTasks));\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                dispatch(getWorksTasksFail(error));\r\n            });\r\n    };\r\n};\r\n//\r\n//\r\n//\r\n//\r\n//\r\nexport const leaveWorkFail = (error) => {\r\n    return { type: actionTypes.LEAVE_WORK_FAIL, error: error };\r\n};\r\nexport const leaveWorkStart = () => {\r\n    return { type: actionTypes.LEAVE_WORK_START };\r\n};\r\nexport const leaveWorkSuccess = (updatedTasks) => {\r\n    return {\r\n        type: actionTypes.LEAVE_WORK_SUCCESS,\r\n        newTasks: updatedTasks,\r\n    };\r\n};\r\nexport const leaveWork = (workId, userId, token) => {\r\n    return (dispatch, getState) => {\r\n        dispatch(leaveWorkStart());\r\n        axios\r\n            .get(\r\n                `https://strongmanagment-default-rtdb.firebaseio.com/works.json?auth=${token}`\r\n            )\r\n            .then((response) => {\r\n                let selectedWork = response.data[workId];\r\n                console.log(selectedWork);\r\n                let workersIdSelectedWork = selectedWork.workers;\r\n                console.log(workersIdSelectedWork);\r\n                let selfLeaveFromWork = workersIdSelectedWork.filter(\r\n                    (workerId) => workerId != userId\r\n                );\r\n\r\n                let updatedWork = { ...selectedWork, workers: selfLeaveFromWork };\r\n                return axios.patch(\r\n                    `https://strongmanagment-default-rtdb.firebaseio.com/works/${workId}.json?auth=${token}`,\r\n                    updatedWork\r\n                );\r\n            })\r\n            .then((response) => {\r\n                let updatedTasks = getState().works.worksTask.filter(\r\n                    (w) => w.id != workId\r\n                );\r\n                console.log(updatedTasks);\r\n                dispatch(leaveWorkSuccess(updatedTasks));\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                dispatch(leaveWorkFail(err));\r\n            });\r\n    };\r\n};\r\n//\r\n//\r\n//\r\n//\r\nexport const addTaskFail = (error) => {\r\n    return { type: actionTypes.ADD_TASK_FAIL, error: error };\r\n};\r\nexport const addTaskStart = () => {\r\n    return { type: actionTypes.ADD_TASK_START };\r\n};\r\nexport const addTaskSuccess = (tasks) => {\r\n    return {\r\n        type: actionTypes.ADD_TASK_SUCCESS,\r\n        tasks: tasks,\r\n    };\r\n};\r\nexport const addTask = (\r\n    workId,\r\n    recipientId,\r\n    token,\r\n    taskLabel,\r\n    taskDescription\r\n) => {\r\n    return (dispatch) => {\r\n        dispatch(addTaskStart());\r\n        console.log(token);\r\n        axios\r\n            .post(\r\n                `https://strongmanagment-default-rtdb.firebaseio.com/tasks.json?auth=${token}`,\r\n                {\r\n                    workId: workId,\r\n                    recipientId: recipientId,\r\n                    name: taskLabel,\r\n                    description: taskDescription,\r\n                }\r\n            )\r\n            .then((response) => {\r\n                dispatch(addTaskSuccess());\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                if (typeof err == \"string\") {\r\n                    dispatch(addTaskFail(err));\r\n                } else {\r\n                    dispatch(addTaskFail(\"Something went wrong\"));\r\n                }\r\n            });\r\n    };\r\n};\r\nexport const deleteWorkerStart = () => {\r\n    return { type: actionTypes.DELETE_WORKER_START };\r\n};\r\nexport const deleteWorkerFail = (error) => {\r\n    return { type: actionTypes.DELETE_WORKER_FAIL, error: error };\r\n};\r\nexport const deleteWorkerSuccess = (currentWorkers) => {\r\n    return { type: actionTypes.DELETE_WORKER_SUCCESS, currentWorkers: currentWorkers };\r\n};\r\n\r\nexport const deleteWorker = (token, workId, userId) => {\r\n    return (dispatch) => {\r\n        dispatch(deleteWorkerStart());\r\n        axios\r\n            .get(\r\n                // `https://strongmanagment-default-rtdb.firebaseio.com/works.json?auth=${token}`\r\n                `https://strongmanagment-default-rtdb.firebaseio.com/works/${workId}.json?auth=${token}`,\r\n\r\n            )\r\n            .then((response) => {\r\n                console.log(token)\r\n                console.log(workId)\r\n                console.log(userId)\r\n\r\n                let currentWorkers = response.data.workers;\r\n                let indexUserId = currentWorkers.indexOf(userId)\r\n                if (indexUserId > -1) {\r\n                    currentWorkers.splice(indexUserId, 1);\r\n                }\r\n                console.log(currentWorkers)\r\n                return axios.patch(\r\n                    `https://strongmanagment-default-rtdb.firebaseio.com/works/${workId}.json?auth=${token}`, response.data)\r\n                    .then((response) => {\r\n                        dispatch(deleteWorkerSuccess(currentWorkers));\r\n                    })\r\n\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                dispatch(deleteWorkerFail(error));\r\n            });\r\n    };\r\n};\r\n//\r\n//\r\n//\r\nexport const getTasksNumberStart = () => {\r\n    return { type: actionTypes.GET_TASKS_NUMBER_START };\r\n};\r\nexport const getTasksNumberFail = (error) => {\r\n    return { type: actionTypes.GET_TASKS_NUMBER_FAIL, error: error };\r\n};\r\nexport const getTasksNumberSuccess = (countTasks) => {\r\n    return { type: actionTypes.GET_TASKS_NUMBER_SUCCESS, countTasks: countTasks };\r\n};\r\n\r\nexport const getTasksNumber = (token, userId) => {\r\n    return (dispatch) => {\r\n        dispatch(getTasksNumberStart());\r\n        axios\r\n            .get(\r\n                `https://strongmanagment-default-rtdb.firebaseio.com/tasks.json?auth=${token}`\r\n            )\r\n            .then((response) => {\r\n                let countTasks = 0\r\n                let Tasks = response.data;\r\n                for (let key in Tasks) {\r\n                    console.log(Tasks[key])\r\n                    if (Tasks[key].recipientId == userId) {\r\n                        countTasks++\r\n                    }\r\n                }\r\n                console.log(countTasks)\r\n                dispatch(getTasksNumberSuccess(countTasks));\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                dispatch(getTasksNumberFail(error));\r\n            });\r\n    };\r\n};","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\Navigation\\Toolbar\\NavigationItems\\NavigationItems.js",["201"],"import React, { Component } from \"react\";\r\nimport classes from \"./NavigationItems.module.css\";\r\nimport NavigationItem from \"./NavigationItem/NavigationItem\";\r\nimport { connect } from \"react-redux\";\r\nclass NavigationItems extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    let links = [];\r\n    if (this.props.token) {\r\n      links = [\r\n        { link: \"/tasksArray\", label: \"TasksArray\" },\r\n        { link: \"/myTasks\", label: \"My tasks\" },\r\n        { link: \"/getJob\", label: \"Get job\" },\r\n        { link: \"/myWorks\", label: \"My works\" },\r\n        { link: \"/createNewJob\", label: \"Create work\" },\r\n        { link: \"/about\", label: \"About\" },\r\n        { link: \"/logout\", label: \"Log out\" },\r\n        \r\n\r\n        \r\n         \r\n        \r\n      ];\r\n    } else {\r\n      links = [\r\n    \r\n        { link: \"/login\", label: \"Log in\" },\r\n        { link: \"/auth\", label: \"Registration\" },\r\n        { link: \"/about\", label: \"About\" },\r\n      ];\r\n    }\r\n    let linksElements = links.map((element, id) => {\r\n      return (\r\n        <NavigationItem {...this.props} link={element.link} key={id}>\r\n          {element.label}\r\n        </NavigationItem>\r\n      );\r\n    });\r\n    return (\r\n      <nav\r\n        className={\r\n          this.props.clicked\r\n            ? [classes.active, classes.headerMenu].join(\" \")\r\n            : classes.headerMenu\r\n        }\r\n      >\r\n        <ul className={classes.NavigationItems}>{linksElements}</ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(NavigationItems);\r\n","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\Navigation\\Toolbar\\Logo\\Logo.js",[],"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\functions\\getWorkByPassword.js",["202"],"function getWorkByPassword(workObject, password) {\r\n  let workArray = Object.keys(workObject).map((key) => {\r\n    return { ...workObject[key], id: key };\r\n  });\r\n  for (let i = 0; i < workArray.length; i++) {\r\n    if (workArray[i].password == password) {\r\n      return { error: null, work: workArray[i] };\r\n    }\r\n  }\r\n\r\n  return { error: \"There is no work with this password\", work: null };\r\n}\r\nexport default getWorkByPassword;\r\n","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\functions\\getWorkersByWork.js",[],"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\Navigation\\Toolbar\\NavigationItems\\NavigationItem\\NavigationItem.js",["203","204","205"],"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\TasksArray\\TasksArray.js",["206"],"import React, { Component } from \"react\";\r\nimport classes from \"./TasksArray.module.css\";\r\n\r\n\r\nclass TasksArray extends React.Component {\r\n    state = {\r\n        TasksArray: [\r\n            {\r\n                name: 'TaskName1',\r\n                description: \"At w3schools.com you will learn how to make a website. They offer free tutorials in all web development technologies.\",\r\n            },\r\n            {\r\n                name: 'TaskName2',\r\n                description: \"At w3schools.com you will learn how to make a website. They offer free tutorials in all web development technologies.\",\r\n            },\r\n            {\r\n                name: 'TaskName3',\r\n                description: \"At w3schools.com you will learn how to make a website. They offer free tutorials in all web development technologies.\",\r\n            },\r\n            {\r\n                name: 'TaskName1',\r\n                description: \"At w3schools.com you will learn how to make a website. They offer free tutorials in all web development technologies.\",\r\n            },\r\n            {\r\n                name: 'TaskName2',\r\n                description: \"At w3schools.com you will learn how to make a website. They offer free tutorials in all web development technologies.\",\r\n            },\r\n            {\r\n                name: 'TaskName3',\r\n                description: \"At w3schools.com you will learn how to make a website. They offer free tutorials in all web development technologies.\",\r\n            },\r\n        ]\r\n    }\r\n\r\n    showTask = () => {\r\n        let Tasks;\r\n        if (this.state.TasksArray) {\r\n            Tasks = this.state.TasksArray.map((tasksInfo, index) => {\r\n                // console.log(index)\r\n                return <li key={index+1} className={classes.taskItem}>\r\n                    <div className={classes.number}>#{index+1}</div>\r\n                    <h2><span>Name: </span>{tasksInfo.name}</h2>\r\n                    <p>\r\n                        <span>Description: </span>{tasksInfo.description}\r\n                    </p>\r\n                    <div className={classes.LinkInput}>\r\n                        <span>Link: </span><input />\r\n                    </div>\r\n                    <button className={classes.SendArticle}>\r\n                        Send Article\r\n                    </button>\r\n                </li>;\r\n            });\r\n        } else {\r\n            Tasks = <div>None</div>;\r\n        }\r\n        return Tasks;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.TasksArrayContainer}>\r\n                {this.showTask()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TasksArray;","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\store\\reducers\\taskReducer.js",[],{"ruleId":"207","severity":1,"message":"208","line":15,"column":7,"nodeType":"209","messageId":"210","endLine":15,"endColumn":13},{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","severity":1,"message":"216","line":79,"column":23,"nodeType":"217","messageId":"218","endLine":79,"endColumn":25},{"ruleId":"219","severity":1,"message":"220","line":44,"column":7,"nodeType":"221","messageId":"222","endLine":44,"endColumn":14},{"ruleId":"215","severity":1,"message":"216","line":65,"column":23,"nodeType":"217","messageId":"218","endLine":65,"endColumn":25},{"ruleId":"215","severity":1,"message":"223","line":16,"column":25,"nodeType":"217","messageId":"218","endLine":16,"endColumn":27},{"ruleId":"224","severity":1,"message":"225","line":18,"column":7,"nodeType":"226","endLine":18,"endColumn":17},{"ruleId":"215","severity":1,"message":"216","line":28,"column":38,"nodeType":"217","messageId":"218","endLine":28,"endColumn":40},{"ruleId":"207","severity":1,"message":"227","line":6,"column":13,"nodeType":"209","messageId":"210","endLine":6,"endColumn":24},{"ruleId":"207","severity":1,"message":"227","line":6,"column":13,"nodeType":"209","messageId":"210","endLine":6,"endColumn":24},{"ruleId":"207","severity":1,"message":"227","line":6,"column":13,"nodeType":"209","messageId":"210","endLine":6,"endColumn":24},{"ruleId":"207","severity":1,"message":"228","line":3,"column":8,"nodeType":"209","messageId":"210","endLine":3,"endColumn":18},{"ruleId":"207","severity":1,"message":"227","line":7,"column":13,"nodeType":"209","messageId":"210","endLine":7,"endColumn":24},{"ruleId":"215","severity":1,"message":"216","line":152,"column":60,"nodeType":"217","messageId":"218","endLine":152,"endColumn":62},{"ruleId":"207","severity":1,"message":"229","line":4,"column":10,"nodeType":"209","messageId":"210","endLine":4,"endColumn":20},{"ruleId":"215","severity":1,"message":"223","line":17,"column":38,"nodeType":"217","messageId":"218","endLine":17,"endColumn":40},{"ruleId":"230","severity":1,"message":"231","line":31,"column":13,"nodeType":"232","endLine":31,"endColumn":42},{"ruleId":"230","severity":1,"message":"231","line":62,"column":13,"nodeType":"232","endLine":62,"endColumn":40},{"ruleId":"230","severity":1,"message":"231","line":69,"column":15,"nodeType":"232","endLine":69,"endColumn":38},{"ruleId":"230","severity":1,"message":"231","line":73,"column":13,"nodeType":"232","endLine":73,"endColumn":41},{"ruleId":"230","severity":1,"message":"231","line":80,"column":15,"nodeType":"232","endLine":80,"endColumn":38},{"ruleId":"207","severity":1,"message":"233","line":168,"column":7,"nodeType":"209","messageId":"210","endLine":168,"endColumn":14},{"ruleId":"215","severity":1,"message":"216","line":174,"column":60,"nodeType":"217","messageId":"218","endLine":174,"endColumn":62},{"ruleId":"207","severity":1,"message":"234","line":175,"column":7,"nodeType":"209","messageId":"210","endLine":175,"endColumn":15},{"ruleId":"230","severity":1,"message":"231","line":185,"column":13,"nodeType":"232","endLine":185,"endColumn":64},{"ruleId":"207","severity":1,"message":"235","line":2,"column":10,"nodeType":"209","messageId":"210","endLine":2,"endColumn":25},{"ruleId":"207","severity":1,"message":"236","line":7,"column":8,"nodeType":"209","messageId":"210","endLine":7,"endColumn":15},{"ruleId":"207","severity":1,"message":"237","line":8,"column":20,"nodeType":"209","messageId":"210","endLine":8,"endColumn":27},{"ruleId":"207","severity":1,"message":"234","line":38,"column":7,"nodeType":"209","messageId":"210","endLine":38,"endColumn":15},{"ruleId":"215","severity":1,"message":"216","line":28,"column":15,"nodeType":"217","messageId":"218","endLine":28,"endColumn":17},{"ruleId":"215","severity":1,"message":"216","line":97,"column":15,"nodeType":"217","messageId":"218","endLine":97,"endColumn":17},{"ruleId":"215","severity":1,"message":"216","line":136,"column":18,"nodeType":"217","messageId":"218","endLine":136,"endColumn":20},{"ruleId":"238","severity":1,"message":"239","line":222,"column":40,"nodeType":"240","messageId":"241","endLine":222,"endColumn":42},{"ruleId":"215","severity":1,"message":"216","line":223,"column":38,"nodeType":"217","messageId":"218","endLine":223,"endColumn":40},{"ruleId":"215","severity":1,"message":"223","line":281,"column":41,"nodeType":"217","messageId":"218","endLine":281,"endColumn":43},{"ruleId":"215","severity":1,"message":"223","line":309,"column":29,"nodeType":"217","messageId":"218","endLine":309,"endColumn":31},{"ruleId":"215","severity":1,"message":"216","line":331,"column":51,"nodeType":"217","messageId":"218","endLine":331,"endColumn":53},{"ruleId":"215","severity":1,"message":"223","line":387,"column":42,"nodeType":"217","messageId":"218","endLine":387,"endColumn":44},{"ruleId":"215","severity":1,"message":"223","line":491,"column":44,"nodeType":"217","messageId":"218","endLine":491,"endColumn":46},{"ruleId":"215","severity":1,"message":"223","line":502,"column":33,"nodeType":"217","messageId":"218","endLine":502,"endColumn":35},{"ruleId":"215","severity":1,"message":"216","line":631,"column":48,"nodeType":"217","messageId":"218","endLine":631,"endColumn":50},{"ruleId":"242","severity":1,"message":"243","line":6,"column":3,"nodeType":"244","messageId":"245","endLine":8,"endColumn":4},{"ruleId":"215","severity":1,"message":"216","line":6,"column":31,"nodeType":"217","messageId":"218","endLine":6,"endColumn":33},{"ruleId":"215","severity":1,"message":"216","line":9,"column":49,"nodeType":"217","messageId":"218","endLine":9,"endColumn":51},{"ruleId":"215","severity":1,"message":"216","line":14,"column":49,"nodeType":"217","messageId":"218","endLine":14,"endColumn":51},{"ruleId":"215","severity":1,"message":"216","line":21,"column":29,"nodeType":"217","messageId":"218","endLine":21,"endColumn":31},{"ruleId":"207","severity":1,"message":"246","line":1,"column":17,"nodeType":"209","messageId":"210","endLine":1,"endColumn":26},"no-unused-vars","'logger' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["247"],"no-negated-in-lhs",["248"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","Expected '!==' and instead saw '!='.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'actionTypes' is defined but never used.","'classesTwo' is defined but never used.","'withRouter' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'spinner' is assigned a value but never used.","'redirect' is assigned a value but never used.","'CopyToClipboard' is defined but never used.","'Spinner' is defined but never used.","'NavLink' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]