[{"/home/vladichka/Boichuk/src/index.js":"1","/home/vladichka/Boichuk/src/App.js":"2","/home/vladichka/Boichuk/src/reportWebVitals.js":"3","/home/vladichka/Boichuk/src/store/reducers/workReducer.js":"4","/home/vladichka/Boichuk/src/store/reducers/workersReducer.js":"5","/home/vladichka/Boichuk/src/store/reducers/taskReducer.js":"6","/home/vladichka/Boichuk/src/store/reducers/userReducer.js":"7","/home/vladichka/Boichuk/src/store/actions/actionTypes.js":"8","/home/vladichka/Boichuk/src/hoc/Layout/Layout.js":"9","/home/vladichka/Boichuk/src/containers/Logout/Logout.js":"10","/home/vladichka/Boichuk/src/containers/SelectedWorkWorkers/SelectedWorkWorkers.js":"11","/home/vladichka/Boichuk/src/containers/Auth/Auth.js":"12","/home/vladichka/Boichuk/src/containers/Tasks/MyTasks.js":"13","/home/vladichka/Boichuk/src/containers/Login/Login.js":"14","/home/vladichka/Boichuk/src/containers/Works/Works.js":"15","/home/vladichka/Boichuk/src/containers/GetJob/GetJob.js":"16","/home/vladichka/Boichuk/src/containers/Works/CreateWork/CreateWork.js":"17","/home/vladichka/Boichuk/src/containers/SelectedTasks/SelectedTasks.js":"18","/home/vladichka/Boichuk/src/components/About/About.js":"19","/home/vladichka/Boichuk/src/containers/Tasks/TaskConponent/TaskComponent.js":"20","/home/vladichka/Boichuk/src/functions/validity.js":"21","/home/vladichka/Boichuk/src/components/User/User.js":"22","/home/vladichka/Boichuk/src/components/Navigation/Toolbar/Toolbar.js":"23","/home/vladichka/Boichuk/src/store/actions/index.js":"24","/home/vladichka/Boichuk/src/components/UI/Spinner/Spinner.js":"25","/home/vladichka/Boichuk/src/components/UI/Card/Card.js":"26","/home/vladichka/Boichuk/src/components/UI/Input/Input.js":"27","/home/vladichka/Boichuk/src/components/UI/Button/Button.js":"28","/home/vladichka/Boichuk/src/components/Works/WorkComponent/WorkComponent.js":"29","/home/vladichka/Boichuk/src/store/actions/actions.js":"30","/home/vladichka/Boichuk/src/components/Navigation/Toolbar/Logo/Logo.js":"31","/home/vladichka/Boichuk/src/components/Navigation/Toolbar/NavigationItems/NavigationItems.js":"32","/home/vladichka/Boichuk/src/components/Navigation/Toolbar/NavigationItems/NavigationItem/NavigationItem.js":"33","/home/vladichka/Boichuk/src/functions/getWorkByPassword.js":"34","/home/vladichka/Boichuk/src/functions/getWorkersByWork.js":"35","/home/vladichka/Boichuk/src/components/Task/Task.js":"36","/home/vladichka/Boichuk/src/store/reducers/reportReducer.js":"37","/home/vladichka/Boichuk/src/containers/Reports/Reports.js":"38","/home/vladichka/Boichuk/src/components/Report/Report.js":"39"},{"size":1600,"mtime":1609203364725,"results":"40","hashOfConfig":"41"},{"size":2362,"mtime":1609203515454,"results":"42","hashOfConfig":"41"},{"size":362,"mtime":1609098394538,"results":"43","hashOfConfig":"41"},{"size":2900,"mtime":1609098394542,"results":"44","hashOfConfig":"41"},{"size":1717,"mtime":1609098394542,"results":"45","hashOfConfig":"41"},{"size":2039,"mtime":1609202923510,"results":"46","hashOfConfig":"41"},{"size":2241,"mtime":1609098394538,"results":"47","hashOfConfig":"41"},{"size":2827,"mtime":1609202865690,"results":"48","hashOfConfig":"41"},{"size":377,"mtime":1609098394538,"results":"49","hashOfConfig":"41"},{"size":749,"mtime":1609098394538,"results":"50","hashOfConfig":"41"},{"size":2262,"mtime":1609098394538,"results":"51","hashOfConfig":"41"},{"size":5771,"mtime":1609098394538,"results":"52","hashOfConfig":"41"},{"size":1135,"mtime":1609098394538,"results":"53","hashOfConfig":"41"},{"size":5113,"mtime":1609098394538,"results":"54","hashOfConfig":"41"},{"size":2424,"mtime":1609098394538,"results":"55","hashOfConfig":"41"},{"size":4137,"mtime":1609098394538,"results":"56","hashOfConfig":"41"},{"size":5516,"mtime":1609098394538,"results":"57","hashOfConfig":"41"},{"size":1304,"mtime":1609197375961,"results":"58","hashOfConfig":"41"},{"size":3479,"mtime":1609098394534,"results":"59","hashOfConfig":"41"},{"size":3746,"mtime":1609098394538,"results":"60","hashOfConfig":"41"},{"size":715,"mtime":1609098394538,"results":"61","hashOfConfig":"41"},{"size":9245,"mtime":1609196323243,"results":"62","hashOfConfig":"41"},{"size":1219,"mtime":1609098394538,"results":"63","hashOfConfig":"41"},{"size":317,"mtime":1609202199624,"results":"64","hashOfConfig":"41"},{"size":202,"mtime":1609098394538,"results":"65","hashOfConfig":"41"},{"size":495,"mtime":1609098394538,"results":"66","hashOfConfig":"41"},{"size":2031,"mtime":1609098394538,"results":"67","hashOfConfig":"41"},{"size":326,"mtime":1609098394538,"results":"68","hashOfConfig":"41"},{"size":4650,"mtime":1609098394538,"results":"69","hashOfConfig":"41"},{"size":23346,"mtime":1609203417178,"results":"70","hashOfConfig":"41"},{"size":375,"mtime":1609098394538,"results":"71","hashOfConfig":"41"},{"size":1569,"mtime":1609203531287,"results":"72","hashOfConfig":"41"},{"size":1763,"mtime":1609098394538,"results":"73","hashOfConfig":"41"},{"size":418,"mtime":1609098394538,"results":"74","hashOfConfig":"41"},{"size":692,"mtime":1609098394538,"results":"75","hashOfConfig":"41"},{"size":1933,"mtime":1609197679169,"results":"76","hashOfConfig":"41"},{"size":643,"mtime":1609202957026,"results":"77","hashOfConfig":"41"},{"size":1117,"mtime":1609202462222,"results":"78","hashOfConfig":"41"},{"size":534,"mtime":1609203616611,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"q77st8",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"86"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"86"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"86"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/vladichka/Boichuk/src/index.js",["173"],"/home/vladichka/Boichuk/src/App.js",[],"/home/vladichka/Boichuk/src/reportWebVitals.js",[],["174","175"],"/home/vladichka/Boichuk/src/store/reducers/workReducer.js",["176"],"import * as actionTypes from \"../actions/actionTypes\";\nconst initialState = {\n  works: [],\n  loading: false,\n  error: false,\n  redirectWork: null,\n  worksTask: [],\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.UPLOAD_WORKS_START: {\n      return {\n        ...state,\n        error: false,\n        loading: true,\n      };\n    }\n    case actionTypes.UPLOAD_WORKS_FAIL: {\n      return {\n        ...state,\n        error: action.error,\n        loading: false,\n      };\n    }\n    case actionTypes.UPLOAD_WORKS_SUCCESS: {\n      return {\n        ...state,\n        error: false,\n        loading: false,\n        works: action.works,\n      };\n    }\n    case actionTypes.REMOVE_WORK_START: {\n      return {\n        ...state,\n        error: false,\n        loading: true,\n      };\n    }\n    case actionTypes.REMOVE_WORK_FAIL: {\n      return {\n        ...state,\n        error: action.error,\n        loading: false,\n      };\n    }\n    case actionTypes.REMOVE_WORK_SUCCESS: {\n      return {\n        ...state,\n        error: false,\n        loading: false,\n        works: action.works,\n        redirectWork: \"/myWorks\",\n      };\n    }\n    case actionTypes.GET_JOB_START: {\n      return {\n        ...state,\n        error: false,\n        loading: true,\n      };\n    }\n    case actionTypes.GET_JOB_FAIL: {\n      return {\n        ...state,\n        error: action.error,\n        loading: false,\n      };\n    }\n    case actionTypes.GET_JOB_SUCCESS: {\n      return {\n        ...state,\n        error: false,\n        loading: false,\n        redirectWork: \"/about\",\n      };\n    }\n    case actionTypes.SET_REDIRECT_WORK_PATH: {\n      if (action.path == \"null\") {\n        return {\n          ...state,\n          redirectWork: null,\n        };\n      } else {\n        return {\n          ...state,\n          redirectWork: action.path,\n        };\n      }\n    }\n    //\n    //\n    //\n    case actionTypes.GET_WORKS_TASKS_START: {\n      return {\n        ...state,\n        error: false,\n        loading: true,\n      };\n    }\n    case actionTypes.GET_WORKS_TASKS_FAIL: {\n      return {\n        ...state,\n        error: action.error,\n        loading: false,\n      };\n    }\n    case actionTypes.GET_WORKS_TASKS_SUCCESS: {\n      return {\n        ...state,\n        error: false,\n        loading: false,\n        worksTask: action.worksTask,\n      };\n    }\n    //\n    //\n    //\n    case actionTypes.LEAVE_WORK_FAIL: {\n      return {\n        ...state,\n        error: action.error,\n        loading: false,\n      };\n    }\n    case actionTypes.LEAVE_WORK_START: {\n      return {\n        ...state,\n        error: null,\n        loading: true,\n      };\n    }\n    case actionTypes.LEAVE_WORK_SUCCESS: {\n     \n      return {\n        ...state,\n        error: false,\n        loading: false,\n        worksTask:action.newTasks,\n      };\n    }\n    default:\n      return state;\n  }\n};\nexport default reducer;\n","/home/vladichka/Boichuk/src/store/reducers/workersReducer.js",[],"/home/vladichka/Boichuk/src/store/reducers/taskReducer.js",[],"/home/vladichka/Boichuk/src/store/reducers/userReducer.js",["177","178"],"import * as actionTypes from \"../actions/actionTypes\";\nconst initialState = {\n  token: null,\n  userId: null,\n  error: null,\n  redirect: null,\n  loading: null,\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_SUCCESS: {\n      return {\n        token: null,\n        userId: null,\n        error: null,\n        redirect: \"/login\",\n        loading: false,\n      };\n    }\n    case actionTypes.AUTH_FAIL: {\n      return {\n        token: null,\n        userId: null,\n        error: action.error,\n        loading: false,\n      };\n    }\n    case actionTypes.AUTH_START: {\n      return {\n        token: null,\n        userId: null,\n        error: null,\n        loading: true,\n      };\n    }\n    case actionTypes.LOGIN_START: {\n      return {\n        token: null,\n        userId: null,\n        error: null,\n        loading: true,\n        redirect: null,\n      };\n      return;\n    }\n    case actionTypes.LOGIN_FAIL: {\n      return {\n        token: null,\n        userId: null,\n        error: action.error,\n        loading: null,\n        redirect: null,\n      };\n    }\n    case actionTypes.LOGIN_SUCCESS: {\n      return {\n        token: action.token,\n        userId: action.userId,\n        error: null,\n        redirect: \"/about\",\n        loading: false,\n      };\n    }\n    case actionTypes.SET_PATH: {\n      if (action.path == \"null\") {\n        return {\n          ...state,\n          redirect: null,\n        };\n      } else {\n        return {\n          ...state,\n          redirect: action.path,\n        };\n      }\n    }\n    case actionTypes.LOGOUT: {\n      return {\n        token: null,\n        userId: null,\n        error: null,\n        loading: null,\n        redirect: null,\n      };\n    }\n    case actionTypes.CREATE_WORK_FAIL: {\n      return {\n        ...state,\n        error: action.error,\n        loading: false,\n      };\n    }\n    case actionTypes.CREATE_WORK_START: {\n      return {\n        ...state,\n        error: null,\n        loading: true,\n      };\n    }\n    case actionTypes.CREATE_WORK_SUCCESS: {\n      return {\n        ...state,\n        error: null,\n        loading: false,\n        redirect: \"/myWorks\",\n      };\n    }\n    default:\n      return state;\n  }\n};\nexport default reducer;\n","/home/vladichka/Boichuk/src/store/actions/actionTypes.js",[],"/home/vladichka/Boichuk/src/hoc/Layout/Layout.js",[],"/home/vladichka/Boichuk/src/containers/Logout/Logout.js",[],"/home/vladichka/Boichuk/src/containers/SelectedWorkWorkers/SelectedWorkWorkers.js",["179","180"],"import React, { Component } from \"react\";\nimport * as actions from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport UserComponent from \"../../components/User/User\";\nimport classes from \"./SelectedWorkWorkers.module.css\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nclass SelectedWorkWorkers extends Component {\n  state = {\n    workId: \"lol\",\n  };\n  componentDidMount() {\n    const search = this.props.location.search;\n    const params = new URLSearchParams(search);\n    const workId = params.get(\"workId\");\n    this.setState({ workId: workId });\n    if (this.props.jobWorkers.length != 0) {\n      this.props.onSetEmptyWorkers();\n    }\n    this.props.onUploadWorkers(workId, this.props.userId, this.props.token);\n  }\n  render() {\n    let spinner = null;\n    if (this.props.loading) {\n      spinner = <Spinner />;\n    }\n    let error = null;\n    if (this.props.error) {\n      error = <div>{this.props.error}</div>;\n    }\n    console.log(this.props.jobWorkers);\n\n    let workersToRender = this.props.jobWorkers.map((worker) => {\n      return (\n        <UserComponent\n          selectedUserId={worker.userId}\n          userName={worker.nickname}\n          userRating={\"high\"}\n          userTasks={2}\n          workId={this.state.workId}\n        />\n      );\n    });\n    return (\n      <React.Fragment>\n        {error}\n        {spinner}\n        <ul className={classes.UserList}>{workersToRender}</ul>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    userId: state.auth.userId,\n    error: state.jobWorkers.error,\n    redirect: state.auth.redirect,\n    loading: state.jobWorkers.loading,\n    jobWorkers: state.jobWorkers.workers,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onLogin: (login, password) => dispatch(actions.login(login, password)),\n    setRedirectPath: (path) => dispatch(actions.setRedirectPath(path)),\n    onUploadWorkers: (workId, userId, token) =>\n      dispatch(actions.uploadWorkers(workId, userId, token)),\n    onSetEmptyWorkers: () => dispatch(actions.setEmptyWorkers()),\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SelectedWorkWorkers);\n","/home/vladichka/Boichuk/src/containers/Auth/Auth.js",["181"],"import React, { Component } from \"react\";\nimport classes from \"./Auth.module.css\";\nimport Card from \"../../components/UI/Card/Card\";\nimport InputElement from \"../../components/UI/Input/Input\";\nimport ButtonElement from \"../../components/UI/Button/Button\";\nimport * as actionTypes from \"../../store/actions/actionTypes\";\nimport * as actions from \"../../store/actions/index\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nclass Auth extends Component {\n  state = {\n    controls: {\n      nickname: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"\",\n          placeholder: \"VladichBub\",\n        },\n        label: \"Nickname\",\n        touched: false,\n        value: \"\",\n        validation: {\n          required: true,\n          valid: false,\n          minLength: 4,\n          isEmail: false,\n        },\n      },\n      email: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"email\",\n          placeholder: \"Mail Address\",\n        },\n        label: \"Email\",\n        touched: false,\n        value: \"\",\n        validation: {\n          required: true,\n          valid: false,\n          minLength: 6,\n          isEmail: true,\n        },\n      },\n      password: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"password\",\n          placeholder: \"Password\",\n        },\n        label: \"Password\",\n        touched: false,\n        value: \"\",\n        validation: {\n          required: true,\n          valid: false,\n          minLength: 6,\n          maxLength: 25,\n        },\n      },\n      confirmPassword: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"password\",\n          placeholder: \"Confirm password\",\n        },\n        label: \"Confirm password\",\n        touched: false,\n        value: \"\",\n        validation: {\n          required: true,\n          valid: false,\n          minLength: 6,\n          maxLength: 25,\n        },\n      },\n    },\n    signUp: true,\n  };\n  checkValidity(value, rules) {\n    let isValid = true;\n    if (!rules) {\n      return true;\n    }\n    if (rules.required) {\n      isValid = value.trim() !== \"\" && isValid;\n    }\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n    if (rules.isEmail) {\n      const pattern = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n      console.log(value);\n      isValid = pattern.test(value) && isValid;\n      console.log(isValid);\n    }\n    if (rules.isNumeric) {\n      const pattern = /^\\d+$/;\n      isValid = pattern.test(value) && isValid;\n    }\n    return isValid;\n  }\n  inputChangedHandler = (event, controlName) => {\n    const updatedControls = {\n      ...this.state.controls,\n      [controlName]: {\n        ...this.state.controls[controlName],\n        value: event.target.value,\n        validation: {\n          ...this.state.controls[controlName].validation,\n          valid: this.checkValidity(\n            event.target.value,\n            this.state.controls[controlName].validation\n          ),\n        },\n        touched: true,\n      },\n    };\n    this.setState({ controls: updatedControls });\n  };\n  submitHandler = (event) => {\n    event.preventDefault();\n    this.props.onAuth(\n      this.state.controls.email.value,\n      this.state.controls.password.value,\n      this.state.controls.confirmPassword.value,\n      this.state.controls.nickname.value\n    );\n  };\n  render() {\n    const formElementsArray = [];\n    for (let key in this.state.controls) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.controls[key],\n      });\n    }\n    let form = formElementsArray.map((element) => {\n      return (\n        <InputElement\n          key={element.id}\n          changed={(event) => this.inputChangedHandler(event, element.id)}\n          elementType={element.config.elementType}\n          elementConfig={element.config.elementConfig}\n          invalid={!element.config.validation.valid}\n          value={element.config.value}\n          shouldValidate={element.config.validation.required}\n          touched={element.config.touched}\n          label={element.config.label}\n        />\n      );\n    });\n    let error = null;\n    if (this.props.error) {\n      error = (\n        <React.Fragment>\n          <style>\n            @import\n            url('https://fonts.googleapis.com/css2?family=Russo+One&display=swap');\n          </style>\n          <div className={classes.errorMessage}>{this.props.error}</div>\n        </React.Fragment>\n      );\n      console.log(\"fefef\");\n    }\n    let redirect = null;\n    if (this.props.redirect) {\n      redirect = <Redirect to={this.props.redirect} />;\n    }\n    let spinner = null;\n    if (this.props.loading) {\n      spinner = <Spinner />;\n    }\n    return (\n      <React.Fragment>\n        {spinner}\n        <Card titleName=\"Authentification\" width=\"500px\">\n          {redirect}\n          <form className={classes.form} onSubmit={this.submitHandler}>\n            {form}\n            {error}\n            <ButtonElement btnType=\"Success\">OK</ButtonElement>\n          </form>\n        </Card>\n      </React.Fragment>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    userId: state.auth.userId,\n    error: state.auth.error,\n    redirect: state.auth.redirect,\n    loading: state.auth.loading,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAuth: (login, password, repeatPassword, nickname) =>\n      dispatch(actions.auth(login, password, repeatPassword, nickname)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\n","/home/vladichka/Boichuk/src/containers/Tasks/MyTasks.js",[],"/home/vladichka/Boichuk/src/containers/Login/Login.js",["182"],"import React, { Component } from \"react\";\nimport classes from \"./Login.module.css\";\nimport Card from \"../../components/UI/Card/Card\";\nimport InputElement from \"../../components/UI/Input/Input\";\nimport ButtonElement from \"../../components/UI/Button/Button\";\nimport * as actionTypes from \"../../store/actions/actionTypes\";\nimport * as actions from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nclass Login extends Component {\n  state = {\n    controls: {\n      email: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"email\",\n          placeholder: \"Mail Address\",\n        },\n        label: \"Email\",\n        touched: false,\n        value: \"\",\n        validation: {\n          required: true,\n          valid: false,\n          minLength: 6,\n          isEmail: true,\n        },\n      },\n      password: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"password\",\n          placeholder: \"Password\",\n        },\n        label: \"Password\",\n        touched: false,\n        value: \"\",\n        validation: {\n          required: true,\n          valid: false,\n          minLength: 6,\n          maxLength: 25,\n        },\n      },\n    },\n    signUp: true,\n  };\n  componentDidMount() {\n    if (this.props.token) {\n      this.props.setRedirectPath(\"/\");\n    } else {\n      this.props.setRedirectPath(\"null\");\n    }\n  }\n  checkValidity(value, rules) {\n    let isValid = true;\n    if (!rules) {\n      return true;\n    }\n    if (rules.required) {\n      isValid = value.trim() !== \"\" && isValid;\n    }\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n    if (rules.isEmail) {\n      const pattern = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n      console.log(value);\n      isValid = pattern.test(value) && isValid;\n      console.log(isValid);\n    }\n    if (rules.isNumeric) {\n      const pattern = /^\\d+$/;\n      isValid = pattern.test(value) && isValid;\n    }\n    return isValid;\n  }\n  inputChangedHandler = (event, controlName) => {\n    const updatedControls = {\n      ...this.state.controls,\n      [controlName]: {\n        ...this.state.controls[controlName],\n        value: event.target.value,\n        validation: {\n          ...this.state.controls[controlName].validation,\n          valid: this.checkValidity(\n            event.target.value,\n            this.state.controls[controlName].validation\n          ),\n        },\n        touched: true,\n      },\n    };\n    this.setState({ controls: updatedControls });\n  };\n  submitHandler = (event) => {\n    event.preventDefault();\n    this.props.onLogin(\n      this.state.controls.email.value,\n      this.state.controls.password.value,\n    );\n  };\n  render() {\n    const formElementsArray = [];\n    for (let key in this.state.controls) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.controls[key],\n      });\n    }\n    let form = formElementsArray.map((element) => {\n      return (\n        <InputElement\n          key={element.id}\n          changed={(event) => this.inputChangedHandler(event, element.id)}\n          elementType={element.config.elementType}\n          elementConfig={element.config.elementConfig}\n          invalid={!element.config.validation.valid}\n          value={element.config.value}\n          shouldValidate={element.config.validation.required}\n          touched={element.config.touched}\n          label={element.config.label}\n        />\n      );\n    });\n    let error = null;\n    if (this.props.error) {\n      error = (\n        <React.Fragment>\n          <style>\n            @import\n            url('https://fonts.googleapis.com/css2?family=Russo+One&display=swap');\n          </style>\n          <div className={classes.errorMessage}>{this.props.error}</div>\n        </React.Fragment>\n      );\n      console.log(\"fefef\");\n    }\n    let spinner = null;\n    if (this.props.loading) {\n      spinner = <Spinner />;\n    }\n    let redirect = null;\n    if (this.props.redirect) {\n      redirect = <Redirect to={this.props.redirect} />;\n    }\n    return (\n      <React.Fragment>\n        {spinner}\n        <Card titleName=\"Log in\" width=\"500px\">\n          {redirect}\n          <form className={classes.form} onSubmit={this.submitHandler}>\n            {form}\n            {error}\n            <ButtonElement btnType=\"Success\">OK</ButtonElement>\n          </form>\n        </Card>\n      </React.Fragment>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    userId: state.auth.userId,\n    error: state.auth.error,\n    redirect: state.auth.redirect,\n    loading: state.auth.loading,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onLogin: (login, password) => dispatch(actions.login(login, password)),\n    setRedirectPath: (path) => dispatch(actions.setRedirectPath(path)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","/home/vladichka/Boichuk/src/containers/Works/Works.js",["183","184","185"],"import React, { Component } from \"react\";\nimport * as actions from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport WorkComponent from \"../../components/Works/WorkComponent/WorkComponent\";\nimport classes from \"./Works.module.css\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nclass MyWorks extends Component {\n  state = { works: [], didComponentsLoad: false };\n\n  componentDidMount() {\n    this.props.onUploadWorks(this.props.userId, this.props.token);\n    console.log(this.props.works);\n    this.props.setRedirectPath(\"null\");\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.works != this.props.works) {\n      this.setState({ didComponentsLoad: true });\n      this.state.works = this.props.works;\n    }\n  }\n\n  render() {\n    let spinner = null;\n    if (this.props.loadingWork) {\n      spinner = <Spinner />;\n    }\n    let worksRender;\n    if (this.state.didComponentsLoad == false) {\n      worksRender = this.props.works.map((work, id) => {\n        return (\n          <WorkComponent\n            key={id}\n            description={work.description}\n            name={work.name}\n            password={work.password}\n            workId={work.id}\n            workers={work.workers ? work.workers : null}\n            index={id}\n          />\n        );\n      });\n    } else {\n      worksRender = this.state.works.map((work, id) => {\n        return (\n          <WorkComponent\n            key={id}\n            description={work.description}\n            name={work.name}\n            password={work.password}\n            workId={work.id}\n            workers={work.workers ? work.workers : null}\n            index={id}\n          />\n        );\n      });\n    }\n\n    return (\n      <React.Fragment>\n        {spinner}\n        <ul className={classes.WorkList}>{worksRender}</ul>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    userId: state.auth.userId,\n    error: state.auth.error,\n    redirect: state.auth.redirect,\n    loading: state.auth.loading,\n    works: state.works.works,\n    loadingWork: state.works.loading,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onUploadWorks: (userId, token) =>\n      dispatch(actions.uploadWorks(userId, token)),\n    setRedirectPath: (path) => dispatch(actions.setRedirectPath(path)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(MyWorks);\n","/home/vladichka/Boichuk/src/containers/GetJob/GetJob.js",["186"],"import React, { Component } from \"react\";\nimport classes from \"../Login/Login.module.css\";\nimport Card from \"../../components/UI/Card/Card\";\nimport InputElement from \"../../components/UI/Input/Input\";\nimport ButtonElement from \"../../components/UI/Button/Button\";\nimport * as actionTypes from \"../../store/actions/actionTypes\";\nimport * as actions from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport checkValidity from \"../../functions/validity\";\nclass GetJob extends Component {\n  state = {\n    controls: {\n      jobPassCode: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"\",\n          placeholder: \"2bod7f22-453a-11eb-b378-0242ac130002\",\n        },\n        label: \"Pass code\",\n        touched: false,\n        value: \"\",\n        validation: {\n          required: true,\n          valid: false,\n          minLength: 36,\n          maxLength: 36,\n          isEmail: false,\n        },\n      },\n    },\n    signUp: true,\n  };\n  componentDidMount() {\n    console.log(this.props);\n  }\n\n  inputChangedHandler = (event, controlName) => {\n    const updatedControls = {\n      ...this.state.controls,\n      [controlName]: {\n        ...this.state.controls[controlName],\n        value: event.target.value,\n        validation: {\n          ...this.state.controls[controlName].validation,\n          valid: checkValidity(\n            event.target.value,\n            this.state.controls[controlName].validation\n          ),\n        },\n        touched: true,\n      },\n    };\n    this.setState({ controls: updatedControls });\n  };\n  submitHandler = (event) => {\n    event.preventDefault();\n    this.props.onGetJob(\n      this.state.controls.jobPassCode.value,\n      this.props.userId,\n      this.props.token\n    );\n  };\n  render() {\n    const formElementsArray = [];\n    for (let key in this.state.controls) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.controls[key],\n      });\n    }\n    let form = formElementsArray.map((element) => {\n      return (\n        <InputElement\n          key={element.id}\n          changed={(event) => this.inputChangedHandler(event, element.id)}\n          elementType={element.config.elementType}\n          elementConfig={element.config.elementConfig}\n          invalid={!element.config.validation.valid}\n          value={element.config.value}\n          shouldValidate={element.config.validation.required}\n          touched={element.config.touched}\n          label={element.config.label}\n        />\n      );\n    });\n    let error = null;\n    if (this.props.error) {\n      error = (\n        <React.Fragment>\n          <style>\n            @import\n            url('https://fonts.googleapis.com/css2?family=Russo+One&display=swap');\n          </style>\n          <div className={classes.errorMessage}>{this.props.error}</div>\n        </React.Fragment>\n      );\n      console.log(\"fefef\");\n    }\n    let spinner = null;\n    if (this.props.loading) {\n      spinner = <Spinner />;\n    }\n    let redirect = null;\n    if (this.props.redirectWork) {\n      redirect = <Redirect to={this.props.redirectWork} />;\n    }\n    return (\n      <React.Fragment>\n        {spinner}\n        <Card titleName=\"Get a job\" width=\"500px\">\n          {redirect}\n          <form className={classes.form} onSubmit={this.submitHandler}>\n            {form}\n            {error}\n            <ButtonElement btnType=\"Success\">OK</ButtonElement>\n          </form>\n        </Card>\n      </React.Fragment>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    userId: state.auth.userId,\n    redirect: state.auth.redirect,\n    error: state.works.error,\n    loading: state.works.loading,\n    redirectWork: state.works.redirectWork,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onGetJob: (password, userId, jobId) =>\n      dispatch(actions.getJob(password, userId, jobId)),\n    setRedirectPath: (path) => dispatch(actions.setRedirectPath(path)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(GetJob);\n","/home/vladichka/Boichuk/src/containers/Works/CreateWork/CreateWork.js",["187","188","189"],"import React, { Component } from \"react\";\nimport classes from \"../../Login/Login.module.css\";\nimport classesTwo from \"./CreateWork.module.css\";\nimport Card from \"../../../components/UI/Card/Card\";\nimport InputElement from \"../../../components/UI/Input/Input\";\nimport ButtonElement from \"../../../components/UI/Button/Button\";\nimport * as actionTypes from \"../../../store/actions/actionTypes\";\nimport * as actions from \"../../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\nclass CreateWork extends Component {\n  state = {\n    controls: {\n      WorkName: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"\",\n          placeholder: \"Dota 2\",\n        },\n        label: \"Work name\",\n        touched: false,\n        value: \"\",\n        validation: {\n          required: true,\n          valid: false,\n          minLength: 1,\n          maxLength: 20,\n          isEmail: false,\n        },\n      },\n      WorkDescription: {\n        elementType: \"textarea\",\n        elementConfig: {\n          type: \"\",\n          placeholder:\n            \"At w3schools.com you will learn how to make a website. They offer free tutorials in all web development technologies.\",\n        },\n        label: \"Description\",\n        touched: false,\n        value: \"\",\n        validation: {\n          required: true,\n          valid: false,\n          minLength: 3,\n          maxLength: 500,\n        },\n      },\n    },\n    signUp: true,\n  };\n  componentDidMount() {\n    this.props.setRedirectPath(\"null\");\n  }\n  checkValidity(value, rules) {\n    let isValid = true;\n    if (!rules) {\n      return true;\n    }\n    if (rules.required) {\n      isValid = value.trim() !== \"\" && isValid;\n    }\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n    if (rules.isEmail) {\n      const pattern = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n      console.log(value);\n      isValid = pattern.test(value) && isValid;\n      console.log(isValid);\n    }\n    if (rules.isNumeric) {\n      const pattern = /^\\d+$/;\n      isValid = pattern.test(value) && isValid;\n    }\n    return isValid;\n  }\n  inputChangedHandler = (event, controlName) => {\n    const updatedControls = {\n      ...this.state.controls,\n      [controlName]: {\n        ...this.state.controls[controlName],\n        value: event.target.value,\n        validation: {\n          ...this.state.controls[controlName].validation,\n          valid: this.checkValidity(\n            event.target.value,\n            this.state.controls[controlName].validation\n          ),\n        },\n        touched: true,\n      },\n    };\n    this.setState({ controls: updatedControls });\n  };\n  submitHandler = (event) => {\n    event.preventDefault();\n    this.props.onCreateWork(\n      this.state.controls.WorkName.value,\n      this.state.controls.WorkDescription.value,\n      this.props.userId,\n      this.props.token\n    );\n  };\n  render() {\n    const formElementsArray = [];\n    for (let key in this.state.controls) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.controls[key],\n      });\n    }\n    let form = formElementsArray.map((element) => {\n      return (\n        <InputElement\n          key={element.id}\n          changed={(event) => this.inputChangedHandler(event, element.id)}\n          elementType={element.config.elementType}\n          elementConfig={element.config.elementConfig}\n          invalid={!element.config.validation.valid}\n          value={element.config.value}\n          shouldValidate={element.config.validation.required}\n          touched={element.config.touched}\n          label={element.config.label}\n        />\n      );\n    });\n    let error = null;\n    if (this.props.error) {\n      error = (\n        <React.Fragment>\n          <style>\n            @import\n            url('https://fonts.googleapis.com/css2?family=Russo+One&display=swap');\n          </style>\n          <div className={classes.errorMessage}>{this.props.error}</div>\n        </React.Fragment>\n      );\n      console.log(\"fefef\");\n    }\n    let spinner = null;\n    if (this.props.loading) {\n      spinner = <Spinner />;\n    }\n    let redirect = null;\n    if (this.props.redirect) {\n      redirect = <Redirect to={this.props.redirect} />;\n    }\n    if (this.props.redirect == null || this.props.redirect == \"null\") {\n      redirect = null;\n    }\n\n    return (\n      <React.Fragment>\n        {spinner}\n        <Card titleName=\"Create new work\" width=\"500px\">\n          {redirect}\n          <form className={classes.form} onSubmit={this.submitHandler}>\n            {form}\n            {error}\n            <ButtonElement btnType=\"Success\">CREATE</ButtonElement>\n          </form>\n        </Card>\n      </React.Fragment>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n    return {\n        token: state.auth.token,\n        userId: state.auth.userId,\n        error: state.auth.error,\n        redirect: state.auth.redirect,\n        loading: state.auth.loading,\n      };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onCreateWork: (name, description, userId, token) =>\n      dispatch(actions.createWork(name, description, userId, token)),\n    setRedirectPath: (path) => dispatch(actions.setRedirectPath(path)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateWork);\n","/home/vladichka/Boichuk/src/containers/SelectedTasks/SelectedTasks.js",[],"/home/vladichka/Boichuk/src/components/About/About.js",["190","191","192","193","194"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classes from \"./About.module.css\";\nimport AboutProjectImg from \"./img/AboutProject.jpg\";\nimport developerTaras from \"./img/taras.jpg\";\nimport developerVlad from \"./img/vlad.jpg\";\nimport instagram from \"./img/instagram.png\";\nimport * as actions from \"../../store/actions/index\";\nclass About extends Component {\n  state = {\n    lol: \"null\",\n  };\n  componentDidMount() {\n    this.props.setRedirectPath(\"null\");\n    this.props.setRedirectWorkPath(\"null\");\n  }\n  render() {\n    return (\n      <div className={classes.About}>\n        <h3>Strong Manager</h3>\n        <h2>What we do</h2>\n        <hr />\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat\n        </p>\n        <div className={classes.AboutProject}>\n          <div className={classes.AboutProjectImg}>\n            <img src={AboutProjectImg} />\n          </div>\n          <div className={classes.AboutProjectText}>\n            <div className={classes.TextContainer}>\n              <h4>Organization</h4>\n              <p>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n                eiusmod tempor incididunt ut labore et dolore magna aliqua.\n              </p>\n            </div>\n            <div className={classes.TextContainer}>\n              <h4>Team Work</h4>\n              <p>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n                eiusmod tempor incididunt ut labore et dolore magna aliqua.\n              </p>\n            </div>\n            <div className={classes.TextContainer}>\n              <h4>Management</h4>\n              <p>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n                eiusmod tempor incididunt ut labore et dolore magna aliqua.\n              </p>\n            </div>\n          </div>\n        </div>\n        <h3 className={classes.weAre}>Who we are</h3>\n        <h2>Meet our team</h2>\n        <hr />\n        <div className={classes.Team}>\n          <div className={classes.developer}>\n            <img src={developerVlad} />\n            <h2>Vlad Boichuk</h2>\n            <h3>Project Manager</h3>\n            <a\n              href=\"https://www.instagram.com/vla2383public/?hl=ru\"\n              target=\"blank\"\n            >\n              <img src={instagram} />\n            </a>\n          </div>\n          <div className={classes.developer}>\n            <img src={developerTaras} />\n            <h2>Taras Hnatkiv</h2>\n            <h3>Project Manager</h3>\n            <a\n              href=\"https://www.instagram.com/chelovek_afk/?hl=ru\"\n              target=\"blank\"\n            >\n              <img src={instagram} />\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    token: state.token,\n    userId: state.userId,\n    error: state.error,\n    redirect: state.redirect,\n    loading: state.loading,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setRedirectPath: (path) => dispatch(actions.setRedirectPath(path)),\n    setRedirectWorkPath: (path) => dispatch(actions.setRedirectWorkPath(path)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(About);\n","/home/vladichka/Boichuk/src/containers/Tasks/TaskConponent/TaskComponent.js",["195"],"import React from \"react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport classes from \"./TaskComponent.module.css\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../store/actions/index\";\nimport { withRouter } from \"react-router-dom\";\nclass TaskComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      delete: false,\n    };\n  }\n\n  cancelDelete = () => {\n    this.setState({\n      delete: !this.state.delete,\n    });\n  };\n  leaveWorkClick = () => {\n    this.props.onLeaveWork(\n      this.props.info.id,\n      this.props.userId,\n      this.props.token\n    );\n  };\n  redirectClick = () => {\n    this.props.history.push(`selectedTasks?workId=${this.props.info.id}`);\n  };\n\n  render() {\n    return (\n      <li className={classes.Work}>\n          <div className={classes.number}>#{this.props.index+1}</div>\n        <div className={classes.TopWorkHeader}>\n          <div className={classes.RemoveWork} onClick={this.cancelDelete}>\n            <i className={\"fas fa-door-open\"}></i>\n          </div>\n          <div className={classes.Label}>{this.props.info.name}</div>\n        </div>\n        <div className={classes.Description}>\n          <style>\n            @import\n            url('https://fonts.googleapis.com/css2?family=Langar&family=Pacifico&family=Questrial&display=swap');\n          </style>\n          {this.props.info.description}\n        </div>\n        <div className={classes.UserGroup}>\n          <div> Workers:</div>\n          <div>\n            <i class=\"fa fa-users\" aria-hidden=\"true\"></i>\n          </div>\n          <div>\n            <font className={classes.UsersGroupValue}>\n              {this.props.info.workers.length\n                ? this.props.info.workers.length\n                : 0}\n            </font>\n          </div>\n        </div>\n        <div onClick={this.redirectClick} className={classes.TaskGroup}>\n          <style>\n            @import\n            url('https://fonts.googleapis.com/css2?family=Langar&family=Pacifico&family=Questrial&display=swap');\n          </style>\n          <div>Tasks:</div>\n          <div className={classes.TaskGroupValue}>\n            <i class=\"fas fa-tasks\"></i>\n          </div>\n          <div className={classes.TaskGroupValue}>\n            {this.props.info.tasks.length}\n          </div>\n        </div>\n        <div\n          className={\n            this.state.delete\n              ? [classes.active, classes.DeleteContainer].join(\" \")\n              : classes.DeleteContainer\n          }\n        >\n          <div className={classes.container}>\n            <h1>Leave Work</h1>\n            <p className={classes.confirm}>\n              Are you sure you want to leave your work?\n            </p>\n            <div className={classes.clearfix}>\n              <button\n                type=\"button\"\n                onClick={this.cancelDelete}\n                className={classes.cancelbtn}\n              >\n                Cancel\n              </button>\n              <button\n                onClick={this.leaveWorkClick}\n                type=\"button\"\n                className={classes.deletebtn}\n              >\n                Leave\n              </button>\n            </div>\n          </div>\n        </div>\n      </li>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    userId: state.auth.userId,\n    error: state.auth.error,\n    redirect: state.auth.redirect,\n    loading: state.auth.loading,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onLeaveWork: (workId, userId, token) =>\n      dispatch(actions.leaveWork(workId, userId, token)),\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(TaskComponent));\n","/home/vladichka/Boichuk/src/functions/validity.js",[],"/home/vladichka/Boichuk/src/components/User/User.js",["196","197","198","199"],"import React, { Component } from \"react\";\nimport \"../../../node_modules/@fortawesome/fontawesome-free/css/all.css\";\nimport classes from \"./User.module.css\";\nimport femaleUser from \"./femaleUser.png\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/index\";\nimport InputElement from \"../../components/UI/Input/Input\";\nimport { Redirect } from \"react-router-dom\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\n\nclass User extends Component {\n  state = {\n    delete: false,\n    addTask: false,\n    controls: {\n      TaskName: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"\",\n          placeholder: \"make coffe\",\n        },\n        label: \"Task name\",\n        touched: false,\n        value: \"\",\n        validation: {\n          required: true,\n          valid: false,\n          minLength: 1,\n          maxLength: 20,\n          isEmail: false,\n        },\n      },\n      TaskDescription: {\n        elementType: \"textarea\",\n        elementConfig: {\n          type: \"\",\n          placeholder:\n            \"At w3schools.com you will learn how to make a website. They offer free tutorials in all web development technologies.\",\n        },\n        label: \"Description\",\n        touched: false,\n        value: \"\",\n        validation: {\n          required: true,\n          valid: false,\n          minLength: 3,\n          maxLength: 500,\n        },\n      },\n    },\n    signUp: true,\n  };\n  checkValidity(value, rules) {\n    let isValid = true;\n    if (!rules) {\n      return true;\n    }\n    if (rules.required) {\n      isValid = value.trim() !== \"\" && isValid;\n    }\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n    if (rules.isEmail) {\n      const pattern = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n      console.log(value);\n      isValid = pattern.test(value) && isValid;\n      console.log(isValid);\n    }\n    if (rules.isNumeric) {\n      const pattern = /^\\d+$/;\n      isValid = pattern.test(value) && isValid;\n    }\n    return isValid;\n  }\n  inputChangedHandler = (event, controlName) => {\n    const updatedControls = {\n      ...this.state.controls,\n      [controlName]: {\n        ...this.state.controls[controlName],\n        value: event.target.value,\n        validation: {\n          ...this.state.controls[controlName].validation,\n          valid: this.checkValidity(\n            event.target.value,\n            this.state.controls[controlName].validation\n          ),\n        },\n        touched: true,\n      },\n    };\n    this.setState({ controls: updatedControls });\n  };\n\n  cancelDelete = () => {\n    if (this.state.addTask) {\n      this.setState({\n        addTask: !this.state.addTask,\n      });\n    }\n    this.setState({\n      delete: !this.state.delete,\n    });\n  };\n\n  addTaskFunc = () => {\n    if (this.state.delete) {\n      this.setState({\n        delete: !this.state.delete,\n      });\n    }\n    this.setState({\n      addTask: !this.state.addTask,\n    });\n  };\n  startCreatingTask = () => {\n    this.addTaskFunc();\n    this.props.onAddTask(\n      this.props.userId,\n      this.props.workId,\n      this.props.selectedUserId,\n      this.props.token,\n      this.state.controls.TaskName.value,\n      this.state.controls.TaskDescription.value\n    );\n  };\n\n  render() {\n    const formElementsArray = [];\n    for (let key in this.state.controls) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.controls[key],\n      });\n    }\n    let form = formElementsArray.map((element) => {\n      return (\n        <InputElement\n          key={element.id}\n          changed={(event) => this.inputChangedHandler(event, element.id)}\n          elementType={element.config.elementType}\n          elementConfig={element.config.elementConfig}\n          invalid={!element.config.validation.valid}\n          value={element.config.value}\n          shouldValidate={element.config.validation.required}\n          touched={element.config.touched}\n          label={element.config.label}\n        />\n      );\n    });\n    let error = null;\n    if (this.props.error) {\n      error = (\n        <React.Fragment>\n          <style>\n            @import\n            url('https://fonts.googleapis.com/css2?family=Russo+One&display=swap');\n          </style>\n          <div className={classes.errorMessage}>{this.props.error}</div>\n        </React.Fragment>\n      );\n      console.log(\"fefef\");\n    }\n    let spinner = null;\n    if (this.props.loading) {\n      spinner = <Spinner />;\n    }\n    let redirect = null;\n    if (this.props.redirect) {\n      redirect = <Redirect to={this.props.redirect} />;\n    }\n    if (this.props.redirect == null || this.props.redirect == \"null\") {\n      redirect = null;\n    }\n\n    return (\n      <li className={classes.User}>\n        <div className={classes.UserMainPart}>\n          <div className={classes.LeftPart}>\n            <div className={classes.DeleteUser} onClick={this.cancelDelete}>\n              <i class=\"fas fa-user-minus\"></i>\n            </div>\n            <img className={classes.Avatar} src={femaleUser} />\n          </div>\n          <div className={classes.RightPart}>\n            <div className={classes.TopUserHeader}>\n              <div className={classes.Label}>{this.props.userName}</div>\n            </div>\n            <div className={classes.TaskGroup}>\n              <style>\n                @import\n                url('https://fonts.googleapis.com/css2?family=Langar&family=Pacifico&family=Questrial&display=swap');\n              </style>\n              <div>Tasks:</div>\n              <div className={classes.TaskGroupValue}>\n                <i class=\"fas fa-tasks\"></i>\n              </div>\n              <div className={classes.TaskGroupValue}>\n                {this.props.userTasks}\n              </div>\n            </div>\n            <div className={classes.RatingGroup}>\n              <style>\n                @import\n                url('https://fonts.googleapis.com/css2?family=Langar&family=Pacifico&family=Questrial&display=swap');\n              </style>\n              <div>Rating:</div>\n              <div className={classes.RatingGroupValue}>\n                <i class=\"far fa-smile\"></i>\n              </div>\n              <div className={classes.TaskGroupValue}>{\"88/100\"}</div>\n            </div>\n            <button\n              className={classes.ButtonAddTask}\n              onClick={this.addTaskFunc}\n            >\n              Add task\n            </button>\n          </div>\n        </div>\n        <div\n          className={\n            this.state.delete\n              ? [classes.active, classes.DeleteContainer].join(\" \")\n              : classes.DeleteContainer\n          }\n        >\n          <div className={classes.container}>\n            <h1>Delete User</h1>\n            <p>Are you sure you want to delete your user?</p>\n\n            <div className={classes.clearfix}>\n              <button\n                type=\"button\"\n                onClick={this.cancelDelete}\n                className={classes.cancelbtn}\n              >\n                Cancel\n              </button>\n              <button\n                type=\"button\"\n                className={classes.deletebtn}\n                onClick={() =>\n                  this.props.deleteWorker(\n                    this.props.token,\n                    this.props.workId,\n                    this.props.selectedUserId\n                  )\n                }\n              >\n                Delete\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div\n          className={\n            this.state.addTask\n              ? [classes.active, classes.addTaskContainer].join(\" \")\n              : classes.addTaskContainer\n          }\n        >\n          <div className={classes.addTask}>\n            <h1>Add task</h1>\n            <form className={classes.form}>\n              {form}\n              {error}\n              <div className={classes.clearfix}>\n                <button\n                  type=\"button\"\n                  onClick={this.addTaskFunc}\n                  className={classes.cancelbtn}\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={this.startCreatingTask}\n                  className={classes.deletebtn}\n                >\n                  Send\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </li>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    userId: state.auth.userId,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    deleteWorker: (token, workId, userId) =>\n      dispatch(actions.deleteWorker(token, workId, userId)),\n    onAddTask: (\n      ownerId,\n      workId,\n      recipientId,\n      token,\n      taskLabel,\n      taskDescription\n    ) =>\n      dispatch(\n        actions.addTask(\n          ownerId,\n          workId,\n          recipientId,\n          token,\n          taskLabel,\n          taskDescription\n        )\n      ),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(User);\n","/home/vladichka/Boichuk/src/components/Navigation/Toolbar/Toolbar.js",[],"/home/vladichka/Boichuk/src/store/actions/index.js",[],"/home/vladichka/Boichuk/src/components/UI/Spinner/Spinner.js",[],"/home/vladichka/Boichuk/src/components/UI/Card/Card.js",[],"/home/vladichka/Boichuk/src/components/UI/Input/Input.js",[],"/home/vladichka/Boichuk/src/components/UI/Button/Button.js",[],"/home/vladichka/Boichuk/src/components/Works/WorkComponent/WorkComponent.js",["200","201","202"],"import React, { Component } from \"react\";\nimport classes from \"./WorkComponent.module.css\";\nimport \"../../../../node_modules/@fortawesome/fontawesome-free/css/all.css\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport * as actions from \"../../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\nimport { Redirect, NavLink } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\n\nclass WorkComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      copied: false,\n      delete: false,\n    };\n  }\n\n  cancelDelete = () => {\n    console.log(\"pyk\");\n    this.setState({\n      delete: !this.state.delete,\n    });\n  };\n  removeWork = (workId) => {\n    this.props.onRemoveWork(workId, this.props.token, this.props.works);\n  };\n  redirectClick = () => {\n    this.props.history.push(`selectedWorkers?workId=${this.props.workId}`);\n  };\n\n  render() {\n    console.log(this.props);\n\n    let redirect = null;\n    if (this.props.redirectWork) {\n      redirect = <Redirect to={this.props.redirectWork} />;\n    }\n    return (\n      <li className={classes.Work}>\n          <div className={classes.number}>#{this.props.index+1}</div>\n        <div className={classes.TopWorkHeader}>\n          <div className={classes.RemoveWork} onClick={this.cancelDelete}>\n            <i class=\"fas fa-trash-alt\"></i>\n          </div>\n          <div className={classes.Label}>{this.props.name}</div>\n        </div>\n        <div className={classes.Description}>\n          <style>\n            @import\n            url('https://fonts.googleapis.com/css2?family=Langar&family=Pacifico&family=Questrial&display=swap');\n          </style>\n          {this.props.description}\n        </div>\n\n        <div className={classes.Password}>\n          <style>\n            @import\n            url('https://fonts.googleapis.com/css2?family=Andika+New+Basic:ital@1&display=swap');\n          </style>\n          <div>password:</div>\n          <div className={classes.PasswordFont}>{this.props.password}</div>\n          <CopyToClipboard onCopy={this.props.copyFunc} text={this.props.password}>\n            <div className={classes.clipBoard}>\n              <i class={\"far fa-copy\"}></i>\n            </div>\n          </CopyToClipboard>\n        </div>\n        <div onClick={this.redirectClick} className={classes.Users}>\n          <div className={classes.UserGroup}>\n            <i class=\"fa fa-users\" aria-hidden=\"true\">\n              :\n            </i>\n            <font className={classes.UsersGroupValue}>\n              {this.props.workers ? this.props.workers.length : 0}\n            </font>\n          </div>\n          <div className={classes.UserGroup}>\n            <i class=\"fas fa-user-tie\">:</i>\n            <font className={classes.UsersGroupValue}>0</font>\n          </div>\n          <div className={classes.UserGroup}>\n            <i class=\"fas fa-hospital-user\">:</i>\n            <font className={classes.UsersGroupValue}>0</font>\n          </div>\n        </div>\n        <div\n          className={\n            this.state.delete\n              ? [classes.active, classes.DeleteContainer].join(\" \")\n              : classes.DeleteContainer\n          }\n        >\n          <div className={classes.container}>\n            <h1>Delete Work</h1>\n            <p>Are you sure you want to delete your work?</p>\n\n            <div className={classes.clearfix}>\n              <button\n                type=\"button\"\n                onClick={this.cancelDelete}\n                className={classes.cancelbtn}\n              >\n                Cancel\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => this.removeWork(this.props.workId)}\n                className={classes.deletebtn}\n              >\n                Delete\n              </button>\n            </div>\n          </div>\n        </div>\n      </li>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    userId: state.auth.userId,\n    error: state.auth.error,\n    redirect: state.auth.redirect,\n    loading: state.auth.loading,\n    works: state.works.works,\n    redirectWork: state.works.redirectWork,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onRemoveWork: (id, token, oldWorks) =>\n      dispatch(actions.removeWork(id, token, oldWorks)),\n    setRedirectPath: (path) => dispatch(actions.setRedirectPath(path)),\n    setRedirectWorkPath: (path) => dispatch(actions.setRedirectWorkPath(path)),\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(WorkComponent));\n","/home/vladichka/Boichuk/src/store/actions/actions.js",["203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220"],"/home/vladichka/Boichuk/src/components/Navigation/Toolbar/Logo/Logo.js",[],"/home/vladichka/Boichuk/src/components/Navigation/Toolbar/NavigationItems/NavigationItems.js",["221"],"/home/vladichka/Boichuk/src/components/Navigation/Toolbar/NavigationItems/NavigationItem/NavigationItem.js",["222","223","224"],"import React, { Component } from \"react\";\nimport classes from \"./NavigationItem.module.css\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../../../store/actions/index\";\nimport { NavLink } from \"react-router-dom\";\nclass NavigationItem extends Component {\n\n    componentDidMount() {\n        if (this.props.token && this.props.link == \"/myTasks\") {\n            this.props.getTasksNumber(this.props.token, this.props.userId)\n        }\n    }\n    componentDidUpdate() {\n        if (this.props.token && this.props.link == \"/myTasks\") {\n            this.props.getTasksNumber(this.props.token, this.props.userId)\n        }\n    }\n\n    render() {\n        let notification = null;\n        if (this.props.link == \"/myTasks\" && this.props.countTasks > 0) {\n            notification = <span className={classes.number}>{this.props.countTasks}</span>\n        }\n        return (\n            <li onClick={this.props.myRef} className={classes.NavigationItem}>\n                <style>@import url('https://fonts.googleapis.com/css2?family=Varela+Round&display=swap');</style>\n                <NavLink to={this.props.link} exact activeClassName={classes.active}>\n                    {this.props.children}\n                    {notification}\n\n\n                </NavLink>\n            </li>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        token: state.auth.token,\n        userId: state.auth.userId,\n        countTasks: state.tasks.countTasks,\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getTasksNumber: (token, userId) =>\n            dispatch(actions.getTasksNumber(token, userId)),\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(NavigationItem);\n\n// export default NavigationItem;\n","/home/vladichka/Boichuk/src/functions/getWorkByPassword.js",["225"],"function getWorkByPassword(workObject, password) {\n  let workArray = Object.keys(workObject).map((key) => {\n    return { ...workObject[key], id: key };\n  });\n  for (let i = 0; i < workArray.length; i++) {\n    if (workArray[i].password == password) {\n      return { error: null, work: workArray[i] };\n    }\n  }\n\n  return { error: \"There is no work with this password\", work: null };\n}\nexport default getWorkByPassword;\n","/home/vladichka/Boichuk/src/functions/getWorkersByWork.js",[],"/home/vladichka/Boichuk/src/components/Task/Task.js",[],"/home/vladichka/Boichuk/src/store/reducers/reportReducer.js",[],"/home/vladichka/Boichuk/src/containers/Reports/Reports.js",[],"/home/vladichka/Boichuk/src/components/Report/Report.js",[],{"ruleId":"226","severity":1,"message":"227","line":16,"column":7,"nodeType":"228","messageId":"229","endLine":16,"endColumn":13},{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","severity":1,"message":"235","line":79,"column":23,"nodeType":"236","messageId":"237","endLine":79,"endColumn":25},{"ruleId":"238","severity":1,"message":"239","line":44,"column":7,"nodeType":"240","messageId":"241","endLine":44,"endColumn":14},{"ruleId":"234","severity":1,"message":"235","line":65,"column":23,"nodeType":"236","messageId":"237","endLine":65,"endColumn":25},{"ruleId":"226","severity":1,"message":"242","line":4,"column":10,"nodeType":"228","messageId":"229","endLine":4,"endColumn":20},{"ruleId":"234","severity":1,"message":"243","line":17,"column":38,"nodeType":"236","messageId":"237","endLine":17,"endColumn":40},{"ruleId":"226","severity":1,"message":"244","line":6,"column":13,"nodeType":"228","messageId":"229","endLine":6,"endColumn":24},{"ruleId":"226","severity":1,"message":"244","line":6,"column":13,"nodeType":"228","messageId":"229","endLine":6,"endColumn":24},{"ruleId":"234","severity":1,"message":"243","line":16,"column":25,"nodeType":"236","messageId":"237","endLine":16,"endColumn":27},{"ruleId":"245","severity":1,"message":"246","line":18,"column":7,"nodeType":"247","endLine":18,"endColumn":17},{"ruleId":"234","severity":1,"message":"235","line":28,"column":38,"nodeType":"236","messageId":"237","endLine":28,"endColumn":40},{"ruleId":"226","severity":1,"message":"244","line":6,"column":13,"nodeType":"228","messageId":"229","endLine":6,"endColumn":24},{"ruleId":"226","severity":1,"message":"248","line":3,"column":8,"nodeType":"228","messageId":"229","endLine":3,"endColumn":18},{"ruleId":"226","severity":1,"message":"244","line":7,"column":13,"nodeType":"228","messageId":"229","endLine":7,"endColumn":24},{"ruleId":"234","severity":1,"message":"235","line":152,"column":60,"nodeType":"236","messageId":"237","endLine":152,"endColumn":62},{"ruleId":"249","severity":1,"message":"250","line":31,"column":13,"nodeType":"251","endLine":31,"endColumn":42},{"ruleId":"249","severity":1,"message":"250","line":62,"column":13,"nodeType":"251","endLine":62,"endColumn":40},{"ruleId":"249","severity":1,"message":"250","line":69,"column":15,"nodeType":"251","endLine":69,"endColumn":38},{"ruleId":"249","severity":1,"message":"250","line":73,"column":13,"nodeType":"251","endLine":73,"endColumn":41},{"ruleId":"249","severity":1,"message":"250","line":80,"column":15,"nodeType":"251","endLine":80,"endColumn":38},{"ruleId":"226","severity":1,"message":"252","line":2,"column":10,"nodeType":"228","messageId":"229","endLine":2,"endColumn":25},{"ruleId":"226","severity":1,"message":"253","line":169,"column":7,"nodeType":"228","messageId":"229","endLine":169,"endColumn":14},{"ruleId":"234","severity":1,"message":"235","line":175,"column":60,"nodeType":"236","messageId":"237","endLine":175,"endColumn":62},{"ruleId":"226","severity":1,"message":"254","line":176,"column":7,"nodeType":"228","messageId":"229","endLine":176,"endColumn":15},{"ruleId":"249","severity":1,"message":"250","line":186,"column":13,"nodeType":"251","endLine":186,"endColumn":64},{"ruleId":"226","severity":1,"message":"255","line":7,"column":8,"nodeType":"228","messageId":"229","endLine":7,"endColumn":15},{"ruleId":"226","severity":1,"message":"256","line":8,"column":20,"nodeType":"228","messageId":"229","endLine":8,"endColumn":27},{"ruleId":"226","severity":1,"message":"254","line":38,"column":7,"nodeType":"228","messageId":"229","endLine":38,"endColumn":15},{"ruleId":"234","severity":1,"message":"235","line":28,"column":9,"nodeType":"236","messageId":"237","endLine":28,"endColumn":11},{"ruleId":"234","severity":1,"message":"235","line":97,"column":9,"nodeType":"236","messageId":"237","endLine":97,"endColumn":11},{"ruleId":"234","severity":1,"message":"235","line":136,"column":14,"nodeType":"236","messageId":"237","endLine":136,"endColumn":16},{"ruleId":"257","severity":1,"message":"258","line":222,"column":38,"nodeType":"259","messageId":"260","endLine":222,"endColumn":40},{"ruleId":"234","severity":1,"message":"235","line":223,"column":34,"nodeType":"236","messageId":"237","endLine":223,"endColumn":36},{"ruleId":"234","severity":1,"message":"243","line":281,"column":31,"nodeType":"236","messageId":"237","endLine":281,"endColumn":33},{"ruleId":"234","severity":1,"message":"243","line":309,"column":25,"nodeType":"236","messageId":"237","endLine":309,"endColumn":27},{"ruleId":"234","severity":1,"message":"235","line":331,"column":35,"nodeType":"236","messageId":"237","endLine":331,"endColumn":37},{"ruleId":"234","severity":1,"message":"243","line":387,"column":34,"nodeType":"236","messageId":"237","endLine":387,"endColumn":36},{"ruleId":"234","severity":1,"message":"235","line":464,"column":44,"nodeType":"236","messageId":"237","endLine":464,"endColumn":46},{"ruleId":"234","severity":1,"message":"235","line":466,"column":27,"nodeType":"236","messageId":"237","endLine":466,"endColumn":29},{"ruleId":"234","severity":1,"message":"243","line":513,"column":34,"nodeType":"236","messageId":"237","endLine":513,"endColumn":36},{"ruleId":"234","severity":1,"message":"243","line":524,"column":23,"nodeType":"236","messageId":"237","endLine":524,"endColumn":25},{"ruleId":"234","severity":1,"message":"235","line":614,"column":37,"nodeType":"236","messageId":"237","endLine":614,"endColumn":39},{"ruleId":"234","severity":1,"message":"235","line":615,"column":42,"nodeType":"236","messageId":"237","endLine":615,"endColumn":44},{"ruleId":"234","severity":1,"message":"235","line":709,"column":38,"nodeType":"236","messageId":"237","endLine":709,"endColumn":40},{"ruleId":"257","severity":1,"message":"258","line":804,"column":46,"nodeType":"259","messageId":"260","endLine":804,"endColumn":48},{"ruleId":"234","severity":1,"message":"235","line":805,"column":42,"nodeType":"236","messageId":"237","endLine":805,"endColumn":44},{"ruleId":"261","severity":1,"message":"262","line":6,"column":3,"nodeType":"263","messageId":"264","endLine":8,"endColumn":4},{"ruleId":"234","severity":1,"message":"235","line":9,"column":49,"nodeType":"236","messageId":"237","endLine":9,"endColumn":51},{"ruleId":"234","severity":1,"message":"235","line":14,"column":49,"nodeType":"236","messageId":"237","endLine":14,"endColumn":51},{"ruleId":"234","severity":1,"message":"235","line":21,"column":29,"nodeType":"236","messageId":"237","endLine":21,"endColumn":31},{"ruleId":"234","severity":1,"message":"235","line":6,"column":31,"nodeType":"236","messageId":"237","endLine":6,"endColumn":33},"no-unused-vars","'logger' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["265"],"no-negated-in-lhs",["266"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'withRouter' is defined but never used.","Expected '!==' and instead saw '!='.","'actionTypes' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'classesTwo' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'CopyToClipboard' is defined but never used.","'spinner' is assigned a value but never used.","'redirect' is assigned a value but never used.","'Spinner' is defined but never used.","'NavLink' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]