[{"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\index.js":"1","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\App.js":"2","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\reportWebVitals.js":"3","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\store\\reducers\\workReducer.js":"4","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\store\\reducers\\userReducer.js":"5","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\containers\\Login\\Login.js":"6","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\hoc\\Layout\\Layout.js":"7","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\containers\\Logout\\Logout.js":"8","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\containers\\Works\\Works.js":"9","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\containers\\Works\\CreateWork\\CreateWork.js":"10","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\containers\\Auth\\Auth.js":"11","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\containers\\GetJob\\GetJob.js":"12","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\About\\About.js":"13","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\store\\actions\\actionTypes.js":"14","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\store\\actions\\index.js":"15","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\functions\\validity.js":"16","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\UI\\Card\\Card.js":"17","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\UI\\Input\\Input.js":"18","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\Navigation\\Toolbar\\Toolbar.js":"19","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\UI\\Button\\Button.js":"20","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\UI\\Spinner\\Spinner.js":"21","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\Works\\WorkComponent\\WorkComponent.js":"22","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\store\\actions\\actions.js":"23","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\Navigation\\Toolbar\\NavigationItems\\NavigationItems.js":"24","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\Navigation\\Toolbar\\Logo\\Logo.js":"25","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\functions\\getWorkByPassword.js":"26","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\Navigation\\Toolbar\\NavigationItems\\NavigationItem\\NavigationItem.js":"27","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\containers\\Tasks\\MyTasks.js":"28","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\containers\\Tasks\\TaskConponent\\TaskComponent.js":"29"},{"size":1391,"mtime":1608819865875,"results":"30","hashOfConfig":"31"},{"size":1943,"mtime":1608821142371,"results":"32","hashOfConfig":"31"},{"size":375,"mtime":1608819865876,"results":"33","hashOfConfig":"31"},{"size":2358,"mtime":1608837253965,"results":"34","hashOfConfig":"31"},{"size":2353,"mtime":1608819865880,"results":"35","hashOfConfig":"31"},{"size":5294,"mtime":1608819865861,"results":"36","hashOfConfig":"31"},{"size":390,"mtime":1608819865873,"results":"37","hashOfConfig":"31"},{"size":776,"mtime":1608819865862,"results":"38","hashOfConfig":"31"},{"size":2345,"mtime":1608819865863,"results":"39","hashOfConfig":"31"},{"size":5703,"mtime":1608819865863,"results":"40","hashOfConfig":"31"},{"size":5979,"mtime":1608819865860,"results":"41","hashOfConfig":"31"},{"size":4278,"mtime":1608819865861,"results":"42","hashOfConfig":"31"},{"size":3528,"mtime":1608819865849,"results":"43","hashOfConfig":"31"},{"size":1232,"mtime":1608836232784,"results":"44","hashOfConfig":"31"},{"size":125,"mtime":1608819865879,"results":"45","hashOfConfig":"31"},{"size":742,"mtime":1608819865864,"results":"46","hashOfConfig":"31"},{"size":512,"mtime":1608819865857,"results":"47","hashOfConfig":"31"},{"size":2108,"mtime":1608819865858,"results":"48","hashOfConfig":"31"},{"size":1247,"mtime":1608819865856,"results":"49","hashOfConfig":"31"},{"size":339,"mtime":1608819865856,"results":"50","hashOfConfig":"31"},{"size":210,"mtime":1608819865858,"results":"51","hashOfConfig":"31"},{"size":4060,"mtime":1608821882796,"results":"52","hashOfConfig":"31"},{"size":12830,"mtime":1608837213713,"results":"53","hashOfConfig":"31"},{"size":1527,"mtime":1608820637653,"results":"54","hashOfConfig":"31"},{"size":389,"mtime":1608819865854,"results":"55","hashOfConfig":"31"},{"size":431,"mtime":1608819865864,"results":"56","hashOfConfig":"31"},{"size":490,"mtime":1608819865854,"results":"57","hashOfConfig":"31"},{"size":2819,"mtime":1608836098910,"results":"58","hashOfConfig":"31"},{"size":2146,"mtime":1608835817552,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1gpp7qd",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"73"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"73"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"73"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"73"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"73"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"73"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"73"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"73"},"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\index.js",["128"],"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\App.js",[],"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\reportWebVitals.js",[],"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\store\\reducers\\workReducer.js",["129"],"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\store\\reducers\\userReducer.js",["130","131"],"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\containers\\Login\\Login.js",["132"],"import React, { Component } from \"react\";\r\nimport classes from \"./Login.module.css\";\r\nimport Card from \"../../components/UI/Card/Card\";\r\nimport InputElement from \"../../components/UI/Input/Input\";\r\nimport ButtonElement from \"../../components/UI/Button/Button\";\r\nimport * as actionTypes from \"../../store/actions/actionTypes\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nclass Login extends Component {\r\n  state = {\r\n    controls: {\r\n      email: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"email\",\r\n          placeholder: \"Mail Address\",\r\n        },\r\n        label: \"Email\",\r\n        touched: false,\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          valid: false,\r\n          minLength: 6,\r\n          isEmail: true,\r\n        },\r\n      },\r\n      password: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"password\",\r\n          placeholder: \"Password\",\r\n        },\r\n        label: \"Password\",\r\n        touched: false,\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          valid: false,\r\n          minLength: 6,\r\n          maxLength: 25,\r\n        },\r\n      },\r\n    },\r\n    signUp: true,\r\n  };\r\n  componentDidMount() {\r\n    if (this.props.token) {\r\n      this.props.setRedirectPath(\"/\");\r\n    } else {\r\n      this.props.setRedirectPath(\"null\");\r\n    }\r\n  }\r\n  checkValidity(value, rules) {\r\n    let isValid = true;\r\n    if (!rules) {\r\n      return true;\r\n    }\r\n    if (rules.required) {\r\n      isValid = value.trim() !== \"\" && isValid;\r\n    }\r\n    if (rules.minLength) {\r\n      isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n    if (rules.maxLength) {\r\n      isValid = value.length <= rules.maxLength && isValid;\r\n    }\r\n    if (rules.isEmail) {\r\n      const pattern = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n      console.log(value);\r\n      isValid = pattern.test(value) && isValid;\r\n      console.log(isValid);\r\n    }\r\n    if (rules.isNumeric) {\r\n      const pattern = /^\\d+$/;\r\n      isValid = pattern.test(value) && isValid;\r\n    }\r\n    return isValid;\r\n  }\r\n  inputChangedHandler = (event, controlName) => {\r\n    const updatedControls = {\r\n      ...this.state.controls,\r\n      [controlName]: {\r\n        ...this.state.controls[controlName],\r\n        value: event.target.value,\r\n        validation: {\r\n          ...this.state.controls[controlName].validation,\r\n          valid: this.checkValidity(\r\n            event.target.value,\r\n            this.state.controls[controlName].validation\r\n          ),\r\n        },\r\n        touched: true,\r\n      },\r\n    };\r\n    this.setState({ controls: updatedControls });\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    this.props.onLogin(\r\n      this.state.controls.email.value,\r\n      this.state.controls.password.value,\r\n    );\r\n  };\r\n  render() {\r\n    const formElementsArray = [];\r\n    for (let key in this.state.controls) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.controls[key],\r\n      });\r\n    }\r\n    let form = formElementsArray.map((element) => {\r\n      return (\r\n        <InputElement\r\n          key={element.id}\r\n          changed={(event) => this.inputChangedHandler(event, element.id)}\r\n          elementType={element.config.elementType}\r\n          elementConfig={element.config.elementConfig}\r\n          invalid={!element.config.validation.valid}\r\n          value={element.config.value}\r\n          shouldValidate={element.config.validation.required}\r\n          touched={element.config.touched}\r\n          label={element.config.label}\r\n        />\r\n      );\r\n    });\r\n    let error = null;\r\n    if (this.props.error) {\r\n      error = (\r\n        <React.Fragment>\r\n          <style>\r\n            @import\r\n            url('https://fonts.googleapis.com/css2?family=Russo+One&display=swap');\r\n          </style>\r\n          <div className={classes.errorMessage}>{this.props.error}</div>\r\n        </React.Fragment>\r\n      );\r\n      console.log(\"fefef\");\r\n    }\r\n    let spinner = null;\r\n    if (this.props.loading) {\r\n      spinner = <Spinner />;\r\n    }\r\n    let redirect = null;\r\n    if (this.props.redirect) {\r\n      redirect = <Redirect to={this.props.redirect} />;\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        {spinner}\r\n        <Card titleName=\"Log in\" width=\"500px\">\r\n          {redirect}\r\n          <form className={classes.form} onSubmit={this.submitHandler}>\r\n            {form}\r\n            {error}\r\n            <ButtonElement btnType=\"Success\">OK</ButtonElement>\r\n          </form>\r\n        </Card>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n    error: state.auth.error,\r\n    redirect: state.auth.redirect,\r\n    loading: state.auth.loading,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onLogin: (login, password) => dispatch(actions.login(login, password)),\r\n    setRedirectPath: (path) => dispatch(actions.setRedirectPath(path)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n",["133","134"],"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\hoc\\Layout\\Layout.js",[],"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\containers\\Logout\\Logout.js",[],"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\containers\\Works\\Works.js",["135","136","137"],"import React, { Component } from \"react\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport WorkComponent from \"../../components/Works/WorkComponent/WorkComponent\";\r\nimport classes from \"./Works.module.css\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nclass MyWorks extends Component {\r\n  state = { works: [], didComponentsLoad: false };\r\n\r\n  componentDidMount() {\r\n    this.props.onUploadWorks(this.props.userId, this.props.token);\r\n    console.log(this.props.works);\r\n    this.props.setRedirectPath(\"null\");\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.works != this.props.works) {\r\n      this.setState({ didComponentsLoad: true });\r\n      this.state.works = this.props.works;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let spinner = null;\r\n    if (this.props.loadingWork) {\r\n      spinner = <Spinner />;\r\n    }\r\n    let worksRender;\r\n    if (this.state.didComponentsLoad == false) {\r\n      worksRender = this.props.works.map((work, id) => {\r\n        return (\r\n          <WorkComponent\r\n            key={id}\r\n            description={work.description}\r\n            name={work.name}\r\n            password={work.password}\r\n            workId={work.id}\r\n          />\r\n        );\r\n      });\r\n    } else {\r\n      worksRender = this.state.works.map((work, id) => {\r\n        return (\r\n          <WorkComponent\r\n            key={id}\r\n            description={work.description}\r\n            name={work.name}\r\n            password={work.password}\r\n            workId={work.id}\r\n          />\r\n        );\r\n      });\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {spinner}\r\n        <ul className={classes.WorkList}>{worksRender}</ul>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n    error: state.auth.error,\r\n    redirect: state.auth.redirect,\r\n    loading: state.auth.loading,\r\n    works: state.works.works,\r\n    loadingWork: state.works.loading,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onUploadWorks: (userId, token) =>\r\n      dispatch(actions.uploadWorks(userId, token)),\r\n    setRedirectPath: (path) => dispatch(actions.setRedirectPath(path)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyWorks);\r\n","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\containers\\Works\\CreateWork\\CreateWork.js",["138","139","140"],"import React, { Component } from \"react\";\r\nimport classes from \"../../Login/Login.module.css\";\r\nimport classesTwo from \"./CreateWork.module.css\";\r\nimport Card from \"../../../components/UI/Card/Card\";\r\nimport InputElement from \"../../../components/UI/Input/Input\";\r\nimport ButtonElement from \"../../../components/UI/Button/Button\";\r\nimport * as actionTypes from \"../../../store/actions/actionTypes\";\r\nimport * as actions from \"../../../store/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\r\nclass CreateWork extends Component {\r\n  state = {\r\n    controls: {\r\n      WorkName: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"\",\r\n          placeholder: \"Dota 2\",\r\n        },\r\n        label: \"Work name\",\r\n        touched: false,\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          valid: false,\r\n          minLength: 1,\r\n          maxLength: 20,\r\n          isEmail: false,\r\n        },\r\n      },\r\n      WorkDescription: {\r\n        elementType: \"textarea\",\r\n        elementConfig: {\r\n          type: \"\",\r\n          placeholder:\r\n            \"At w3schools.com you will learn how to make a website. They offer free tutorials in all web development technologies.\",\r\n        },\r\n        label: \"Description\",\r\n        touched: false,\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          valid: false,\r\n          minLength: 3,\r\n          maxLength: 500,\r\n        },\r\n      },\r\n    },\r\n    signUp: true,\r\n  };\r\n  componentDidMount() {\r\n    this.props.setRedirectPath(\"null\");\r\n  }\r\n  checkValidity(value, rules) {\r\n    let isValid = true;\r\n    if (!rules) {\r\n      return true;\r\n    }\r\n    if (rules.required) {\r\n      isValid = value.trim() !== \"\" && isValid;\r\n    }\r\n    if (rules.minLength) {\r\n      isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n    if (rules.maxLength) {\r\n      isValid = value.length <= rules.maxLength && isValid;\r\n    }\r\n    if (rules.isEmail) {\r\n      const pattern = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n      console.log(value);\r\n      isValid = pattern.test(value) && isValid;\r\n      console.log(isValid);\r\n    }\r\n    if (rules.isNumeric) {\r\n      const pattern = /^\\d+$/;\r\n      isValid = pattern.test(value) && isValid;\r\n    }\r\n    return isValid;\r\n  }\r\n  inputChangedHandler = (event, controlName) => {\r\n    const updatedControls = {\r\n      ...this.state.controls,\r\n      [controlName]: {\r\n        ...this.state.controls[controlName],\r\n        value: event.target.value,\r\n        validation: {\r\n          ...this.state.controls[controlName].validation,\r\n          valid: this.checkValidity(\r\n            event.target.value,\r\n            this.state.controls[controlName].validation\r\n          ),\r\n        },\r\n        touched: true,\r\n      },\r\n    };\r\n    this.setState({ controls: updatedControls });\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    this.props.onCreateWork(\r\n      this.state.controls.WorkName.value,\r\n      this.state.controls.WorkDescription.value,\r\n      this.props.userId,\r\n      this.props.token\r\n    );\r\n  };\r\n  render() {\r\n    const formElementsArray = [];\r\n    for (let key in this.state.controls) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.controls[key],\r\n      });\r\n    }\r\n    let form = formElementsArray.map((element) => {\r\n      return (\r\n        <InputElement\r\n          key={element.id}\r\n          changed={(event) => this.inputChangedHandler(event, element.id)}\r\n          elementType={element.config.elementType}\r\n          elementConfig={element.config.elementConfig}\r\n          invalid={!element.config.validation.valid}\r\n          value={element.config.value}\r\n          shouldValidate={element.config.validation.required}\r\n          touched={element.config.touched}\r\n          label={element.config.label}\r\n        />\r\n      );\r\n    });\r\n    let error = null;\r\n    if (this.props.error) {\r\n      error = (\r\n        <React.Fragment>\r\n          <style>\r\n            @import\r\n            url('https://fonts.googleapis.com/css2?family=Russo+One&display=swap');\r\n          </style>\r\n          <div className={classes.errorMessage}>{this.props.error}</div>\r\n        </React.Fragment>\r\n      );\r\n      console.log(\"fefef\");\r\n    }\r\n    let spinner = null;\r\n    if (this.props.loading) {\r\n      spinner = <Spinner />;\r\n    }\r\n    let redirect = null;\r\n    if (this.props.redirect) {\r\n      redirect = <Redirect to={this.props.redirect} />;\r\n    }\r\n    if (this.props.redirect == null || this.props.redirect == \"null\") {\r\n      redirect = null;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {spinner}\r\n        <Card titleName=\"Create new work\" width=\"500px\">\r\n          {redirect}\r\n          <form className={classes.form} onSubmit={this.submitHandler}>\r\n            {form}\r\n            {error}\r\n            <ButtonElement btnType=\"Success\">CREATE</ButtonElement>\r\n          </form>\r\n        </Card>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        token: state.auth.token,\r\n        userId: state.auth.userId,\r\n        error: state.auth.error,\r\n        redirect: state.auth.redirect,\r\n        loading: state.auth.loading,\r\n      };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onCreateWork: (name, description, userId, token) =>\r\n      dispatch(actions.createWork(name, description, userId, token)),\r\n    setRedirectPath: (path) => dispatch(actions.setRedirectPath(path)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateWork);\r\n","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\containers\\Auth\\Auth.js",["141"],"import React, { Component } from \"react\";\r\nimport classes from \"./Auth.module.css\";\r\nimport Card from \"../../components/UI/Card/Card\";\r\nimport InputElement from \"../../components/UI/Input/Input\";\r\nimport ButtonElement from \"../../components/UI/Button/Button\";\r\nimport * as actionTypes from \"../../store/actions/actionTypes\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nclass Auth extends Component {\r\n  state = {\r\n    controls: {\r\n      nickname: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"\",\r\n          placeholder: \"VladichBub\",\r\n        },\r\n        label: \"Nickname\",\r\n        touched: false,\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          valid: false,\r\n          minLength: 4,\r\n          isEmail: false,\r\n        },\r\n      },\r\n      email: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"email\",\r\n          placeholder: \"Mail Address\",\r\n        },\r\n        label: \"Email\",\r\n        touched: false,\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          valid: false,\r\n          minLength: 6,\r\n          isEmail: true,\r\n        },\r\n      },\r\n      password: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"password\",\r\n          placeholder: \"Password\",\r\n        },\r\n        label: \"Password\",\r\n        touched: false,\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          valid: false,\r\n          minLength: 6,\r\n          maxLength: 25,\r\n        },\r\n      },\r\n      confirmPassword: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"password\",\r\n          placeholder: \"Confirm password\",\r\n        },\r\n        label: \"Confirm password\",\r\n        touched: false,\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          valid: false,\r\n          minLength: 6,\r\n          maxLength: 25,\r\n        },\r\n      },\r\n    },\r\n    signUp: true,\r\n  };\r\n  checkValidity(value, rules) {\r\n    let isValid = true;\r\n    if (!rules) {\r\n      return true;\r\n    }\r\n    if (rules.required) {\r\n      isValid = value.trim() !== \"\" && isValid;\r\n    }\r\n    if (rules.minLength) {\r\n      isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n    if (rules.maxLength) {\r\n      isValid = value.length <= rules.maxLength && isValid;\r\n    }\r\n    if (rules.isEmail) {\r\n      const pattern = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n      console.log(value);\r\n      isValid = pattern.test(value) && isValid;\r\n      console.log(isValid);\r\n    }\r\n    if (rules.isNumeric) {\r\n      const pattern = /^\\d+$/;\r\n      isValid = pattern.test(value) && isValid;\r\n    }\r\n    return isValid;\r\n  }\r\n  inputChangedHandler = (event, controlName) => {\r\n    const updatedControls = {\r\n      ...this.state.controls,\r\n      [controlName]: {\r\n        ...this.state.controls[controlName],\r\n        value: event.target.value,\r\n        validation: {\r\n          ...this.state.controls[controlName].validation,\r\n          valid: this.checkValidity(\r\n            event.target.value,\r\n            this.state.controls[controlName].validation\r\n          ),\r\n        },\r\n        touched: true,\r\n      },\r\n    };\r\n    this.setState({ controls: updatedControls });\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    this.props.onAuth(\r\n      this.state.controls.email.value,\r\n      this.state.controls.password.value,\r\n      this.state.controls.confirmPassword.value,\r\n      this.state.controls.nickname.value\r\n    );\r\n  };\r\n  render() {\r\n    const formElementsArray = [];\r\n    for (let key in this.state.controls) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.controls[key],\r\n      });\r\n    }\r\n    let form = formElementsArray.map((element) => {\r\n      return (\r\n        <InputElement\r\n          key={element.id}\r\n          changed={(event) => this.inputChangedHandler(event, element.id)}\r\n          elementType={element.config.elementType}\r\n          elementConfig={element.config.elementConfig}\r\n          invalid={!element.config.validation.valid}\r\n          value={element.config.value}\r\n          shouldValidate={element.config.validation.required}\r\n          touched={element.config.touched}\r\n          label={element.config.label}\r\n        />\r\n      );\r\n    });\r\n    let error = null;\r\n    if (this.props.error) {\r\n      error = (\r\n        <React.Fragment>\r\n          <style>\r\n            @import\r\n            url('https://fonts.googleapis.com/css2?family=Russo+One&display=swap');\r\n          </style>\r\n          <div className={classes.errorMessage}>{this.props.error}</div>\r\n        </React.Fragment>\r\n      );\r\n      console.log(\"fefef\");\r\n    }\r\n    let redirect = null;\r\n    if (this.props.redirect) {\r\n      redirect = <Redirect to={this.props.redirect} />;\r\n    }\r\n    let spinner = null;\r\n    if (this.props.loading) {\r\n      spinner = <Spinner />;\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        {spinner}\r\n        <Card titleName=\"Authentification\" width=\"500px\">\r\n          {redirect}\r\n          <form className={classes.form} onSubmit={this.submitHandler}>\r\n            {form}\r\n            {error}\r\n            <ButtonElement btnType=\"Success\">OK</ButtonElement>\r\n          </form>\r\n        </Card>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n    error: state.auth.error,\r\n    redirect: state.auth.redirect,\r\n    loading: state.auth.loading,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAuth: (login, password, repeatPassword, nickname) =>\r\n      dispatch(actions.auth(login, password, repeatPassword, nickname)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\r\n","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\containers\\GetJob\\GetJob.js",["142"],"import React, { Component } from \"react\";\r\nimport classes from \"../Login/Login.module.css\";\r\nimport Card from \"../../components/UI/Card/Card\";\r\nimport InputElement from \"../../components/UI/Input/Input\";\r\nimport ButtonElement from \"../../components/UI/Button/Button\";\r\nimport * as actionTypes from \"../../store/actions/actionTypes\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport checkValidity from \"../../functions/validity\";\r\nclass GetJob extends Component {\r\n  state = {\r\n    controls: {\r\n      jobPassCode: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"\",\r\n          placeholder: \"2bod7f22-453a-11eb-b378-0242ac130002\",\r\n        },\r\n        label: \"Pass code\",\r\n        touched: false,\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          valid: false,\r\n          minLength: 36,\r\n          maxLength: 36,\r\n          isEmail: false,\r\n        },\r\n      },\r\n    },\r\n    signUp: true,\r\n  };\r\n  componentDidMount() {\r\n    console.log(this.props);\r\n  }\r\n\r\n  inputChangedHandler = (event, controlName) => {\r\n    const updatedControls = {\r\n      ...this.state.controls,\r\n      [controlName]: {\r\n        ...this.state.controls[controlName],\r\n        value: event.target.value,\r\n        validation: {\r\n          ...this.state.controls[controlName].validation,\r\n          valid: checkValidity(\r\n            event.target.value,\r\n            this.state.controls[controlName].validation\r\n          ),\r\n        },\r\n        touched: true,\r\n      },\r\n    };\r\n    this.setState({ controls: updatedControls });\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    this.props.onGetJob(\r\n      this.state.controls.jobPassCode.value,\r\n      this.props.userId,\r\n      this.props.token\r\n    );\r\n  };\r\n  render() {\r\n    const formElementsArray = [];\r\n    for (let key in this.state.controls) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.controls[key],\r\n      });\r\n    }\r\n    let form = formElementsArray.map((element) => {\r\n      return (\r\n        <InputElement\r\n          key={element.id}\r\n          changed={(event) => this.inputChangedHandler(event, element.id)}\r\n          elementType={element.config.elementType}\r\n          elementConfig={element.config.elementConfig}\r\n          invalid={!element.config.validation.valid}\r\n          value={element.config.value}\r\n          shouldValidate={element.config.validation.required}\r\n          touched={element.config.touched}\r\n          label={element.config.label}\r\n        />\r\n      );\r\n    });\r\n    let error = null;\r\n    if (this.props.error) {\r\n      error = (\r\n        <React.Fragment>\r\n          <style>\r\n            @import\r\n            url('https://fonts.googleapis.com/css2?family=Russo+One&display=swap');\r\n          </style>\r\n          <div className={classes.errorMessage}>{this.props.error}</div>\r\n        </React.Fragment>\r\n      );\r\n      console.log(\"fefef\");\r\n    }\r\n    let spinner = null;\r\n    if (this.props.loading) {\r\n      spinner = <Spinner />;\r\n    }\r\n    let redirect = null;\r\n    if (this.props.redirectWork) {\r\n      redirect = <Redirect to={this.props.redirectWork} />;\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        {spinner}\r\n        <Card titleName=\"Get a job\" width=\"500px\">\r\n          {redirect}\r\n          <form className={classes.form} onSubmit={this.submitHandler}>\r\n            {form}\r\n            {error}\r\n            <ButtonElement btnType=\"Success\">OK</ButtonElement>\r\n          </form>\r\n        </Card>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n    redirect: state.auth.redirect,\r\n    error: state.works.error,\r\n    loading: state.works.loading,\r\n    redirectWork: state.works.redirectWork,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onGetJob: (password, userId, jobId) =>\r\n      dispatch(actions.getJob(password, userId, jobId)),\r\n    setRedirectPath: (path) => dispatch(actions.setRedirectPath(path)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GetJob);\r\n","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\About\\About.js",["143","144","145","146","147"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classes from \"./About.module.css\";\r\nimport AboutProjectImg from \"./img/AboutProject.jpg\";\r\nimport developer from \"./img/developer.jpg\";\r\nimport instagram from \"./img/instagram.png\";\r\nimport * as actions from \"../../store/actions/index\";\r\nclass About extends Component {\r\n  state = {\r\n    lol: \"null\",\r\n  };\r\n  componentDidMount() {\r\n    this.props.setRedirectPath(\"null\");\r\n    this.props.setRedirectWorkPath(\"null\");\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={classes.About}>\r\n        <h3>Strong Manager</h3>\r\n        <h2>What we do</h2>\r\n        <hr />\r\n        <p>\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\r\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\r\n          aliquip ex ea commodo consequat\r\n        </p>\r\n        <div className={classes.AboutProject}>\r\n          <div className={classes.AboutProjectImg}>\r\n            <img src={AboutProjectImg} />\r\n          </div>\r\n          <div className={classes.AboutProjectText}>\r\n            <div className={classes.TextContainer}>\r\n              <h4>Organization</h4>\r\n              <p>\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n                eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n              </p>\r\n            </div>\r\n            <div className={classes.TextContainer}>\r\n              <h4>Team Work</h4>\r\n              <p>\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n                eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n              </p>\r\n            </div>\r\n            <div className={classes.TextContainer}>\r\n              <h4>Management</h4>\r\n              <p>\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n                eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <h3 className={classes.weAre}>Who we are</h3>\r\n        <h2>Meet our team</h2>\r\n        <hr />\r\n        <div className={classes.Team}>\r\n          <div className={classes.developer}>\r\n            <img src={developer} />\r\n            <h2>Vlad Boichuk</h2>\r\n            <h3>Project Manager</h3>\r\n            <a\r\n              href=\"https://www.instagram.com/vla2383public/?hl=ru\"\r\n              target=\"blank\"\r\n            >\r\n              <img src={instagram} />\r\n            </a>\r\n          </div>\r\n          <div className={classes.developer}>\r\n            <img src={developer} />\r\n            <h2>Taras Hnatkiv</h2>\r\n            <h3>Project Manager</h3>\r\n            <a\r\n              href=\"https://www.instagram.com/chelovek_afk/?hl=ru\"\r\n              target=\"blank\"\r\n            >\r\n              <img src={instagram} />\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.token,\r\n    userId: state.userId,\r\n    error: state.error,\r\n    redirect: state.redirect,\r\n    loading: state.loading,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setRedirectPath: (path) => dispatch(actions.setRedirectPath(path)),\r\n    setRedirectWorkPath: (path) => dispatch(actions.setRedirectWorkPath(path)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(About);\r\n","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\store\\actions\\actionTypes.js",[],"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\store\\actions\\index.js",[],"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\functions\\validity.js",[],"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\UI\\Card\\Card.js",[],"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\UI\\Input\\Input.js",[],"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\Navigation\\Toolbar\\Toolbar.js",[],"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\UI\\Button\\Button.js",[],"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\UI\\Spinner\\Spinner.js",[],"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\Works\\WorkComponent\\WorkComponent.js",["148"],"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\store\\actions\\actions.js",["149","150","151","152","153","154","155"],"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\Navigation\\Toolbar\\NavigationItems\\NavigationItems.js",["156"],"import React, { Component } from \"react\";\r\nimport classes from \"./NavigationItems.module.css\";\r\nimport NavigationItem from \"./NavigationItem/NavigationItem\";\r\nimport { connect } from \"react-redux\";\r\nclass NavigationItems extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    let links = [];\r\n    if (this.props.token) {\r\n      links = [\r\n        { link: \"/myTasks\", label: \"My tasks\" },\r\n        { link: \"/getJob\", label: \"Get job\" },\r\n        { link: \"/myWorks\", label: \"My works\" },\r\n        { link: \"/createNewJob\", label: \"Create work\" },\r\n        { link: \"/about\", label: \"About\" },\r\n        { link: \"/logout\", label: \"Log out\" },\r\n         \r\n        \r\n      ];\r\n    } else {\r\n      links = [\r\n        { link: \"/login\", label: \"Log in\" },\r\n        { link: \"/auth\", label: \"Registration\" },\r\n      ];\r\n    }\r\n    let linksElements = links.map((element, id) => {\r\n      return (\r\n        <NavigationItem {...this.props} link={element.link}>\r\n          {element.label}\r\n        </NavigationItem>\r\n      );\r\n    });\r\n    return (\r\n      <nav\r\n        className={\r\n          this.props.clicked\r\n            ? [classes.active, classes.headerMenu].join(\" \")\r\n            : classes.headerMenu\r\n        }\r\n      >\r\n        <ul className={classes.NavigationItems}>{linksElements}</ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(NavigationItems);\r\n","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\Navigation\\Toolbar\\Logo\\Logo.js",[],"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\functions\\getWorkByPassword.js",["157"],"function getWorkByPassword(workObject, password) {\r\n  let workArray = Object.keys(workObject).map((key) => {\r\n    return { ...workObject[key], id: key };\r\n  });\r\n  for (let i = 0; i < workArray.length; i++) {\r\n    if (workArray[i].password == password) {\r\n      return { error: null, work: workArray[i] };\r\n    }\r\n  }\r\n\r\n  return { error: \"There is no work with this password\", work: null };\r\n}\r\nexport default getWorkByPassword;\r\n","C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\components\\Navigation\\Toolbar\\NavigationItems\\NavigationItem\\NavigationItem.js",[],"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\containers\\Tasks\\MyTasks.js",["158","159","160"],"C:\\Users\\taras\\OneDrive\\Рабочий стол\\Evolution\\Boichuk\\src\\containers\\Tasks\\TaskConponent\\TaskComponent.js",["161"],"import React from 'react';\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport classes from \"./TaskComponent.module.css\";\r\n\r\nclass TaskComponent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            delete: false,\r\n        }\r\n    }\r\n\r\n\r\n    cancelDelete = () => {\r\n        this.setState({\r\n            delete: !this.state.delete,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <li className={classes.Work}>\r\n                <div className={classes.TopWorkHeader}>\r\n                    <div className={classes.RemoveWork} onClick={this.cancelDelete}>\r\n                        <i class=\"fas fa-door-open\"></i>\r\n                    </div>\r\n                    <div className={classes.Label}>{this.props.info.name}</div>\r\n                </div>\r\n                <div className={classes.Description}>\r\n                    {this.props.info.description}\r\n                </div>\r\n                <div className={classes.Task}>\r\n                    <i class=\"fas fa-tasks\"></i>\r\n                    <span>{this.props.info.number}</span>\r\n                </div>\r\n                <div\r\n                    className={this.state.delete ? [classes.active, classes.DeleteContainer].join(\" \") : classes.DeleteContainer}>\r\n                    <div className={classes.container}>\r\n                        <h1>Leave Work</h1>\r\n                        <p>Are you sure you want to leave your work?</p>\r\n                        <div className={classes.clearfix}>\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={this.cancelDelete}\r\n                                className={classes.cancelbtn}\r\n                            >Cancel</button>\r\n                            <button\r\n                                type=\"button\"\r\n                                className={classes.deletebtn}\r\n                            >Leave</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default TaskComponent;",{"ruleId":"162","severity":1,"message":"163","line":13,"column":7,"nodeType":"164","messageId":"165","endLine":13,"endColumn":13},{"ruleId":"166","severity":1,"message":"167","line":78,"column":23,"nodeType":"168","messageId":"169","endLine":78,"endColumn":25},{"ruleId":"170","severity":1,"message":"171","line":44,"column":7,"nodeType":"172","messageId":"173","endLine":44,"endColumn":14},{"ruleId":"166","severity":1,"message":"167","line":65,"column":23,"nodeType":"168","messageId":"169","endLine":65,"endColumn":25},{"ruleId":"162","severity":1,"message":"174","line":6,"column":13,"nodeType":"164","messageId":"165","endLine":6,"endColumn":24},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"166","severity":1,"message":"179","line":16,"column":25,"nodeType":"168","messageId":"169","endLine":16,"endColumn":27},{"ruleId":"180","severity":1,"message":"181","line":18,"column":7,"nodeType":"182","endLine":18,"endColumn":17},{"ruleId":"166","severity":1,"message":"167","line":28,"column":38,"nodeType":"168","messageId":"169","endLine":28,"endColumn":40},{"ruleId":"162","severity":1,"message":"183","line":3,"column":8,"nodeType":"164","messageId":"165","endLine":3,"endColumn":18},{"ruleId":"162","severity":1,"message":"174","line":7,"column":13,"nodeType":"164","messageId":"165","endLine":7,"endColumn":24},{"ruleId":"166","severity":1,"message":"167","line":152,"column":60,"nodeType":"168","messageId":"169","endLine":152,"endColumn":62},{"ruleId":"162","severity":1,"message":"174","line":6,"column":13,"nodeType":"164","messageId":"165","endLine":6,"endColumn":24},{"ruleId":"162","severity":1,"message":"174","line":6,"column":13,"nodeType":"164","messageId":"165","endLine":6,"endColumn":24},{"ruleId":"184","severity":1,"message":"185","line":30,"column":13,"nodeType":"186","endLine":30,"endColumn":42},{"ruleId":"184","severity":1,"message":"185","line":61,"column":13,"nodeType":"186","endLine":61,"endColumn":36},{"ruleId":"184","severity":1,"message":"185","line":68,"column":15,"nodeType":"186","endLine":68,"endColumn":38},{"ruleId":"184","severity":1,"message":"185","line":72,"column":13,"nodeType":"186","endLine":72,"endColumn":36},{"ruleId":"184","severity":1,"message":"185","line":79,"column":15,"nodeType":"186","endLine":79,"endColumn":38},{"ruleId":"162","severity":1,"message":"187","line":8,"column":8,"nodeType":"164","messageId":"165","endLine":8,"endColumn":15},{"ruleId":"166","severity":1,"message":"167","line":27,"column":15,"nodeType":"168","messageId":"169","endLine":27,"endColumn":17},{"ruleId":"166","severity":1,"message":"167","line":91,"column":15,"nodeType":"168","messageId":"169","endLine":91,"endColumn":17},{"ruleId":"166","severity":1,"message":"167","line":130,"column":18,"nodeType":"168","messageId":"169","endLine":130,"endColumn":20},{"ruleId":"188","severity":1,"message":"189","line":216,"column":40,"nodeType":"190","messageId":"191","endLine":216,"endColumn":42},{"ruleId":"166","severity":1,"message":"167","line":217,"column":38,"nodeType":"168","messageId":"169","endLine":217,"endColumn":40},{"ruleId":"166","severity":1,"message":"179","line":275,"column":41,"nodeType":"168","messageId":"169","endLine":275,"endColumn":43},{"ruleId":"166","severity":1,"message":"179","line":303,"column":29,"nodeType":"168","messageId":"169","endLine":303,"endColumn":31},{"ruleId":"192","severity":1,"message":"193","line":6,"column":3,"nodeType":"194","messageId":"195","endLine":8,"endColumn":4},{"ruleId":"166","severity":1,"message":"167","line":6,"column":31,"nodeType":"168","messageId":"169","endLine":6,"endColumn":33},{"ruleId":"162","severity":1,"message":"196","line":1,"column":17,"nodeType":"164","messageId":"165","endLine":1,"endColumn":26},{"ruleId":"162","severity":1,"message":"197","line":5,"column":13,"nodeType":"164","messageId":"165","endLine":5,"endColumn":20},{"ruleId":"162","severity":1,"message":"198","line":6,"column":10,"nodeType":"164","messageId":"165","endLine":6,"endColumn":17},{"ruleId":"162","severity":1,"message":"199","line":2,"column":10,"nodeType":"164","messageId":"165","endLine":2,"endColumn":25},"no-unused-vars","'logger' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'actionTypes' is defined but never used.","no-native-reassign",["200"],"no-negated-in-lhs",["201"],"Expected '!==' and instead saw '!='.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'classesTwo' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Spinner' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Component' is defined but never used.","'actions' is defined but never used.","'connect' is defined but never used.","'CopyToClipboard' is defined but never used.","no-global-assign","no-unsafe-negation"]