{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/vladichka/proga/\\u041D\\u043E\\u0432\\u0438\\u0439-WinRAR-archive/NewManager/src/containers/Works/Works.js\";\nimport React, { Component } from \"react\";\nimport * as actions from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport WorkComponent from \"../../components/Works/WorkComponent/WorkComponent\";\nimport classes from \"./Works.module.css\";\n\nclass MyWorks extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      copiedValue: null\n    };\n\n    this.copyFunction = password => {\n      this.setState({\n        copiedValue: !this.state.copied\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.onUploadWorks(this.props.userId, this.props.token);\n  }\n\n  render() {\n    let works = this.props.works;\n    let worksRender = works.map((work, id) => {\n      let copyValue = false;\n\n      if (this.state.value == work.password) {\n        copyValue = true;\n      }\n\n      return /*#__PURE__*/_jsxDEV(WorkComponent, {\n        description: work.description,\n        name: work.name,\n        password: work.password,\n        workId: work.id,\n        copyFunc: this.copyFunction(work.password),\n        copyIcon: copyValue\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: classes.WorkList,\n        children: worksRender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    userId: state.auth.userId,\n    error: state.auth.error,\n    redirect: state.auth.redirect,\n    loading: state.auth.loading,\n    works: state.works.works\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onUploadWorks: (userId, token) => dispatch(actions.uploadWorks(userId, token)),\n    setRedirectPath: path => dispatch(actions.setRedirectPath(path))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyWorks);","map":{"version":3,"sources":["/home/vladichka/proga/Новий-WinRAR-archive/NewManager/src/containers/Works/Works.js"],"names":["React","Component","actions","connect","WorkComponent","classes","MyWorks","state","copiedValue","copyFunction","password","setState","copied","componentDidMount","props","onUploadWorks","userId","token","render","works","worksRender","map","work","id","copyValue","value","description","name","WorkList","mapStateToProps","auth","error","redirect","loading","mapDispatchToProps","dispatch","uploadWorks","setRedirectPath","path"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,aAAP,MAA0B,oDAA1B;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AACA,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BM,KAD8B,GACtB;AACNC,MAAAA,WAAW,EAAE;AADP,KADsB;;AAAA,SAO9BC,YAP8B,GAOdC,QAAD,IAAc;AAC3B,WAAKC,QAAL,CAAc;AAAEH,QAAAA,WAAW,EAAE,CAAC,KAAKD,KAAL,CAAWK;AAA3B,OAAd;AACD,KAT6B;AAAA;;AAI9BC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,aAAX,CAAyB,KAAKD,KAAL,CAAWE,MAApC,EAA4C,KAAKF,KAAL,CAAWG,KAAvD;AACD;;AAIDC,EAAAA,MAAM,GAAG;AACP,QAAIC,KAAK,GAAG,KAAKL,KAAL,CAAWK,KAAvB;AACA,QAAIC,WAAW,GAAGD,KAAK,CAACE,GAAN,CAAU,CAACC,IAAD,EAAOC,EAAP,KAAc;AACxC,UAAIC,SAAS,GAAG,KAAhB;;AACA,UAAI,KAAKjB,KAAL,CAAWkB,KAAX,IAAoBH,IAAI,CAACZ,QAA7B,EAAuC;AACrCc,QAAAA,SAAS,GAAG,IAAZ;AACD;;AACD,0BACE,QAAC,aAAD;AAEE,QAAA,WAAW,EAAEF,IAAI,CAACI,WAFpB;AAGE,QAAA,IAAI,EAAEJ,IAAI,CAACK,IAHb;AAIE,QAAA,QAAQ,EAAEL,IAAI,CAACZ,QAJjB;AAKE,QAAA,MAAM,EAAEY,IAAI,CAACC,EALf;AAME,QAAA,QAAQ,EAAE,KAAKd,YAAL,CAAkBa,IAAI,CAACZ,QAAvB,CANZ;AAOE,QAAA,QAAQ,EAAEc;AAPZ,SACOD,EADP;AAAA;AAAA;AAAA;AAAA,cADF;AAWD,KAhBiB,CAAlB;AAiBA,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,6BACE;AAAI,QAAA,SAAS,EAAElB,OAAO,CAACuB,QAAvB;AAAA,kBAAkCR;AAAlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAlC6B;;AAqChC,MAAMS,eAAe,GAAItB,KAAD,IAAW;AACjC,SAAO;AACLU,IAAAA,KAAK,EAAEV,KAAK,CAACuB,IAAN,CAAWb,KADb;AAELD,IAAAA,MAAM,EAAET,KAAK,CAACuB,IAAN,CAAWd,MAFd;AAGLe,IAAAA,KAAK,EAAExB,KAAK,CAACuB,IAAN,CAAWC,KAHb;AAILC,IAAAA,QAAQ,EAAEzB,KAAK,CAACuB,IAAN,CAAWE,QAJhB;AAKLC,IAAAA,OAAO,EAAE1B,KAAK,CAACuB,IAAN,CAAWG,OALf;AAMLd,IAAAA,KAAK,EAAEZ,KAAK,CAACY,KAAN,CAAYA;AANd,GAAP;AAQD,CATD;;AAUA,MAAMe,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLpB,IAAAA,aAAa,EAAE,CAACC,MAAD,EAASC,KAAT,KACbkB,QAAQ,CAACjC,OAAO,CAACkC,WAAR,CAAoBpB,MAApB,EAA4BC,KAA5B,CAAD,CAFL;AAGLoB,IAAAA,eAAe,EAAGC,IAAD,IAAUH,QAAQ,CAACjC,OAAO,CAACmC,eAAR,CAAwBC,IAAxB,CAAD;AAH9B,GAAP;AAKD,CAND;;AAOA,eAAenC,OAAO,CAAC0B,eAAD,EAAkBK,kBAAlB,CAAP,CAA6C5B,OAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport * as actions from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport WorkComponent from \"../../components/Works/WorkComponent/WorkComponent\";\nimport classes from \"./Works.module.css\";\nclass MyWorks extends Component {\n  state = {\n    copiedValue: null,\n  };\n  componentDidMount() {\n    this.props.onUploadWorks(this.props.userId, this.props.token);\n  }\n  copyFunction = (password) => {\n    this.setState({ copiedValue: !this.state.copied });\n  };\n  render() {\n    let works = this.props.works;\n    let worksRender = works.map((work, id) => {\n      let copyValue = false;\n      if (this.state.value == work.password) {\n        copyValue = true;\n      }\n      return (\n        <WorkComponent\n          key={id}\n          description={work.description}\n          name={work.name}\n          password={work.password}\n          workId={work.id}\n          copyFunc={this.copyFunction(work.password)}\n          copyIcon={copyValue}\n        />\n      );\n    });\n    return (\n      <React.Fragment>\n        <ul className={classes.WorkList}>{worksRender}</ul>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    userId: state.auth.userId,\n    error: state.auth.error,\n    redirect: state.auth.redirect,\n    loading: state.auth.loading,\n    works: state.works.works,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onUploadWorks: (userId, token) =>\n      dispatch(actions.uploadWorks(userId, token)),\n    setRedirectPath: (path) => dispatch(actions.setRedirectPath(path)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(MyWorks);\n"]},"metadata":{},"sourceType":"module"}