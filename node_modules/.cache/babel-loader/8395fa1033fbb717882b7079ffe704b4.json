{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\taras\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\Evolution\\\\Boichuk\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Layout from \"./hoc/Layout/Layout\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Login from \"./containers/Login/Login\";\nimport Auth from \"./containers/Auth/Auth\";\nimport About from \"./components/About/About\";\nimport Logout from \"./containers/Logout/Logout\";\nimport Works from \"./containers/Works/Works\";\nimport MyTasks from \"./containers/Tasks/MyTasks\";\nimport CreateWork from \"./containers/Works/CreateWork/CreateWork\";\nimport GetJob from \"./containers/GetJob/GetJob\";\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\n\nclass App extends Component {\n  componentDidMount() {\n    axios.get(\"https://www.uuidgenerator.net/api/version1\").then(response => {\n      console.log(response);\n    }).catch(error => console.log(error));\n  }\n\n  render() {\n    let routes = null;\n\n    if (this.props.token) {\n      routes = /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/myTasks\",\n          component: MyTasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/getJob\",\n          component: GetJob\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/createNewJob\",\n          component: CreateWork\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/myWorks\",\n          component: Works\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/logout\",\n          component: Logout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          component: About\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/about\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this);\n    } else {\n      routes = /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/auth\",\n          component: Auth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          component: Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: routes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    userId: state.auth.userId,\n    error: state.auth.error,\n    redirect: state.auth.redirect,\n    loading: state.auth.loading\n  };\n};\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["C:/Users/taras/OneDrive/Рабочий стол/Evolution/Boichuk/src/App.js"],"names":["React","Component","Layout","Route","Switch","Redirect","Login","Auth","About","Logout","Works","MyTasks","CreateWork","GetJob","axios","connect","App","componentDidMount","get","then","response","console","log","catch","error","render","routes","props","token","mapStateToProps","state","auth","userId","redirect","loading"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Layout from \"./hoc/Layout/Layout\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Login from \"./containers/Login/Login\";\r\nimport Auth from \"./containers/Auth/Auth\";\r\nimport About from \"./components/About/About\";\r\nimport Logout from \"./containers/Logout/Logout\";\r\nimport Works from \"./containers/Works/Works\";\r\nimport MyTasks from \"./containers/Tasks/MyTasks\";\r\n\r\nimport CreateWork from \"./containers/Works/CreateWork/CreateWork\";\r\nimport GetJob from \"./containers/GetJob/GetJob\"\r\nimport axios from 'axios'\r\nimport { connect } from \"react-redux\";\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"https://www.uuidgenerator.net/api/version1\")\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n  render() {\r\n    let routes = null;\r\n    if (this.props.token) {\r\n      routes = (\r\n        <Switch>\r\n           <Route path=\"/myTasks\" component={MyTasks} />\r\n\r\n           <Route path=\"/getJob\" component={GetJob} />\r\n          <Route path=\"/createNewJob\" component={CreateWork} />\r\n          <Route path=\"/myWorks\" component={Works} />\r\n          <Route path=\"/logout\" component={Logout} />\r\n          <Route path=\"/about\" component={About} />\r\n          <Redirect to=\"/about\" />\r\n        </Switch>\r\n      );\r\n    } else {\r\n      routes = (\r\n        <Switch>\r\n          <Route path=\"/auth\" component={Auth} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Redirect to=\"/login\" />\r\n        </Switch>\r\n      );\r\n    }\r\n\r\n    return <Layout>{routes}</Layout>;\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n    error: state.auth.error,\r\n    redirect: state.auth.redirect,\r\n    loading: state.auth.loading,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(App);\r\n"]},"metadata":{},"sourceType":"module"}