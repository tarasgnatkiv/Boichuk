{"ast":null,"code":"import * as actionTypes from \"./actionTypes\";\nimport axios from \"axios\";\nimport getWorkByPassword from \"../../functions/getWorkByPassword\";\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = (token, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n    userId: userId\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const auth = (login, password, repeatPassword, nickname) => {\n  return dispatch => {\n    dispatch(authStart());\n\n    if (nickname.length < 4 || nickname.length > 25) {\n      dispatch(authFail(\"Ooops, nickname has to be between 4 and 25 characters!\"));\n    } else if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(login) == false) {\n      dispatch(authFail(\"Ooops, it seems that email isn't correct!\"));\n    } else if (password.length < 6 || password.length > 20) {\n      dispatch(authFail(\"Ooops, password has to be between 6 and 20 characters!\"));\n    } else if (repeatPassword !== password) {\n      dispatch(authFail(\"Ooops, passwords do not match!\"));\n    } else {\n      const authData = {\n        email: login,\n        password: password,\n        returnSecureToken: true\n      };\n      axios.post(\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyByJGBJ1ZfClAOLx6PR3391TK2f7bZM6bs\", authData).then(response => {\n        console.log(response);\n        dispatch(authSuccess(response.data.idToken, response.data.localId, nickname));\n        return axios.post(`https://strongmanagment-default-rtdb.firebaseio.com/users.json?auth=${response.data.idToken}`, {\n          nickname: nickname,\n          userId: response.data.localId\n        });\n      }).then(response => {\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n\n        if (typeof error == \"string\") {\n          dispatch(authFail(error));\n        } else {\n          // if error.response \"ooips email already exists\"\n          dispatch(authFail(\"Ooops user with this email already exists\"));\n        }\n      });\n    }\n  };\n};\nexport const loginStart = () => {\n  return {\n    type: actionTypes.LOGIN_START\n  };\n};\nexport const loginSuccess = (token, userId) => {\n  return {\n    type: actionTypes.LOGIN_SUCCESS,\n    token: token,\n    userId: userId\n  };\n};\nexport const loginFail = error => {\n  return {\n    type: actionTypes.LOGIN_FAIL,\n    error: error\n  };\n};\nexport const login = (login, password) => {\n  return dispatch => {\n    dispatch(loginStart());\n\n    if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(login) == false) {\n      dispatch(loginFail(\"Ooops, it seems that email isn't correct!\"));\n    } else if (password.length < 6 || password.length > 20) {\n      dispatch(loginFail(\"Ooops, password has to be between 6 and 20 characters!\"));\n    } else {\n      const authData = {\n        email: login,\n        password: password,\n        returnSecureToken: true\n      };\n      axios.post(\"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyByJGBJ1ZfClAOLx6PR3391TK2f7bZM6bs\", authData).then(response => {\n        console.log(response);\n        dispatch(loginSuccess(response.data.idToken, response.data.localId));\n      }).catch(error => {\n        console.log(error);\n\n        if (typeof error == \"string\") {\n          dispatch(loginFail(error));\n        } else {\n          // if error.response \"ooips email already exists\"\n          dispatch(loginFail(\"Ooops, login or password is incorrect\"));\n        }\n      });\n    }\n  };\n};\nexport const setPath = path => {\n  return {\n    type: actionTypes.SET_PATH,\n    path: path\n  };\n};\nexport const setRedirectPath = path => {\n  return dispatch => {\n    if (path == \"null\") {\n      dispatch(setPath(\"null\"));\n    } else {\n      dispatch(setPath(path));\n    }\n  };\n};\nexport const logout = () => {\n  return {\n    type: actionTypes.LOGOUT\n  };\n}; //\n//\n//\n\nexport const createWorkFail = error => {\n  return {\n    type: actionTypes.CREATE_WORK_FAIL,\n    error: error\n  };\n};\nexport const createWorkStart = () => {\n  return {\n    type: actionTypes.CREATE_WORK_START\n  };\n};\nexport const createWorkSuccess = () => {\n  return {\n    type: actionTypes.CREATE_WORK_SUCCESS\n  };\n};\nexport const createWork = (name, description, userId, token) => {\n  return dispatch => {\n    dispatch(createWorkStart());\n\n    if (name.length < 1 || name.length > 50) {\n      dispatch(createWorkFail(\"Ooops, name has to be between 1 and 20 characters!\"));\n    } else if (description.length < 3 || description.length > 500) {\n      dispatch(createWorkFail(\"Ooops, description has to be between 3 and 500 characters!\"));\n    } else {\n      let work = {\n        name: name,\n        description: description,\n        ownerId: userId,\n        workers: []\n      };\n      axios.get(\"https://www.uuidgenerator.net/api/version1\").then(response => {\n        console.log(response);\n        work = { ...work,\n          password: response.data\n        };\n        return axios.post(`https://strongmanagment-default-rtdb.firebaseio.com/works.json?auth=${token}`, work);\n      }).then(response => {\n        dispatch(createWorkSuccess());\n      }).catch(error => {\n        console.log(error);\n\n        if (typeof error == \"string\") {\n          dispatch(createWorkFail(error));\n        } else {\n          console.log(error); // if error.response \"ooips email already exists\"\n\n          dispatch(createWorkFail(\"Ooops, some propblem exists\"));\n        }\n      });\n    }\n  };\n};\nexport const uploadWorksStart = () => {\n  return {\n    type: actionTypes.UPLOAD_WORKS_START\n  };\n};\nexport const uploadWorksFail = error => {\n  return {\n    type: actionTypes.UPLOAD_WORKS_FAIL,\n    error: error\n  };\n};\nexport const uploadWorksSuccess = works => {\n  return {\n    type: actionTypes.UPLOAD_WORKS_SUCCESS,\n    works: works\n  };\n};\n\nfunction getUserWorks(userId, worksObject) {\n  let worksArray = [];\n  Object.keys(worksObject).map(key => {\n    if (worksObject[key].ownerId == userId) {\n      worksArray.push({ ...worksObject[key],\n        id: key\n      });\n    }\n  });\n  return worksArray;\n}\n\nexport const uploadWorks = (userId, token) => {\n  return dispatch => {\n    dispatch(uploadWorksStart());\n    axios.get(`https://strongmanagment-default-rtdb.firebaseio.com/works.json?auth=${token}`).then(response => {\n      console.log(response.data);\n      dispatch(uploadWorksSuccess(getUserWorks(userId, response.data)));\n    }).catch(error => {\n      console.log(error);\n\n      if (typeof error == \"string\") {\n        dispatch(uploadWorksFail(error));\n      } else {\n        console.log(error); // if error.response \"ooips email already exists\"\n\n        dispatch(uploadWorksFail(\"Ooops, some propblem exists\"));\n      }\n    });\n  };\n}; //\n//\n//\n//\n//\n\nexport const removeWorkStart = () => {\n  return {\n    type: actionTypes.REMOVE_WORK_START\n  };\n};\nexport const removeWorkFail = error => {\n  return {\n    type: actionTypes.REMOVE_WORK_FAIL,\n    error: error\n  };\n};\nexport const removeWorkSuccess = works => {\n  return {\n    type: actionTypes.REMOVE_WORK_SUCCESS,\n    works: works\n  };\n};\nexport const removeWork = (workId, token, prevWorks) => {\n  return dispatch => {\n    dispatch(removeWorkStart());\n    axios.delete(`https://strongmanagment-default-rtdb.firebaseio.com/works/${workId}.json?auth=${token}`).then(response => {\n      console.log(response.data);\n      let newWorks = [];\n\n      for (let i = 0; i < prevWorks.length; i++) {\n        if (prevWorks[i].id != workId) {\n          newWorks.push(prevWorks[i]);\n        }\n      }\n\n      dispatch(removeWorkSuccess(newWorks));\n    }).catch(error => {\n      dispatch(removeWorkFail(error));\n    });\n  };\n}; //\n//\n//\n\nexport const getJobStart = () => {\n  return {\n    type: actionTypes.GET_JOB_START\n  };\n};\nexport const getJobFail = error => {\n  return {\n    type: actionTypes.GET_JOB_FAIL,\n    error: error\n  };\n};\nexport const getJobSuccess = () => {\n  return {\n    type: actionTypes.GET_JOB_SUCCESS\n  };\n};\nexport const getJob = (password, userId, token) => {\n  return dispatch => {\n    dispatch(getJobStart());\n\n    if (password.length != 36) {\n      dispatch(getJobFail(\"Ooops,password must be 36 characters long\"));\n    } else {\n      axios.get(`https://strongmanagment-default-rtdb.firebaseio.com/works.json?auth=${token}`).then(response => {\n        console.log(response.data);\n        let allWorks = response.data;\n        let findedWork = getWorkByPassword(allWorks, password);\n\n        if (findedWork.error) {\n          return Promise.reject(findedWork.error);\n        } else {\n          work = findedWork.work;\n          let updatedWorkers = [];\n          console.log(findedWork + \"findedWork\");\n\n          if (findedWork.workers) {\n            console.log(findedWork.workers + \"findedWork.workers\");\n            updatedWorkers = findedWork.workers;\n            updatedWorkers.push(userId);\n          } else {\n            updatedWorkers.push(userId);\n          }\n\n          console.log(updatedWorkers + \"updated workers\");\n          let updatedWork = { ...findedWork,\n            workers: updatedWorkers\n          };\n          console.log(findedWork.id);\n          return axios.patch(`https://strongmanagment-default-rtdb.firebaseio.com/works/${findedWork.id}.json?auth=${token}`, updatedWork);\n        }\n      }).then(response => {\n        console.log(response);\n        dispatch(getJobSuccess());\n      }).catch(error => {\n        console.log(error);\n        dispatch(getJobFail(error));\n      });\n    }\n  };\n};","map":{"version":3,"sources":["/home/vladichka/VladTaras/Boichuk/src/store/actions/actions.js"],"names":["actionTypes","axios","getWorkByPassword","authStart","type","AUTH_START","authSuccess","token","userId","AUTH_SUCCESS","authFail","error","AUTH_FAIL","auth","login","password","repeatPassword","nickname","dispatch","length","test","authData","email","returnSecureToken","post","then","response","console","log","data","idToken","localId","catch","loginStart","LOGIN_START","loginSuccess","LOGIN_SUCCESS","loginFail","LOGIN_FAIL","setPath","path","SET_PATH","setRedirectPath","logout","LOGOUT","createWorkFail","CREATE_WORK_FAIL","createWorkStart","CREATE_WORK_START","createWorkSuccess","CREATE_WORK_SUCCESS","createWork","name","description","work","ownerId","workers","get","uploadWorksStart","UPLOAD_WORKS_START","uploadWorksFail","UPLOAD_WORKS_FAIL","uploadWorksSuccess","works","UPLOAD_WORKS_SUCCESS","getUserWorks","worksObject","worksArray","Object","keys","map","key","push","id","uploadWorks","removeWorkStart","REMOVE_WORK_START","removeWorkFail","REMOVE_WORK_FAIL","removeWorkSuccess","REMOVE_WORK_SUCCESS","removeWork","workId","prevWorks","delete","newWorks","i","getJobStart","GET_JOB_START","getJobFail","GET_JOB_FAIL","getJobSuccess","GET_JOB_SUCCESS","getJob","allWorks","findedWork","Promise","reject","updatedWorkers","updatedWork","patch"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,mCAA9B;AACA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC7B,SAAO;AAAEC,IAAAA,IAAI,EAAEJ,WAAW,CAACK;AAApB,GAAP;AACD,CAFM;AAGP,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5C,SAAO;AACLJ,IAAAA,IAAI,EAAEJ,WAAW,CAACS,YADb;AAELF,IAAAA,KAAK,EAAEA,KAFF;AAGLC,IAAAA,MAAM,EAAEA;AAHH,GAAP;AAKD,CANM;AAOP,OAAO,MAAME,QAAQ,GAAIC,KAAD,IAAW;AACjC,SAAO;AAAEP,IAAAA,IAAI,EAAEJ,WAAW,CAACY,SAApB;AAA+BD,IAAAA,KAAK,EAAEA;AAAtC,GAAP;AACD,CAFM;AAGP,OAAO,MAAME,IAAI,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,cAAlB,EAAkCC,QAAlC,KAA+C;AACjE,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACf,SAAS,EAAV,CAAR;;AACA,QAAIc,QAAQ,CAACE,MAAT,GAAkB,CAAlB,IAAuBF,QAAQ,CAACE,MAAT,GAAkB,EAA7C,EAAiD;AAC/CD,MAAAA,QAAQ,CACNR,QAAQ,CAAC,wDAAD,CADF,CAAR;AAGD,KAJD,MAIO,IACL,uEAAuEU,IAAvE,CACEN,KADF,KAEK,KAHA,EAIL;AACAI,MAAAA,QAAQ,CAACR,QAAQ,CAAC,2CAAD,CAAT,CAAR;AACD,KANM,MAMA,IAAIK,QAAQ,CAACI,MAAT,GAAkB,CAAlB,IAAuBJ,QAAQ,CAACI,MAAT,GAAkB,EAA7C,EAAiD;AACtDD,MAAAA,QAAQ,CACNR,QAAQ,CAAC,wDAAD,CADF,CAAR;AAGD,KAJM,MAIA,IAAIM,cAAc,KAAKD,QAAvB,EAAiC;AACtCG,MAAAA,QAAQ,CAACR,QAAQ,CAAC,gCAAD,CAAT,CAAR;AACD,KAFM,MAEA;AACL,YAAMW,QAAQ,GAAG;AACfC,QAAAA,KAAK,EAAER,KADQ;AAEfC,QAAAA,QAAQ,EAAEA,QAFK;AAGfQ,QAAAA,iBAAiB,EAAE;AAHJ,OAAjB;AAKAtB,MAAAA,KAAK,CACFuB,IADH,CAEI,uGAFJ,EAGIH,QAHJ,EAKGI,IALH,CAKSC,QAAD,IAAc;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAR,QAAAA,QAAQ,CACNZ,WAAW,CAACoB,QAAQ,CAACG,IAAT,CAAcC,OAAf,EAAwBJ,QAAQ,CAACG,IAAT,CAAcE,OAAtC,EAA+Cd,QAA/C,CADL,CAAR;AAGA,eAAOhB,KAAK,CAACuB,IAAN,CACJ,uEAAsEE,QAAQ,CAACG,IAAT,CAAcC,OAAQ,EADxF,EAEL;AAAEb,UAAAA,QAAQ,EAAEA,QAAZ;AAAsBT,UAAAA,MAAM,EAAEkB,QAAQ,CAACG,IAAT,CAAcE;AAA5C,SAFK,CAAP;AAID,OAdH,EAeGN,IAfH,CAeSC,QAAD,IAAc;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,OAjBH,EAkBGM,KAlBH,CAkBUrB,KAAD,IAAW;AAChBgB,QAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAZ;;AACA,YAAI,OAAOA,KAAP,IAAgB,QAApB,EAA8B;AAC5BO,UAAAA,QAAQ,CAACR,QAAQ,CAACC,KAAD,CAAT,CAAR;AACD,SAFD,MAEO;AACL;AACAO,UAAAA,QAAQ,CAACR,QAAQ,CAAC,2CAAD,CAAT,CAAR;AACD;AACF,OA1BH;AA2BD;AACF,GApDD;AAqDD,CAtDM;AAuDP,OAAO,MAAMuB,UAAU,GAAG,MAAM;AAC9B,SAAO;AAAE7B,IAAAA,IAAI,EAAEJ,WAAW,CAACkC;AAApB,GAAP;AACD,CAFM;AAGP,OAAO,MAAMC,YAAY,GAAG,CAAC5B,KAAD,EAAQC,MAAR,KAAmB;AAC7C,SAAO;AACLJ,IAAAA,IAAI,EAAEJ,WAAW,CAACoC,aADb;AAEL7B,IAAAA,KAAK,EAAEA,KAFF;AAGLC,IAAAA,MAAM,EAAEA;AAHH,GAAP;AAKD,CANM;AAOP,OAAO,MAAM6B,SAAS,GAAI1B,KAAD,IAAW;AAClC,SAAO;AAAEP,IAAAA,IAAI,EAAEJ,WAAW,CAACsC,UAApB;AAAgC3B,IAAAA,KAAK,EAAEA;AAAvC,GAAP;AACD,CAFM;AAGP,OAAO,MAAMG,KAAK,GAAG,CAACA,KAAD,EAAQC,QAAR,KAAqB;AACxC,SAAQG,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACe,UAAU,EAAX,CAAR;;AACA,QACE,uEAAuEb,IAAvE,CACEN,KADF,KAEK,KAHP,EAIE;AACAI,MAAAA,QAAQ,CAACmB,SAAS,CAAC,2CAAD,CAAV,CAAR;AACD,KAND,MAMO,IAAItB,QAAQ,CAACI,MAAT,GAAkB,CAAlB,IAAuBJ,QAAQ,CAACI,MAAT,GAAkB,EAA7C,EAAiD;AACtDD,MAAAA,QAAQ,CACNmB,SAAS,CAAC,wDAAD,CADH,CAAR;AAGD,KAJM,MAIA;AACL,YAAMhB,QAAQ,GAAG;AACfC,QAAAA,KAAK,EAAER,KADQ;AAEfC,QAAAA,QAAQ,EAAEA,QAFK;AAGfQ,QAAAA,iBAAiB,EAAE;AAHJ,OAAjB;AAKAtB,MAAAA,KAAK,CACFuB,IADH,CAEI,mHAFJ,EAGIH,QAHJ,EAKGI,IALH,CAKSC,QAAD,IAAc;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAR,QAAAA,QAAQ,CAACiB,YAAY,CAACT,QAAQ,CAACG,IAAT,CAAcC,OAAf,EAAwBJ,QAAQ,CAACG,IAAT,CAAcE,OAAtC,CAAb,CAAR;AACD,OARH,EASGC,KATH,CASUrB,KAAD,IAAW;AAChBgB,QAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAZ;;AACA,YAAI,OAAOA,KAAP,IAAgB,QAApB,EAA8B;AAC5BO,UAAAA,QAAQ,CAACmB,SAAS,CAAC1B,KAAD,CAAV,CAAR;AACD,SAFD,MAEO;AACL;AACAO,UAAAA,QAAQ,CAACmB,SAAS,CAAC,uCAAD,CAAV,CAAR;AACD;AACF,OAjBH;AAkBD;AACF,GArCD;AAsCD,CAvCM;AAwCP,OAAO,MAAME,OAAO,GAAIC,IAAD,IAAU;AAC/B,SAAO;AAAEpC,IAAAA,IAAI,EAAEJ,WAAW,CAACyC,QAApB;AAA8BD,IAAAA,IAAI,EAAEA;AAApC,GAAP;AACD,CAFM;AAGP,OAAO,MAAME,eAAe,GAAIF,IAAD,IAAU;AACvC,SAAQtB,QAAD,IAAc;AACnB,QAAIsB,IAAI,IAAI,MAAZ,EAAoB;AAClBtB,MAAAA,QAAQ,CAACqB,OAAO,CAAC,MAAD,CAAR,CAAR;AACD,KAFD,MAEO;AACLrB,MAAAA,QAAQ,CAACqB,OAAO,CAACC,IAAD,CAAR,CAAR;AACD;AACF,GAND;AAOD,CARM;AASP,OAAO,MAAMG,MAAM,GAAG,MAAM;AAC1B,SAAO;AAAEvC,IAAAA,IAAI,EAAEJ,WAAW,CAAC4C;AAApB,GAAP;AACD,CAFM,C,CAGP;AACA;AACA;;AACA,OAAO,MAAMC,cAAc,GAAIlC,KAAD,IAAW;AACvC,SAAO;AAAEP,IAAAA,IAAI,EAAEJ,WAAW,CAAC8C,gBAApB;AAAsCnC,IAAAA,KAAK,EAAEA;AAA7C,GAAP;AACD,CAFM;AAGP,OAAO,MAAMoC,eAAe,GAAG,MAAM;AACnC,SAAO;AAAE3C,IAAAA,IAAI,EAAEJ,WAAW,CAACgD;AAApB,GAAP;AACD,CAFM;AAGP,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AACrC,SAAO;AACL7C,IAAAA,IAAI,EAAEJ,WAAW,CAACkD;AADb,GAAP;AAGD,CAJM;AAKP,OAAO,MAAMC,UAAU,GAAG,CAACC,IAAD,EAAOC,WAAP,EAAoB7C,MAApB,EAA4BD,KAA5B,KAAsC;AAC9D,SAAQW,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC6B,eAAe,EAAhB,CAAR;;AAEA,QAAIK,IAAI,CAACjC,MAAL,GAAc,CAAd,IAAmBiC,IAAI,CAACjC,MAAL,GAAc,EAArC,EAAyC;AACvCD,MAAAA,QAAQ,CACN2B,cAAc,CAAC,oDAAD,CADR,CAAR;AAGD,KAJD,MAIO,IAAIQ,WAAW,CAAClC,MAAZ,GAAqB,CAArB,IAA0BkC,WAAW,CAAClC,MAAZ,GAAqB,GAAnD,EAAwD;AAC7DD,MAAAA,QAAQ,CACN2B,cAAc,CACZ,4DADY,CADR,CAAR;AAKD,KANM,MAMA;AACL,UAAIS,IAAI,GAAG;AACTF,QAAAA,IAAI,EAAEA,IADG;AAETC,QAAAA,WAAW,EAAEA,WAFJ;AAGTE,QAAAA,OAAO,EAAE/C,MAHA;AAITgD,QAAAA,OAAO,EAAE;AAJA,OAAX;AAOAvD,MAAAA,KAAK,CACFwD,GADH,CACO,4CADP,EAEGhC,IAFH,CAESC,QAAD,IAAc;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA4B,QAAAA,IAAI,GAAG,EAAE,GAAGA,IAAL;AAAWvC,UAAAA,QAAQ,EAAEW,QAAQ,CAACG;AAA9B,SAAP;AACA,eAAO5B,KAAK,CAACuB,IAAN,CACJ,uEAAsEjB,KAAM,EADxE,EAEL+C,IAFK,CAAP;AAID,OATH,EAUG7B,IAVH,CAUSC,QAAD,IAAc;AAClBR,QAAAA,QAAQ,CAAC+B,iBAAiB,EAAlB,CAAR;AACD,OAZH,EAaGjB,KAbH,CAaUrB,KAAD,IAAW;AAChBgB,QAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAZ;;AACA,YAAI,OAAOA,KAAP,IAAgB,QAApB,EAA8B;AAC5BO,UAAAA,QAAQ,CAAC2B,cAAc,CAAClC,KAAD,CAAf,CAAR;AACD,SAFD,MAEO;AACLgB,UAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAZ,EADK,CAEL;;AACAO,UAAAA,QAAQ,CAAC2B,cAAc,CAAC,6BAAD,CAAf,CAAR;AACD;AACF,OAtBH;AAuBD;AACF,GA7CD;AA8CD,CA/CM;AAgDP,OAAO,MAAMa,gBAAgB,GAAG,MAAM;AACpC,SAAO;AAAEtD,IAAAA,IAAI,EAAEJ,WAAW,CAAC2D;AAApB,GAAP;AACD,CAFM;AAGP,OAAO,MAAMC,eAAe,GAAIjD,KAAD,IAAW;AACxC,SAAO;AAAEP,IAAAA,IAAI,EAAEJ,WAAW,CAAC6D,iBAApB;AAAuClD,IAAAA,KAAK,EAAEA;AAA9C,GAAP;AACD,CAFM;AAGP,OAAO,MAAMmD,kBAAkB,GAAIC,KAAD,IAAW;AAC3C,SAAO;AACL3D,IAAAA,IAAI,EAAEJ,WAAW,CAACgE,oBADb;AAELD,IAAAA,KAAK,EAAEA;AAFF,GAAP;AAID,CALM;;AAMP,SAASE,YAAT,CAAsBzD,MAAtB,EAA8B0D,WAA9B,EAA2C;AACzC,MAAIC,UAAU,GAAG,EAAjB;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA8BC,GAAD,IAAS;AACpC,QAAIL,WAAW,CAACK,GAAD,CAAX,CAAiBhB,OAAjB,IAA4B/C,MAAhC,EAAwC;AACtC2D,MAAAA,UAAU,CAACK,IAAX,CAAgB,EAAE,GAAGN,WAAW,CAACK,GAAD,CAAhB;AAAuBE,QAAAA,EAAE,EAAEF;AAA3B,OAAhB;AACD;AACF,GAJD;AAKA,SAAOJ,UAAP;AACD;;AACD,OAAO,MAAMO,WAAW,GAAG,CAAClE,MAAD,EAASD,KAAT,KAAmB;AAC5C,SAAQW,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACwC,gBAAgB,EAAjB,CAAR;AACAzD,IAAAA,KAAK,CACFwD,GADH,CAEK,uEAAsElD,KAAM,EAFjF,EAIGkB,IAJH,CAISC,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAX,MAAAA,QAAQ,CAAC4C,kBAAkB,CAACG,YAAY,CAACzD,MAAD,EAASkB,QAAQ,CAACG,IAAlB,CAAb,CAAnB,CAAR;AACD,KAPH,EAQGG,KARH,CAQUrB,KAAD,IAAW;AAChBgB,MAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAZ;;AACA,UAAI,OAAOA,KAAP,IAAgB,QAApB,EAA8B;AAC5BO,QAAAA,QAAQ,CAAC0C,eAAe,CAACjD,KAAD,CAAhB,CAAR;AACD,OAFD,MAEO;AACLgB,QAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAZ,EADK,CAEL;;AACAO,QAAAA,QAAQ,CAAC0C,eAAe,CAAC,6BAAD,CAAhB,CAAR;AACD;AACF,KAjBH;AAkBD,GApBD;AAqBD,CAtBM,C,CAuBP;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMe,eAAe,GAAG,MAAM;AACnC,SAAO;AAAEvE,IAAAA,IAAI,EAAEJ,WAAW,CAAC4E;AAApB,GAAP;AACD,CAFM;AAGP,OAAO,MAAMC,cAAc,GAAIlE,KAAD,IAAW;AACvC,SAAO;AAAEP,IAAAA,IAAI,EAAEJ,WAAW,CAAC8E,gBAApB;AAAsCnE,IAAAA,KAAK,EAAEA;AAA7C,GAAP;AACD,CAFM;AAGP,OAAO,MAAMoE,iBAAiB,GAAIhB,KAAD,IAAW;AAC1C,SAAO;AACL3D,IAAAA,IAAI,EAAEJ,WAAW,CAACgF,mBADb;AAELjB,IAAAA,KAAK,EAAEA;AAFF,GAAP;AAID,CALM;AAMP,OAAO,MAAMkB,UAAU,GAAG,CAACC,MAAD,EAAS3E,KAAT,EAAgB4E,SAAhB,KAA8B;AACtD,SAAQjE,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACyD,eAAe,EAAhB,CAAR;AACA1E,IAAAA,KAAK,CACFmF,MADH,CAEK,6DAA4DF,MAAO,cAAa3E,KAAM,EAF3F,EAIGkB,IAJH,CAISC,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,UAAIwD,QAAQ,GAAG,EAAf;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,SAAS,CAAChE,MAA9B,EAAsCmE,CAAC,EAAvC,EAA2C;AACzC,YAAIH,SAAS,CAACG,CAAD,CAAT,CAAab,EAAb,IAAmBS,MAAvB,EAA+B;AAC7BG,UAAAA,QAAQ,CAACb,IAAT,CAAcW,SAAS,CAACG,CAAD,CAAvB;AACD;AACF;;AACDpE,MAAAA,QAAQ,CAAC6D,iBAAiB,CAACM,QAAD,CAAlB,CAAR;AACD,KAbH,EAcGrD,KAdH,CAcUrB,KAAD,IAAW;AAChBO,MAAAA,QAAQ,CAAC2D,cAAc,CAAClE,KAAD,CAAf,CAAR;AACD,KAhBH;AAiBD,GAnBD;AAoBD,CArBM,C,CAsBP;AACA;AACA;;AACA,OAAO,MAAM4E,WAAW,GAAG,MAAM;AAC/B,SAAO;AAAEnF,IAAAA,IAAI,EAAEJ,WAAW,CAACwF;AAApB,GAAP;AACD,CAFM;AAGP,OAAO,MAAMC,UAAU,GAAI9E,KAAD,IAAW;AACnC,SAAO;AAAEP,IAAAA,IAAI,EAAEJ,WAAW,CAAC0F,YAApB;AAAkC/E,IAAAA,KAAK,EAAEA;AAAzC,GAAP;AACD,CAFM;AAGP,OAAO,MAAMgF,aAAa,GAAG,MAAM;AACjC,SAAO;AACLvF,IAAAA,IAAI,EAAEJ,WAAW,CAAC4F;AADb,GAAP;AAGD,CAJM;AAKP,OAAO,MAAMC,MAAM,GAAG,CAAC9E,QAAD,EAAWP,MAAX,EAAmBD,KAAnB,KAA6B;AACjD,SAAQW,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACqE,WAAW,EAAZ,CAAR;;AACA,QAAIxE,QAAQ,CAACI,MAAT,IAAmB,EAAvB,EAA2B;AACzBD,MAAAA,QAAQ,CAACuE,UAAU,CAAC,2CAAD,CAAX,CAAR;AACD,KAFD,MAEO;AACLxF,MAAAA,KAAK,CACFwD,GADH,CAEK,uEAAsElD,KAAM,EAFjF,EAIGkB,IAJH,CAISC,QAAD,IAAc;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,YAAIiE,QAAQ,GAAGpE,QAAQ,CAACG,IAAxB;AACA,YAAIkE,UAAU,GAAG7F,iBAAiB,CAAC4F,QAAD,EAAW/E,QAAX,CAAlC;;AACA,YAAIgF,UAAU,CAACpF,KAAf,EAAsB;AACpB,iBAAOqF,OAAO,CAACC,MAAR,CAAeF,UAAU,CAACpF,KAA1B,CAAP;AACD,SAFD,MAEO;AACL2C,UAAAA,IAAI,GAAGyC,UAAU,CAACzC,IAAlB;AACA,cAAI4C,cAAc,GAAG,EAArB;AACAvE,UAAAA,OAAO,CAACC,GAAR,CAAYmE,UAAU,GAAG,YAAzB;;AAEA,cAAIA,UAAU,CAACvC,OAAf,EAAwB;AACtB7B,YAAAA,OAAO,CAACC,GAAR,CAAYmE,UAAU,CAACvC,OAAX,GAAqB,oBAAjC;AACA0C,YAAAA,cAAc,GAAGH,UAAU,CAACvC,OAA5B;AACA0C,YAAAA,cAAc,CAAC1B,IAAf,CAAoBhE,MAApB;AACD,WAJD,MAIO;AACL0F,YAAAA,cAAc,CAAC1B,IAAf,CAAoBhE,MAApB;AACD;;AACDmB,UAAAA,OAAO,CAACC,GAAR,CAAYsE,cAAc,GAAG,iBAA7B;AACA,cAAIC,WAAW,GAAG,EAAE,GAAGJ,UAAL;AAAiBvC,YAAAA,OAAO,EAAE0C;AAA1B,WAAlB;AACAvE,UAAAA,OAAO,CAACC,GAAR,CAAYmE,UAAU,CAACtB,EAAvB;AACA,iBAAOxE,KAAK,CAACmG,KAAN,CACJ,6DAA4DL,UAAU,CAACtB,EAAG,cAAalE,KAAM,EADzF,EAEL4F,WAFK,CAAP;AAID;AACF,OA9BH,EA+BG1E,IA/BH,CA+BSC,QAAD,IAAc;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAR,QAAAA,QAAQ,CAACyE,aAAa,EAAd,CAAR;AACD,OAlCH,EAmCG3D,KAnCH,CAmCUrB,KAAD,IAAW;AAChBgB,QAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAZ;AACAO,QAAAA,QAAQ,CAACuE,UAAU,CAAC9E,KAAD,CAAX,CAAR;AACD,OAtCH;AAuCD;AACF,GA7CD;AA8CD,CA/CM","sourcesContent":["import * as actionTypes from \"./actionTypes\";\nimport axios from \"axios\";\nimport getWorkByPassword from \"../../functions/getWorkByPassword\";\nexport const authStart = () => {\n  return { type: actionTypes.AUTH_START };\n};\nexport const authSuccess = (token, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n    userId: userId,\n  };\n};\nexport const authFail = (error) => {\n  return { type: actionTypes.AUTH_FAIL, error: error };\n};\nexport const auth = (login, password, repeatPassword, nickname) => {\n  return (dispatch) => {\n    dispatch(authStart());\n    if (nickname.length < 4 || nickname.length > 25) {\n      dispatch(\n        authFail(\"Ooops, nickname has to be between 4 and 25 characters!\")\n      );\n    } else if (\n      /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(\n        login\n      ) == false\n    ) {\n      dispatch(authFail(\"Ooops, it seems that email isn't correct!\"));\n    } else if (password.length < 6 || password.length > 20) {\n      dispatch(\n        authFail(\"Ooops, password has to be between 6 and 20 characters!\")\n      );\n    } else if (repeatPassword !== password) {\n      dispatch(authFail(\"Ooops, passwords do not match!\"));\n    } else {\n      const authData = {\n        email: login,\n        password: password,\n        returnSecureToken: true,\n      };\n      axios\n        .post(\n          \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyByJGBJ1ZfClAOLx6PR3391TK2f7bZM6bs\",\n          authData\n        )\n        .then((response) => {\n          console.log(response);\n          dispatch(\n            authSuccess(response.data.idToken, response.data.localId, nickname)\n          );\n          return axios.post(\n            `https://strongmanagment-default-rtdb.firebaseio.com/users.json?auth=${response.data.idToken}`,\n            { nickname: nickname, userId: response.data.localId }\n          );\n        })\n        .then((response) => {\n          console.log(response);\n        })\n        .catch((error) => {\n          console.log(error);\n          if (typeof error == \"string\") {\n            dispatch(authFail(error));\n          } else {\n            // if error.response \"ooips email already exists\"\n            dispatch(authFail(\"Ooops user with this email already exists\"));\n          }\n        });\n    }\n  };\n};\nexport const loginStart = () => {\n  return { type: actionTypes.LOGIN_START };\n};\nexport const loginSuccess = (token, userId) => {\n  return {\n    type: actionTypes.LOGIN_SUCCESS,\n    token: token,\n    userId: userId,\n  };\n};\nexport const loginFail = (error) => {\n  return { type: actionTypes.LOGIN_FAIL, error: error };\n};\nexport const login = (login, password) => {\n  return (dispatch) => {\n    dispatch(loginStart());\n    if (\n      /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(\n        login\n      ) == false\n    ) {\n      dispatch(loginFail(\"Ooops, it seems that email isn't correct!\"));\n    } else if (password.length < 6 || password.length > 20) {\n      dispatch(\n        loginFail(\"Ooops, password has to be between 6 and 20 characters!\")\n      );\n    } else {\n      const authData = {\n        email: login,\n        password: password,\n        returnSecureToken: true,\n      };\n      axios\n        .post(\n          \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyByJGBJ1ZfClAOLx6PR3391TK2f7bZM6bs\",\n          authData\n        )\n        .then((response) => {\n          console.log(response);\n          dispatch(loginSuccess(response.data.idToken, response.data.localId));\n        })\n        .catch((error) => {\n          console.log(error);\n          if (typeof error == \"string\") {\n            dispatch(loginFail(error));\n          } else {\n            // if error.response \"ooips email already exists\"\n            dispatch(loginFail(\"Ooops, login or password is incorrect\"));\n          }\n        });\n    }\n  };\n};\nexport const setPath = (path) => {\n  return { type: actionTypes.SET_PATH, path: path };\n};\nexport const setRedirectPath = (path) => {\n  return (dispatch) => {\n    if (path == \"null\") {\n      dispatch(setPath(\"null\"));\n    } else {\n      dispatch(setPath(path));\n    }\n  };\n};\nexport const logout = () => {\n  return { type: actionTypes.LOGOUT };\n};\n//\n//\n//\nexport const createWorkFail = (error) => {\n  return { type: actionTypes.CREATE_WORK_FAIL, error: error };\n};\nexport const createWorkStart = () => {\n  return { type: actionTypes.CREATE_WORK_START };\n};\nexport const createWorkSuccess = () => {\n  return {\n    type: actionTypes.CREATE_WORK_SUCCESS,\n  };\n};\nexport const createWork = (name, description, userId, token) => {\n  return (dispatch) => {\n    dispatch(createWorkStart());\n\n    if (name.length < 1 || name.length > 50) {\n      dispatch(\n        createWorkFail(\"Ooops, name has to be between 1 and 20 characters!\")\n      );\n    } else if (description.length < 3 || description.length > 500) {\n      dispatch(\n        createWorkFail(\n          \"Ooops, description has to be between 3 and 500 characters!\"\n        )\n      );\n    } else {\n      let work = {\n        name: name,\n        description: description,\n        ownerId: userId,\n        workers: [],\n      };\n\n      axios\n        .get(\"https://www.uuidgenerator.net/api/version1\")\n        .then((response) => {\n          console.log(response);\n          work = { ...work, password: response.data };\n          return axios.post(\n            `https://strongmanagment-default-rtdb.firebaseio.com/works.json?auth=${token}`,\n            work\n          );\n        })\n        .then((response) => {\n          dispatch(createWorkSuccess());\n        })\n        .catch((error) => {\n          console.log(error);\n          if (typeof error == \"string\") {\n            dispatch(createWorkFail(error));\n          } else {\n            console.log(error);\n            // if error.response \"ooips email already exists\"\n            dispatch(createWorkFail(\"Ooops, some propblem exists\"));\n          }\n        });\n    }\n  };\n};\nexport const uploadWorksStart = () => {\n  return { type: actionTypes.UPLOAD_WORKS_START };\n};\nexport const uploadWorksFail = (error) => {\n  return { type: actionTypes.UPLOAD_WORKS_FAIL, error: error };\n};\nexport const uploadWorksSuccess = (works) => {\n  return {\n    type: actionTypes.UPLOAD_WORKS_SUCCESS,\n    works: works,\n  };\n};\nfunction getUserWorks(userId, worksObject) {\n  let worksArray = [];\n  Object.keys(worksObject).map((key) => {\n    if (worksObject[key].ownerId == userId) {\n      worksArray.push({ ...worksObject[key], id: key });\n    }\n  });\n  return worksArray;\n}\nexport const uploadWorks = (userId, token) => {\n  return (dispatch) => {\n    dispatch(uploadWorksStart());\n    axios\n      .get(\n        `https://strongmanagment-default-rtdb.firebaseio.com/works.json?auth=${token}`\n      )\n      .then((response) => {\n        console.log(response.data);\n        dispatch(uploadWorksSuccess(getUserWorks(userId, response.data)));\n      })\n      .catch((error) => {\n        console.log(error);\n        if (typeof error == \"string\") {\n          dispatch(uploadWorksFail(error));\n        } else {\n          console.log(error);\n          // if error.response \"ooips email already exists\"\n          dispatch(uploadWorksFail(\"Ooops, some propblem exists\"));\n        }\n      });\n  };\n};\n//\n//\n//\n//\n//\n\nexport const removeWorkStart = () => {\n  return { type: actionTypes.REMOVE_WORK_START };\n};\nexport const removeWorkFail = (error) => {\n  return { type: actionTypes.REMOVE_WORK_FAIL, error: error };\n};\nexport const removeWorkSuccess = (works) => {\n  return {\n    type: actionTypes.REMOVE_WORK_SUCCESS,\n    works: works,\n  };\n};\nexport const removeWork = (workId, token, prevWorks) => {\n  return (dispatch) => {\n    dispatch(removeWorkStart());\n    axios\n      .delete(\n        `https://strongmanagment-default-rtdb.firebaseio.com/works/${workId}.json?auth=${token}`\n      )\n      .then((response) => {\n        console.log(response.data);\n        let newWorks = [];\n        for (let i = 0; i < prevWorks.length; i++) {\n          if (prevWorks[i].id != workId) {\n            newWorks.push(prevWorks[i]);\n          }\n        }\n        dispatch(removeWorkSuccess(newWorks));\n      })\n      .catch((error) => {\n        dispatch(removeWorkFail(error));\n      });\n  };\n};\n//\n//\n//\nexport const getJobStart = () => {\n  return { type: actionTypes.GET_JOB_START };\n};\nexport const getJobFail = (error) => {\n  return { type: actionTypes.GET_JOB_FAIL, error: error };\n};\nexport const getJobSuccess = () => {\n  return {\n    type: actionTypes.GET_JOB_SUCCESS,\n  };\n};\nexport const getJob = (password, userId, token) => {\n  return (dispatch) => {\n    dispatch(getJobStart());\n    if (password.length != 36) {\n      dispatch(getJobFail(\"Ooops,password must be 36 characters long\"));\n    } else {\n      axios\n        .get(\n          `https://strongmanagment-default-rtdb.firebaseio.com/works.json?auth=${token}`\n        )\n        .then((response) => {\n          console.log(response.data);\n          let allWorks = response.data;\n          let findedWork = getWorkByPassword(allWorks, password);\n          if (findedWork.error) {\n            return Promise.reject(findedWork.error);\n          } else {\n            work = findedWork.work;\n            let updatedWorkers = [];\n            console.log(findedWork + \"findedWork\");\n\n            if (findedWork.workers) {\n              console.log(findedWork.workers + \"findedWork.workers\");\n              updatedWorkers = findedWork.workers;\n              updatedWorkers.push(userId);\n            } else {\n              updatedWorkers.push(userId);\n            }\n            console.log(updatedWorkers + \"updated workers\");\n            let updatedWork = { ...findedWork, workers: updatedWorkers };\n            console.log(findedWork.id);\n            return axios.patch(\n              `https://strongmanagment-default-rtdb.firebaseio.com/works/${findedWork.id}.json?auth=${token}`,\n              updatedWork\n            );\n          }\n        })\n        .then((response) => {\n          console.log(response);\n          dispatch(getJobSuccess());\n        })\n        .catch((error) => {\n          console.log(error);\n          dispatch(getJobFail(error));\n        });\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}