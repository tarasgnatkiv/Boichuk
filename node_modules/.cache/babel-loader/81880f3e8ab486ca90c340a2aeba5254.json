{"ast":null,"code":"function getWorkersByWork(objectOfWorkers, objectWork) {\n  if (objectWork.workers) {\n    console.log(objectWork, \"objectWork\");\n    console.log(objectOfWorkers, \"objectOfWorkers\");\n    let workers = Object.keys(objectOfWorkers).map(key => {\n      if (objectWork.workers.includes(objectOfWorkers[key].userId)) {\n        return { ...objectOfWorkers[key],\n          id: key\n        };\n      } else {\n        return null;\n      }\n    });\n    let returnArray = workers.filter(worker => worker != null);\n    console.log(workers, \"workers\");\n    return {\n      error: null,\n      workers: returnArray\n    };\n  } else {\n    return {\n      error: \"Ooops, nobody works at this job\",\n      workers: []\n    };\n  }\n}\n\nexport default getWorkersByWork;","map":{"version":3,"sources":["/home/vladichka/Boichuk/src/functions/getWorkersByWork.js"],"names":["getWorkersByWork","objectOfWorkers","objectWork","workers","console","log","Object","keys","map","key","includes","userId","id","returnArray","filter","worker","error"],"mappings":"AAAA,SAASA,gBAAT,CAA0BC,eAA1B,EAA2CC,UAA3C,EAAuD;AACrD,MAAIA,UAAU,CAACC,OAAf,EAAwB;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ,EAAwB,YAAxB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYJ,eAAZ,EAA6B,iBAA7B;AAEA,QAAIE,OAAO,GAAGG,MAAM,CAACC,IAAP,CAAYN,eAAZ,EAA6BO,GAA7B,CAAkCC,GAAD,IAAS;AACtD,UAAIP,UAAU,CAACC,OAAX,CAAmBO,QAAnB,CAA4BT,eAAe,CAACQ,GAAD,CAAf,CAAqBE,MAAjD,CAAJ,EAA8D;AAC5D,eAAO,EAAE,GAAGV,eAAe,CAACQ,GAAD,CAApB;AAA2BG,UAAAA,EAAE,EAAEH;AAA/B,SAAP;AACD,OAFD,MAEO;AACL,eAAO,IAAP;AACD;AACF,KANa,CAAd;AAOA,QAAII,WAAW,GAAGV,OAAO,CAACW,MAAR,CAAgBC,MAAD,IAAYA,MAAM,IAAI,IAArC,CAAlB;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ,EAAqB,SAArB;AACA,WAAO;AAAEa,MAAAA,KAAK,EAAE,IAAT;AAAeb,MAAAA,OAAO,EAAEU;AAAxB,KAAP;AACD,GAdD,MAcO;AACL,WAAO;AAAEG,MAAAA,KAAK,EAAE,iCAAT;AAA4Cb,MAAAA,OAAO,EAAE;AAArD,KAAP;AACD;AACF;;AACD,eAAeH,gBAAf","sourcesContent":["function getWorkersByWork(objectOfWorkers, objectWork) {\n  if (objectWork.workers) {\n    console.log(objectWork, \"objectWork\");\n    console.log(objectOfWorkers, \"objectOfWorkers\");\n\n    let workers = Object.keys(objectOfWorkers).map((key) => {\n      if (objectWork.workers.includes(objectOfWorkers[key].userId)) {\n        return { ...objectOfWorkers[key], id: key };\n      } else {\n        return null;\n      }\n    });\n    let returnArray = workers.filter((worker) => worker != null);\n    console.log(workers, \"workers\");\n    return { error: null, workers: returnArray };\n  } else {\n    return { error: \"Ooops, nobody works at this job\", workers: [] };\n  }\n}\nexport default getWorkersByWork;\n"]},"metadata":{},"sourceType":"module"}