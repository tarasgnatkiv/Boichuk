{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/vladichka/Boichuk/src/components/User/User.js\";\nimport React, { Component } from \"react\";\nimport \"../../../node_modules/@fortawesome/fontawesome-free/css/all.css\";\nimport classes from \"./User.module.css\";\nimport femaleUser from \"./femaleUser.png\";\nimport ButtonComponent from \"../UI/Button/Button\"; // import InputElement from \"../../../components/UI/Input/Input\";\n// import ButtonElement from \"../../../components/UI/Button/Button\";\n\nimport InputElement from \"../../components/UI/Input/Input\";\nimport ButtonElement from \"../../components/UI/Button/Button\";\nimport { Redirect } from \"react-router-dom\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\n\nclass User extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      delete: false,\n      addTask: false,\n      controls: {\n        WorkName: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"\",\n            placeholder: \"Dota 2\"\n          },\n          label: \"Work name\",\n          touched: false,\n          value: \"\",\n          validation: {\n            required: true,\n            valid: false,\n            minLength: 1,\n            maxLength: 20,\n            isEmail: false\n          }\n        },\n        WorkDescription: {\n          elementType: \"textarea\",\n          elementConfig: {\n            type: \"\",\n            placeholder: \"At w3schools.com you will learn how to make a website. They offer free tutorials in all web development technologies.\"\n          },\n          label: \"Description\",\n          touched: false,\n          value: \"\",\n          validation: {\n            required: true,\n            valid: false,\n            minLength: 3,\n            maxLength: 500\n          }\n        }\n      },\n      signUp: true\n    };\n\n    this.inputChangedHandler = (event, controlName) => {\n      const updatedControls = { ...this.state.controls,\n        [controlName]: { ...this.state.controls[controlName],\n          value: event.target.value,\n          validation: { ...this.state.controls[controlName].validation,\n            valid: this.checkValidity(event.target.value, this.state.controls[controlName].validation)\n          },\n          touched: true\n        }\n      };\n      this.setState({\n        controls: updatedControls\n      });\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      this.props.onCreateWork(this.state.controls.WorkName.value, this.state.controls.WorkDescription.value, this.props.userId, this.props.token);\n    };\n\n    this.cancelDelete = () => {\n      if (this.state.addTask) {\n        this.setState({\n          addTask: !this.state.addTask\n        });\n      }\n\n      this.setState({\n        delete: !this.state.delete\n      });\n    };\n\n    this.addTaskFunc = () => {\n      if (this.state.delete) {\n        this.setState({\n          delete: !this.state.delete\n        });\n      }\n\n      this.setState({\n        addTask: !this.state.addTask\n      });\n    };\n  }\n\n  // componentDidMount() {\n  //     this.props.setRedirectPath(\"null\");\n  // }\n  checkValidity(value, rules) {\n    let isValid = true;\n\n    if (!rules) {\n      return true;\n    }\n\n    if (rules.required) {\n      isValid = value.trim() !== \"\" && isValid;\n    }\n\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    if (rules.isEmail) {\n      const pattern = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n      console.log(value);\n      isValid = pattern.test(value) && isValid;\n      console.log(isValid);\n    }\n\n    if (rules.isNumeric) {\n      const pattern = /^\\d+$/;\n      isValid = pattern.test(value) && isValid;\n    }\n\n    return isValid;\n  }\n\n  render() {\n    const formElementsArray = [];\n\n    for (let key in this.state.controls) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.controls[key]\n      });\n    }\n\n    let form = formElementsArray.map(element => {\n      return /*#__PURE__*/_jsxDEV(InputElement, {\n        changed: event => this.inputChangedHandler(event, element.id),\n        elementType: element.config.elementType,\n        elementConfig: element.config.elementConfig,\n        invalid: !element.config.validation.valid,\n        value: element.config.value,\n        shouldValidate: element.config.validation.required,\n        touched: element.config.touched,\n        label: element.config.label\n      }, element.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this);\n    });\n    let error = null;\n\n    if (this.props.error) {\n      error = /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"style\", {\n          children: \"@import url('https://fonts.googleapis.com/css2?family=Russo+One&display=swap');\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.errorMessage,\n          children: this.props.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this);\n      console.log(\"fefef\");\n    }\n\n    let spinner = null;\n\n    if (this.props.loading) {\n      spinner = /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 23\n      }, this);\n    }\n\n    let redirect = null;\n\n    if (this.props.redirect) {\n      redirect = /*#__PURE__*/_jsxDEV(Redirect, {\n        to: this.props.redirect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 24\n      }, this);\n    }\n\n    if (this.props.redirect == null || this.props.redirect == \"null\") {\n      redirect = null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: classes.User,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.UserMainPart,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.LeftPart,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.DeleteUser,\n            onClick: this.cancelDelete,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-user-minus\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: classes.Avatar,\n            src: femaleUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.RightPart,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.TopUserHeader,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.Label,\n              children: this.props.userName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.TaskGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"style\", {\n              children: \"@import url('https://fonts.googleapis.com/css2?family=Langar&family=Pacifico&family=Questrial&display=swap');\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Tasks:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.TaskGroupValue,\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fas fa-tasks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.TaskGroupValue,\n              children: this.props.userTasks\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.RatingGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"style\", {\n              children: \"@import url('https://fonts.googleapis.com/css2?family=Langar&family=Pacifico&family=Questrial&display=swap');\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Rating:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.RatingGroupValue,\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"far fa-smile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.TaskGroupValue,\n              children: \"88/100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: classes.ButtonAddTask,\n            onClick: this.addTaskFunc,\n            children: \"Add task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.state.delete ? [classes.active, classes.DeleteContainer].join(\" \") : classes.DeleteContainer,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.container,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Delete User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Are you sure you want to delete your user?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.clearfix,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: this.cancelDelete,\n              className: classes.cancelbtn,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: classes.deletebtn,\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.state.addTask ? [classes.active, classes.addTaskContainer].join(\" \") : classes.addTaskContainer,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.addTask,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Add task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: classes.form,\n            onSubmit: this.submitHandler,\n            children: [form, error, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.clearfix,\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: this.addTaskFunc,\n                className: classes.cancelbtn,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: classes.deletebtn,\n                children: \"Create\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default User;","map":{"version":3,"sources":["/home/vladichka/Boichuk/src/components/User/User.js"],"names":["React","Component","classes","femaleUser","ButtonComponent","InputElement","ButtonElement","Redirect","Spinner","User","state","delete","addTask","controls","WorkName","elementType","elementConfig","type","placeholder","label","touched","value","validation","required","valid","minLength","maxLength","isEmail","WorkDescription","signUp","inputChangedHandler","event","controlName","updatedControls","target","checkValidity","setState","submitHandler","preventDefault","props","onCreateWork","userId","token","cancelDelete","addTaskFunc","rules","isValid","trim","length","pattern","console","log","test","isNumeric","render","formElementsArray","key","push","id","config","form","map","element","error","errorMessage","spinner","loading","redirect","UserMainPart","LeftPart","DeleteUser","Avatar","RightPart","TopUserHeader","Label","userName","TaskGroup","TaskGroupValue","userTasks","RatingGroup","RatingGroupValue","ButtonAddTask","active","DeleteContainer","join","container","clearfix","cancelbtn","deletebtn","addTaskContainer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../../../node_modules/@fortawesome/fontawesome-free/css/all.css\";\nimport classes from \"./User.module.css\";\nimport femaleUser from \"./femaleUser.png\";\nimport ButtonComponent from \"../UI/Button/Button\";\n// import InputElement from \"../../../components/UI/Input/Input\";\n// import ButtonElement from \"../../../components/UI/Button/Button\";\n\nimport InputElement from \"../../components/UI/Input/Input\";\nimport ButtonElement from \"../../components/UI/Button/Button\";\nimport { Redirect } from \"react-router-dom\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\n\n\n\nclass User extends Component {\n    state = {\n        delete: false,\n        addTask: false,\n        controls: {\n            WorkName: {\n                elementType: \"input\",\n                elementConfig: {\n                    type: \"\",\n                    placeholder: \"Dota 2\",\n                },\n                label: \"Work name\",\n                touched: false,\n                value: \"\",\n                validation: {\n                    required: true,\n                    valid: false,\n                    minLength: 1,\n                    maxLength: 20,\n                    isEmail: false,\n                },\n            },\n            WorkDescription: {\n                elementType: \"textarea\",\n                elementConfig: {\n                    type: \"\",\n                    placeholder:\n                        \"At w3schools.com you will learn how to make a website. They offer free tutorials in all web development technologies.\",\n                },\n                label: \"Description\",\n                touched: false,\n                value: \"\",\n                validation: {\n                    required: true,\n                    valid: false,\n                    minLength: 3,\n                    maxLength: 500,\n                },\n            },\n        },\n        signUp: true,\n    };\n\n    // componentDidMount() {\n    //     this.props.setRedirectPath(\"null\");\n    // }\n    checkValidity(value, rules) {\n        let isValid = true;\n        if (!rules) {\n            return true;\n        }\n        if (rules.required) {\n            isValid = value.trim() !== \"\" && isValid;\n        }\n        if (rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid;\n        }\n        if (rules.maxLength) {\n            isValid = value.length <= rules.maxLength && isValid;\n        }\n        if (rules.isEmail) {\n            const pattern = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n            console.log(value);\n            isValid = pattern.test(value) && isValid;\n            console.log(isValid);\n        }\n        if (rules.isNumeric) {\n            const pattern = /^\\d+$/;\n            isValid = pattern.test(value) && isValid;\n        }\n        return isValid;\n    }\n    inputChangedHandler = (event, controlName) => {\n        const updatedControls = {\n            ...this.state.controls,\n            [controlName]: {\n                ...this.state.controls[controlName],\n                value: event.target.value,\n                validation: {\n                    ...this.state.controls[controlName].validation,\n                    valid: this.checkValidity(\n                        event.target.value,\n                        this.state.controls[controlName].validation\n                    ),\n                },\n                touched: true,\n            },\n        };\n        this.setState({ controls: updatedControls });\n    };\n    submitHandler = (event) => {\n        event.preventDefault();\n        this.props.onCreateWork(\n            this.state.controls.WorkName.value,\n            this.state.controls.WorkDescription.value,\n            this.props.userId,\n            this.props.token\n        );\n    };\n\n    cancelDelete = () => {\n        if (this.state.addTask) {\n            this.setState({\n                addTask: !this.state.addTask,\n            });\n        }\n        this.setState({\n            delete: !this.state.delete,\n        });\n    };\n\n    addTaskFunc = () => {\n        if (this.state.delete) {\n            this.setState({\n                delete: !this.state.delete,\n            });\n        }\n        this.setState({\n            addTask: !this.state.addTask,\n        });\n    };\n\n    render() {\n        const formElementsArray = [];\n        for (let key in this.state.controls) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.controls[key],\n            });\n        }\n        let form = formElementsArray.map((element) => {\n            return (\n                <InputElement\n                    key={element.id}\n                    changed={(event) => this.inputChangedHandler(event, element.id)}\n                    elementType={element.config.elementType}\n                    elementConfig={element.config.elementConfig}\n                    invalid={!element.config.validation.valid}\n                    value={element.config.value}\n                    shouldValidate={element.config.validation.required}\n                    touched={element.config.touched}\n                    label={element.config.label}\n                />\n            );\n        });\n        let error = null;\n        if (this.props.error) {\n            error = (\n                <React.Fragment>\n                    <style>\n                        @import\n                        url('https://fonts.googleapis.com/css2?family=Russo+One&display=swap');\n          </style>\n                    <div className={classes.errorMessage}>{this.props.error}</div>\n                </React.Fragment>\n            );\n            console.log(\"fefef\");\n        }\n        let spinner = null;\n        if (this.props.loading) {\n            spinner = <Spinner />;\n        }\n        let redirect = null;\n        if (this.props.redirect) {\n            redirect = <Redirect to={this.props.redirect} />;\n        }\n        if (this.props.redirect == null || this.props.redirect == \"null\") {\n            redirect = null;\n        }\n\n        return (\n            <li className={classes.User}>\n                <div className={classes.UserMainPart}>\n                    <div className={classes.LeftPart}>\n                        <div className={classes.DeleteUser} onClick={this.cancelDelete}>\n                            <i class=\"fas fa-user-minus\"></i>\n                        </div>\n                        <img className={classes.Avatar} src={femaleUser} />\n                    </div>\n                    <div className={classes.RightPart}>\n                        <div className={classes.TopUserHeader}>\n                            <div className={classes.Label}>{this.props.userName}</div>\n                        </div>\n                        <div className={classes.TaskGroup}>\n                            <style>\n                                @import\n                                url('https://fonts.googleapis.com/css2?family=Langar&family=Pacifico&family=Questrial&display=swap');\n                      </style>\n                            <div>Tasks:</div>\n                            <div className={classes.TaskGroupValue}>\n                                <i class=\"fas fa-tasks\"></i>\n                            </div>\n                            <div className={classes.TaskGroupValue}>\n                                {this.props.userTasks}\n                            </div>\n                        </div>\n                        <div className={classes.RatingGroup}>\n                            <style>\n                                @import\n                                url('https://fonts.googleapis.com/css2?family=Langar&family=Pacifico&family=Questrial&display=swap');\n                      </style>\n                            <div>Rating:</div>\n                            <div className={classes.RatingGroupValue}>\n                                <i class=\"far fa-smile\"></i>\n                            </div>\n                            <div className={classes.TaskGroupValue}>{\"88/100\"}</div>\n                        </div>\n                        <button className={classes.ButtonAddTask} onClick={this.addTaskFunc}>Add task</button>\n                    </div>\n                </div>\n                <div\n                    className={\n                        this.state.delete\n                            ? [classes.active, classes.DeleteContainer].join(\" \")\n                            : classes.DeleteContainer\n                    }\n                >\n                    <div className={classes.container}>\n                        <h1>Delete User</h1>\n                        <p>Are you sure you want to delete your user?</p>\n\n                        <div className={classes.clearfix}>\n                            <button\n                                type=\"button\"\n                                onClick={this.cancelDelete}\n                                className={classes.cancelbtn}>Cancel\n                            </button>\n                            <button\n                                type=\"button\"\n                                className={classes.deletebtn}>Delete\n                            </button>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={this.state.addTask ? [classes.active, classes.addTaskContainer].join(\" \") : classes.addTaskContainer}>\n                    <div className={classes.addTask}>\n                        <h1>Add task</h1>\n                        <form className={classes.form} onSubmit={this.submitHandler}>\n                            {form}\n                            {error}\n                            {/* <ButtonElement btnType=\"Success\">CREATE</ButtonElement> */}\n                            <div className={classes.clearfix}>\n                                <button\n                                    type=\"button\"\n                                    onClick={this.addTaskFunc}\n                                    className={classes.cancelbtn}>Cancel\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    className={classes.deletebtn}>Create\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </li>\n        );\n    }\n}\nexport default User;\n"]},"metadata":{},"sourceType":"module"}