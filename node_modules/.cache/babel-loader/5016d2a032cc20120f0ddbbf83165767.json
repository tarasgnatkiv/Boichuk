{"ast":null,"code":"import React, { Component } from \"react\";\nimport * as actions from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\n\nclass MyWorks extends Component {}\n\nexport default MyWorks;\n\nconst mapStateToProps = state => {\n  return {\n    token: state.token,\n    userId: state.userId,\n    error: state.error,\n    redirect: state.redirect,\n    loading: state.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLogin: (login, password) => dispatch(actions.login(login, password)),\n    setRedirectPath: path => dispatch(actions.setRedirectPath(path))\n  };\n};","map":{"version":3,"sources":["/home/vladichka/proga/Новий-WinRAR-archive/NewManager/src/containers/Works/Works.js"],"names":["React","Component","actions","connect","MyWorks","mapStateToProps","state","token","userId","error","redirect","loading","mapDispatchToProps","dispatch","onLogin","login","password","setRedirectPath","path"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AACA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;;AAChC,eAAeG,OAAf;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,KAAK,EAAED,KAAK,CAACC,KADR;AAELC,IAAAA,MAAM,EAAEF,KAAK,CAACE,MAFT;AAGLC,IAAAA,KAAK,EAAEH,KAAK,CAACG,KAHR;AAILC,IAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAJX;AAKLC,IAAAA,OAAO,EAAEL,KAAK,CAACK;AALV,GAAP;AAOD,CARD;;AASA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLC,IAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,QAAR,KAAqBH,QAAQ,CAACX,OAAO,CAACa,KAAR,CAAcA,KAAd,EAAqBC,QAArB,CAAD,CADjC;AAELC,IAAAA,eAAe,EAAGC,IAAD,IAAUL,QAAQ,CAACX,OAAO,CAACe,eAAR,CAAwBC,IAAxB,CAAD;AAF9B,GAAP;AAID,CALD","sourcesContent":["import React, { Component } from \"react\";\nimport * as actions from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\nclass MyWorks extends Component {}\nexport default MyWorks;\n\nconst mapStateToProps = (state) => {\n  return {\n    token: state.token,\n    userId: state.userId,\n    error: state.error,\n    redirect: state.redirect,\n    loading: state.loading,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onLogin: (login, password) => dispatch(actions.login(login, password)),\n    setRedirectPath: (path) => dispatch(actions.setRedirectPath(path)),\n  };\n};\n"]},"metadata":{},"sourceType":"module"}