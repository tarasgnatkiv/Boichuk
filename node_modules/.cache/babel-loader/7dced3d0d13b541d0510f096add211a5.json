{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nconst initialState = {\n  tasks: [],\n  loading: false,\n  error: null\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_TASK_START:\n      {\n        return { ...state,\n          loading: true,\n          error: null\n        };\n      }\n\n    case actionTypes.ADD_TASK_FAIL:\n      {\n        return { ...state,\n          loading: false,\n          error: action.error\n        };\n      }\n\n    case actionTypes.ADD_TASK_SUCCESS:\n      {\n        return { ...state,\n          loading: false,\n          error: null\n        };\n      }\n\n    case actionTypes.UPLOAD_SELECTED_TASKS_START:\n      {\n        return { ...state,\n          loading: true,\n          error: null\n        };\n      }\n\n    case actionTypes.UPLOAD_SELECTED_TASKS_FAIL:\n      {\n        return { ...state,\n          loading: false,\n          error: action.error\n        };\n      }\n\n    case actionTypes.UPLOAD_SELECTED_TASKS_SUCCESS:\n      {\n        return { ...state,\n          loading: false,\n          tasks: action.tasks\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/vladichka/Boichuk/src/store/reducers/taskReducer.js"],"names":["actionTypes","initialState","tasks","loading","error","reducer","state","action","type","ADD_TASK_START","ADD_TASK_FAIL","ADD_TASK_SUCCESS","UPLOAD_SELECTED_TASKS_START","UPLOAD_SELECTED_TASKS_FAIL","UPLOAD_SELECTED_TASKS_SUCCESS"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,WAAW,CAACS,cAAjB;AAAiC;AAC/B,eAAO,EACL,GAAGH,KADE;AAELH,UAAAA,OAAO,EAAE,IAFJ;AAGLC,UAAAA,KAAK,EAAE;AAHF,SAAP;AAKD;;AACD,SAAKJ,WAAW,CAACU,aAAjB;AAAgC;AAC9B,eAAO,EACL,GAAGJ,KADE;AAELH,UAAAA,OAAO,EAAE,KAFJ;AAGLC,UAAAA,KAAK,EAAEG,MAAM,CAACH;AAHT,SAAP;AAKD;;AACD,SAAKJ,WAAW,CAACW,gBAAjB;AAAmC;AACjC,eAAO,EACL,GAAGL,KADE;AAELH,UAAAA,OAAO,EAAE,KAFJ;AAGLC,UAAAA,KAAK,EAAE;AAHF,SAAP;AAKD;;AACD,SAAKJ,WAAW,CAACY,2BAAjB;AAA8C;AAC5C,eAAO,EACL,GAAGN,KADE;AAELH,UAAAA,OAAO,EAAE,IAFJ;AAGLC,UAAAA,KAAK,EAAE;AAHF,SAAP;AAKD;;AACD,SAAKJ,WAAW,CAACa,0BAAjB;AAA6C;AAC3C,eAAO,EACL,GAAGP,KADE;AAELH,UAAAA,OAAO,EAAE,KAFJ;AAGLC,UAAAA,KAAK,EAAEG,MAAM,CAACH;AAHT,SAAP;AAKD;;AACD,SAAKJ,WAAW,CAACc,6BAAjB;AAAgD;AAC9C,eAAO,EACL,GAAGR,KADE;AAELH,UAAAA,OAAO,EAAE,KAFJ;AAGLD,UAAAA,KAAK,EAAEK,MAAM,CAACL;AAHT,SAAP;AAKD;;AAED;AACE,aAAOI,KAAP;AA7CJ;AA+CD,CAhDD;;AAiDA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nconst initialState = {\n  tasks: [],\n  loading: false,\n  error: null,\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_TASK_START: {\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    }\n    case actionTypes.ADD_TASK_FAIL: {\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      };\n    }\n    case actionTypes.ADD_TASK_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        error: null,\n      };\n    }\n    case actionTypes.UPLOAD_SELECTED_TASKS_START: {\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    }\n    case actionTypes.UPLOAD_SELECTED_TASKS_FAIL: {\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      };\n    }\n    case actionTypes.UPLOAD_SELECTED_TASKS_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        tasks: action.tasks,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}