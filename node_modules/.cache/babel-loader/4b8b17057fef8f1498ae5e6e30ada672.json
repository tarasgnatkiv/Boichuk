{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/vladichka/proga/\\u041D\\u043E\\u0432\\u0438\\u0439-WinRAR-archive/NewManager/src/containers/Works/Works.js\";\nimport React, { Component } from \"react\";\nimport * as actions from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport WorkComponent from \"../../components/Works/WorkComponent/WorkComponent\";\nimport classes from \"./Works.module.css\";\n\nclass MyWorks extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      works: [],\n      didComponentsLoad: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.onUploadWorks(this.props.userId, this.props.token);\n    console.log(this.props.works);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.works != this.props.works) this.props.onUploadWorks(this.props.userId, this.props.token);\n    console.log(this.props.works);\n  }\n\n  render() {\n    let worksRender;\n\n    if (didComponentsLoad == false) {\n      worksRender = this.props.works.map((work, id) => {\n        return /*#__PURE__*/_jsxDEV(WorkComponent, {\n          description: work.description,\n          name: work.name,\n          password: work.password,\n          workId: work.id\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this);\n      });\n    } else {\n      worksRender = this.state.works.map((work, id) => {\n        return /*#__PURE__*/_jsxDEV(WorkComponent, {\n          description: work.description,\n          name: work.name,\n          password: work.password,\n          workId: work.id\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this);\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: classes.WorkList,\n        children: worksRender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    userId: state.auth.userId,\n    error: state.auth.error,\n    redirect: state.auth.redirect,\n    loading: state.auth.loading,\n    works: state.works.works\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onUploadWorks: (userId, token) => dispatch(actions.uploadWorks(userId, token)),\n    setRedirectPath: path => dispatch(actions.setRedirectPath(path))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyWorks);","map":{"version":3,"sources":["/home/vladichka/proga/Новий-WinRAR-archive/NewManager/src/containers/Works/Works.js"],"names":["React","Component","actions","connect","WorkComponent","classes","MyWorks","state","works","didComponentsLoad","componentDidMount","props","onUploadWorks","userId","token","console","log","componentDidUpdate","prevProps","render","worksRender","map","work","id","description","name","password","WorkList","mapStateToProps","auth","error","redirect","loading","mapDispatchToProps","dispatch","uploadWorks","setRedirectPath","path"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport * as actions from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport WorkComponent from \"../../components/Works/WorkComponent/WorkComponent\";\nimport classes from \"./Works.module.css\";\n\nclass MyWorks extends Component {\n  state = { works: [], didComponentsLoad: false };\n\n  componentDidMount() {\n    this.props.onUploadWorks(this.props.userId, this.props.token);\n\n    console.log(this.props.works);\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.works != this.props.works)\n      this.props.onUploadWorks(this.props.userId, this.props.token);\n\n    console.log(this.props.works);\n  }\n\n  render() {\n    let worksRender;\n    if (didComponentsLoad == false) {\n      worksRender = this.props.works.map((work, id) => {\n        return (\n          <WorkComponent\n            key={id}\n            description={work.description}\n            name={work.name}\n            password={work.password}\n            workId={work.id}\n          />\n        );\n      });\n    } else {\n      worksRender = this.state.works.map((work, id) => {\n        return (\n          <WorkComponent\n            key={id}\n            description={work.description}\n            name={work.name}\n            password={work.password}\n            workId={work.id}\n          />\n        );\n      });\n    }\n\n    return (\n      <React.Fragment>\n        <ul className={classes.WorkList}>{worksRender}</ul>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    userId: state.auth.userId,\n    error: state.auth.error,\n    redirect: state.auth.redirect,\n    loading: state.auth.loading,\n    works: state.works.works,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onUploadWorks: (userId, token) =>\n      dispatch(actions.uploadWorks(userId, token)),\n    setRedirectPath: (path) => dispatch(actions.setRedirectPath(path)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(MyWorks);\n"]},"metadata":{},"sourceType":"module"}