{"ast":null,"code":"import * as actionTypes from \"./actionTypes\";\nimport axios from \"axios\";\nimport getWorkByPassword from \"../../functions/getWorkByPassword\";\nimport getWorkersByWork from \"../../functions/getWorkersByWork\";\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = (token, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n    userId: userId\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const auth = (login, password, repeatPassword, nickname) => {\n  return dispatch => {\n    dispatch(authStart());\n\n    if (nickname.length < 4 || nickname.length > 25) {\n      dispatch(authFail(\"Ooops, nickname has to be between 4 and 25 characters!\"));\n    } else if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(login) == false) {\n      dispatch(authFail(\"Ooops, it seems that email isn't correct!\"));\n    } else if (password.length < 6 || password.length > 20) {\n      dispatch(authFail(\"Ooops, password has to be between 6 and 20 characters!\"));\n    } else if (repeatPassword !== password) {\n      dispatch(authFail(\"Ooops, passwords do not match!\"));\n    } else {\n      const authData = {\n        email: login,\n        password: password,\n        returnSecureToken: true\n      };\n      axios.post(\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyByJGBJ1ZfClAOLx6PR3391TK2f7bZM6bs\", authData).then(response => {\n        console.log(response);\n        dispatch(authSuccess(response.data.idToken, response.data.localId, nickname));\n        return axios.post(`https://strongmanagment-default-rtdb.firebaseio.com/users.json?auth=${response.data.idToken}`, {\n          nickname: nickname,\n          userId: response.data.localId,\n          rating: \"0/0\",\n          tasks: []\n        });\n      }).then(response => {\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n\n        if (typeof error == \"string\") {\n          dispatch(authFail(error));\n        } else {\n          // if error.response \"ooips email already exists\"\n          dispatch(authFail(\"Ooops user with this email already exists\"));\n        }\n      });\n    }\n  };\n};\nexport const loginStart = () => {\n  return {\n    type: actionTypes.LOGIN_START\n  };\n};\nexport const loginSuccess = (token, userId) => {\n  return {\n    type: actionTypes.LOGIN_SUCCESS,\n    token: token,\n    userId: userId\n  };\n};\nexport const loginFail = error => {\n  return {\n    type: actionTypes.LOGIN_FAIL,\n    error: error\n  };\n};\nexport const login = (login, password) => {\n  return dispatch => {\n    dispatch(loginStart());\n\n    if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(login) == false) {\n      dispatch(loginFail(\"Ooops, it seems that email isn't correct!\"));\n    } else if (password.length < 6 || password.length > 20) {\n      dispatch(loginFail(\"Ooops, password has to be between 6 and 20 characters!\"));\n    } else {\n      const authData = {\n        email: login,\n        password: password,\n        returnSecureToken: true\n      };\n      axios.post(\"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyByJGBJ1ZfClAOLx6PR3391TK2f7bZM6bs\", authData).then(response => {\n        console.log(response);\n        dispatch(loginSuccess(response.data.idToken, response.data.localId));\n      }).catch(error => {\n        console.log(error);\n\n        if (typeof error == \"string\") {\n          dispatch(loginFail(error));\n        } else {\n          // if error.response \"ooips email already exists\"\n          dispatch(loginFail(\"Ooops, login or password is incorrect\"));\n        }\n      });\n    }\n  };\n};\nexport const setPath = path => {\n  return {\n    type: actionTypes.SET_PATH,\n    path: path\n  };\n};\nexport const setRedirectPath = path => {\n  return dispatch => {\n    if (path == \"null\") {\n      dispatch(setPath(\"null\"));\n    } else {\n      dispatch(setPath(path));\n    }\n  };\n};\nexport const logout = () => {\n  return {\n    type: actionTypes.LOGOUT\n  };\n}; //\n//\n//\n\nexport const createWorkFail = error => {\n  return {\n    type: actionTypes.CREATE_WORK_FAIL,\n    error: error\n  };\n};\nexport const createWorkStart = () => {\n  return {\n    type: actionTypes.CREATE_WORK_START\n  };\n};\nexport const createWorkSuccess = () => {\n  return {\n    type: actionTypes.CREATE_WORK_SUCCESS\n  };\n};\nexport const createWork = (name, description, userId, token) => {\n  return dispatch => {\n    dispatch(createWorkStart());\n\n    if (name.length < 1 || name.length > 50) {\n      dispatch(createWorkFail(\"Ooops, name has to be between 1 and 20 characters!\"));\n    } else if (description.length < 3 || description.length > 500) {\n      dispatch(createWorkFail(\"Ooops, description has to be between 3 and 500 characters!\"));\n    } else {\n      let work = {\n        name: name,\n        description: description,\n        ownerId: userId,\n        workers: []\n      };\n      axios.get(\"https://www.uuidgenerator.net/api/version1\").then(response => {\n        console.log(response);\n        work = { ...work,\n          password: response.data\n        };\n        return axios.post(`https://strongmanagment-default-rtdb.firebaseio.com/works.json?auth=${token}`, work);\n      }).then(response => {\n        dispatch(createWorkSuccess());\n      }).catch(error => {\n        console.log(error);\n\n        if (typeof error == \"string\") {\n          dispatch(createWorkFail(error));\n        } else {\n          console.log(error); // if error.response \"ooips email already exists\"\n\n          dispatch(createWorkFail(\"Ooops, some propblem exists\"));\n        }\n      });\n    }\n  };\n};\nexport const uploadWorksStart = () => {\n  return {\n    type: actionTypes.UPLOAD_WORKS_START\n  };\n};\nexport const uploadWorksFail = error => {\n  return {\n    type: actionTypes.UPLOAD_WORKS_FAIL,\n    error: error\n  };\n};\nexport const uploadWorksSuccess = works => {\n  return {\n    type: actionTypes.UPLOAD_WORKS_SUCCESS,\n    works: works\n  };\n};\n\nfunction getUserWorks(userId, worksObject) {\n  let worksArray = [];\n  Object.keys(worksObject).map(key => {\n    if (worksObject[key].ownerId == userId) {\n      worksArray.push({ ...worksObject[key],\n        id: key\n      });\n    }\n  });\n  return worksArray;\n}\n\nexport const uploadWorks = (userId, token) => {\n  return dispatch => {\n    dispatch(uploadWorksStart());\n    axios.get(`https://strongmanagment-default-rtdb.firebaseio.com/works.json?auth=${token}`).then(response => {\n      console.log(response.data);\n      dispatch(uploadWorksSuccess(getUserWorks(userId, response.data)));\n    }).catch(error => {\n      console.log(error);\n\n      if (typeof error == \"string\") {\n        dispatch(uploadWorksFail(error));\n      } else {\n        console.log(error); // if error.response \"ooips email already exists\"\n\n        dispatch(uploadWorksFail(\"Ooops, some propblem exists\"));\n      }\n    });\n  };\n}; //\n//\n//\n//\n//\n\nexport const removeWorkStart = () => {\n  return {\n    type: actionTypes.REMOVE_WORK_START\n  };\n};\nexport const removeWorkFail = error => {\n  return {\n    type: actionTypes.REMOVE_WORK_FAIL,\n    error: error\n  };\n};\nexport const removeWorkSuccess = works => {\n  return {\n    type: actionTypes.REMOVE_WORK_SUCCESS,\n    works: works\n  };\n};\nexport const removeWork = (workId, token, prevWorks) => {\n  return dispatch => {\n    dispatch(removeWorkStart());\n    axios.delete(`https://strongmanagment-default-rtdb.firebaseio.com/works/${workId}.json?auth=${token}`).then(response => {\n      console.log(response.data);\n      let newWorks = [];\n\n      for (let i = 0; i < prevWorks.length; i++) {\n        if (prevWorks[i].id != workId) {\n          newWorks.push(prevWorks[i]);\n        }\n      }\n\n      dispatch(removeWorkSuccess(newWorks));\n    }).catch(error => {\n      dispatch(removeWorkFail(error));\n    });\n  };\n}; //\n//\n//\n\nexport const getJobStart = () => {\n  return {\n    type: actionTypes.GET_JOB_START\n  };\n};\nexport const getJobFail = error => {\n  return {\n    type: actionTypes.GET_JOB_FAIL,\n    error: error\n  };\n};\nexport const getJobSuccess = () => {\n  return {\n    type: actionTypes.GET_JOB_SUCCESS\n  };\n};\nexport const getJob = (password, userId, token) => {\n  return dispatch => {\n    dispatch(getJobStart());\n\n    if (password.length != 36) {\n      dispatch(getJobFail(\"Ooops,password must be 36 characters long\"));\n    } else {\n      axios.get(`https://strongmanagment-default-rtdb.firebaseio.com/works.json?auth=${token}`).then(response => {\n        console.log(response.data);\n        let allWorks = response.data;\n        let findedWork = getWorkByPassword(allWorks, password);\n\n        if (findedWork.error) {\n          return Promise.reject(findedWork.error);\n        } else {\n          let findedWorkValue = findedWork.work;\n          let updatedWorkers = [];\n          console.log(findedWorkValue + \"findedWork\");\n\n          if (findedWorkValue.workers) {\n            console.log(findedWorkValue.workers + \"findedWork.workers\");\n            updatedWorkers = findedWorkValue.workers;\n\n            for (let existedWorker of updatedWorkers) {\n              if (existedWorker == userId) {\n                return Promise.reject(\"You already work at this job\");\n              }\n            }\n\n            updatedWorkers.push(userId);\n          } else {\n            updatedWorkers.push(userId);\n          }\n\n          console.log(updatedWorkers + \"updated workers\");\n          let updatedWork = { ...findedWorkValue,\n            workers: updatedWorkers\n          };\n          console.log(findedWork.id);\n          return axios.patch(`https://strongmanagment-default-rtdb.firebaseio.com/works/${findedWorkValue.id}.json?auth=${token}`, updatedWork);\n        }\n      }).then(response => {\n        console.log(response);\n        dispatch(getJobSuccess());\n      }).catch(error => {\n        console.log(error);\n        dispatch(getJobFail(error));\n      });\n    }\n  };\n};\nexport const setRedirectWorkPath = path => {\n  return {\n    type: actionTypes.SET_REDIRECT_WORK_PATH,\n    path: path\n  };\n};\nexport const uploadWorkersFail = error => {\n  return {\n    type: actionTypes.UPLOAD_WORKERS_FAIL,\n    error: error\n  };\n};\nexport const uploadWorkersStart = () => {\n  return {\n    type: actionTypes.UPLOAD_WORKERS_START\n  };\n};\nexport const uploadWorkersSuccess = workers => {\n  return {\n    type: actionTypes.UPLOAD_WORKERS_SUCCESS,\n    workers: workers\n  };\n};\nexport const uploadWorkers = (workId, userId, token) => {\n  return dispatch => {\n    dispatch(uploadWorkersStart());\n    axios.get(`https://strongmanagment-default-rtdb.firebaseio.com/works.json?auth=${token}`).then(response => {\n      console.log(response.data);\n      console.log(workId);\n      let selectedWork = response.data[workId];\n      console.log(selectedWork);\n\n      if (selectedWork.ownerId != userId) {\n        return Promise.reject(\"Oooops, you dont have enough permissions to upload this page\");\n      } else {\n        return Promise.all([axios.get(`https://strongmanagment-default-rtdb.firebaseio.com/users.json?auth=${token}`), selectedWork]);\n      }\n    }).then(([response, selectedWork]) => {\n      console.log(response.data, \"promose.ALL RESPONSE\");\n      console.log(selectedWork, \"promose.ALL selectedWork\");\n      let allWorkersArray = getWorkersByWork(response.data, selectedWork);\n      dispatch(uploadWorkersSuccess(allWorkersArray.workers));\n    }).catch(error => {\n      if (typeof error == \"string\") {\n        console.log(error);\n        dispatch(uploadWorkersFail(error));\n      } else {\n        dispatch(uploadWorkersFail(\"Ooops, something went wrong\"));\n        console.log(error);\n      }\n    });\n  };\n};\nexport const setEmptyWorkers = () => {\n  return {\n    type: actionTypes.SET_EMPTY_WORKERS\n  };\n}; //\n//\n//\n\nexport const getWorksTasksStart = () => {\n  return {\n    type: actionTypes.GET_WORKS_TASKS_START\n  };\n};\nexport const getWorksTasksFail = error => {\n  return {\n    type: actionTypes.GET_WORKS_TASKS_FAIL,\n    error: error\n  };\n};\nexport const getWorksTasksSuccess = worksTask => {\n  return {\n    type: actionTypes.GET_WORKS_TASKS_SUCCESS,\n    worksTask: worksTask\n  };\n};\nexport const getWorksTasks = (userId, token) => {\n  return dispatch => {\n    dispatch(getWorksTasksStart());\n    axios.get(`https://strongmanagment-default-rtdb.firebaseio.com/works.json?auth=${token}`).then(response => {\n      let worksTasks = [];\n      let allWorks = response.data;\n\n      for (let key in allWorks) {\n        if (allWorks[key].hasOwnProperty(\"workers\")) {\n          if (allWorks[key].workers.includes(userId)) {\n            worksTasks.push(allWorks[key]);\n          }\n        }\n      }\n\n      return Promise.all([axios.get(`https://strongmanagment-default-rtdb.firebaseio.com/tasks.json?auth=${token}`), worksTasks]);\n    }).then(() => {\n      dispatch(getWorksTasksSuccess(worksTasks));\n    }).catch(error => {\n      console.log(error);\n      dispatch(getWorksTasksFail(error));\n    });\n  };\n}; //\n//\n//\n//\n//\n\nexport const leaveWorkFail = error => {\n  return {\n    type: actionTypes.LEAVE_WORK_FAIL,\n    error: error\n  };\n};\nexport const leaveWorkStart = () => {\n  return {\n    type: actionTypes.LEAVE_WORK_START\n  };\n};\nexport const leaveWorkSuccess = updatedTasks => {\n  return {\n    type: actionTypes.LEAVE_WORK_SUCCESS,\n    newTasks: updatedTasks\n  };\n};\nexport const leaveWork = (workId, userId, token) => {\n  return (dispatch, getState) => {\n    dispatch(leaveWorkStart());\n    axios.get(`https://strongmanagment-default-rtdb.firebaseio.com/works.json?auth=${token}`).then(response => {\n      let selectedWork = response.data[workId];\n      console.log(selectedWork);\n      let workersIdSelectedWork = selectedWork.workers;\n      console.log(workersIdSelectedWork);\n      let selfLeaveFromWork = workersIdSelectedWork.filter(workerId => workerId != userId);\n      let updatedWork = { ...selectedWork,\n        workers: selfLeaveFromWork\n      };\n      return axios.patch(`https://strongmanagment-default-rtdb.firebaseio.com/works/${workId}.json?auth=${token}`, updatedWork);\n    }).then(response => {\n      let updatedTasks = getState().works.worksTask.filter(w => w.id != workId);\n      console.log(updatedTasks);\n      dispatch(leaveWorkSuccess(updatedTasks));\n    }).catch(err => {\n      console.log(err);\n      dispatch(leaveWorkFail(err));\n    });\n  };\n}; //\n//\n//\n//\n\nexport const addTaskFail = error => {\n  return {\n    type: actionTypes.ADD_TASK_FAIL,\n    error: error\n  };\n};\nexport const addTaskStart = () => {\n  return {\n    type: actionTypes.ADD_TASK_START\n  };\n};\nexport const addTaskSuccess = tasks => {\n  return {\n    type: actionTypes.ADD_TASK_SUCCESS,\n    tasks: tasks\n  };\n};\nexport const addTask = (workId, recipientId, token, taskLabel, taskDescription) => {\n  return dispatch => {\n    dispatch(addTaskStart());\n    console.log(token);\n    axios.post(`https://strongmanagment-default-rtdb.firebaseio.com/tasks.json?auth=${token}`, {\n      workId: workId,\n      recipientId: recipientId,\n      name: taskLabel,\n      description: taskDescription\n    }).then(response => {\n      dispatch(addTaskSuccess());\n    }).catch(err => {\n      console.log(err);\n\n      if (typeof err == \"string\") {\n        dispatch(addTaskFail(err));\n      } else {\n        dispatch(addTaskFail(\"Something went wrong\"));\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/home/vladichka/Boichuk/src/store/actions/actions.js"],"names":["actionTypes","axios","getWorkByPassword","getWorkersByWork","authStart","type","AUTH_START","authSuccess","token","userId","AUTH_SUCCESS","authFail","error","AUTH_FAIL","auth","login","password","repeatPassword","nickname","dispatch","length","test","authData","email","returnSecureToken","post","then","response","console","log","data","idToken","localId","rating","tasks","catch","loginStart","LOGIN_START","loginSuccess","LOGIN_SUCCESS","loginFail","LOGIN_FAIL","setPath","path","SET_PATH","setRedirectPath","logout","LOGOUT","createWorkFail","CREATE_WORK_FAIL","createWorkStart","CREATE_WORK_START","createWorkSuccess","CREATE_WORK_SUCCESS","createWork","name","description","work","ownerId","workers","get","uploadWorksStart","UPLOAD_WORKS_START","uploadWorksFail","UPLOAD_WORKS_FAIL","uploadWorksSuccess","works","UPLOAD_WORKS_SUCCESS","getUserWorks","worksObject","worksArray","Object","keys","map","key","push","id","uploadWorks","removeWorkStart","REMOVE_WORK_START","removeWorkFail","REMOVE_WORK_FAIL","removeWorkSuccess","REMOVE_WORK_SUCCESS","removeWork","workId","prevWorks","delete","newWorks","i","getJobStart","GET_JOB_START","getJobFail","GET_JOB_FAIL","getJobSuccess","GET_JOB_SUCCESS","getJob","allWorks","findedWork","Promise","reject","findedWorkValue","updatedWorkers","existedWorker","updatedWork","patch","setRedirectWorkPath","SET_REDIRECT_WORK_PATH","uploadWorkersFail","UPLOAD_WORKERS_FAIL","uploadWorkersStart","UPLOAD_WORKERS_START","uploadWorkersSuccess","UPLOAD_WORKERS_SUCCESS","uploadWorkers","selectedWork","all","allWorkersArray","setEmptyWorkers","SET_EMPTY_WORKERS","getWorksTasksStart","GET_WORKS_TASKS_START","getWorksTasksFail","GET_WORKS_TASKS_FAIL","getWorksTasksSuccess","worksTask","GET_WORKS_TASKS_SUCCESS","getWorksTasks","worksTasks","hasOwnProperty","includes","leaveWorkFail","LEAVE_WORK_FAIL","leaveWorkStart","LEAVE_WORK_START","leaveWorkSuccess","updatedTasks","LEAVE_WORK_SUCCESS","newTasks","leaveWork","getState","workersIdSelectedWork","selfLeaveFromWork","filter","workerId","w","err","addTaskFail","ADD_TASK_FAIL","addTaskStart","ADD_TASK_START","addTaskSuccess","ADD_TASK_SUCCESS","addTask","recipientId","taskLabel","taskDescription"],"mappings":"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","sourcesContent":["import * as actionTypes from \"./actionTypes\";\nimport axios from \"axios\";\nimport getWorkByPassword from \"../../functions/getWorkByPassword\";\nimport getWorkersByWork from \"../../functions/getWorkersByWork\";\nexport const authStart = () => {\n  return { type: actionTypes.AUTH_START };\n};\nexport const authSuccess = (token, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n    userId: userId,\n  };\n};\nexport const authFail = (error) => {\n  return { type: actionTypes.AUTH_FAIL, error: error };\n};\nexport const auth = (login, password, repeatPassword, nickname) => {\n  return (dispatch) => {\n    dispatch(authStart());\n    if (nickname.length < 4 || nickname.length > 25) {\n      dispatch(\n        authFail(\"Ooops, nickname has to be between 4 and 25 characters!\")\n      );\n    } else if (\n      /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(\n        login\n      ) == false\n    ) {\n      dispatch(authFail(\"Ooops, it seems that email isn't correct!\"));\n    } else if (password.length < 6 || password.length > 20) {\n      dispatch(\n        authFail(\"Ooops, password has to be between 6 and 20 characters!\")\n      );\n    } else if (repeatPassword !== password) {\n      dispatch(authFail(\"Ooops, passwords do not match!\"));\n    } else {\n      const authData = {\n        email: login,\n        password: password,\n        returnSecureToken: true,\n      };\n      axios\n        .post(\n          \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyByJGBJ1ZfClAOLx6PR3391TK2f7bZM6bs\",\n          authData\n        )\n        .then((response) => {\n          console.log(response);\n          dispatch(\n            authSuccess(response.data.idToken, response.data.localId, nickname)\n          );\n          return axios.post(\n            `https://strongmanagment-default-rtdb.firebaseio.com/users.json?auth=${response.data.idToken}`,\n            {\n              nickname: nickname,\n              userId: response.data.localId,\n              rating: \"0/0\",\n              tasks: [],\n            }\n          );\n        })\n        .then((response) => {\n          console.log(response);\n        })\n        .catch((error) => {\n          console.log(error);\n          if (typeof error == \"string\") {\n            dispatch(authFail(error));\n          } else {\n            // if error.response \"ooips email already exists\"\n            dispatch(authFail(\"Ooops user with this email already exists\"));\n          }\n        });\n    }\n  };\n};\nexport const loginStart = () => {\n  return { type: actionTypes.LOGIN_START };\n};\nexport const loginSuccess = (token, userId) => {\n  return {\n    type: actionTypes.LOGIN_SUCCESS,\n    token: token,\n    userId: userId,\n  };\n};\nexport const loginFail = (error) => {\n  return { type: actionTypes.LOGIN_FAIL, error: error };\n};\nexport const login = (login, password) => {\n  return (dispatch) => {\n    dispatch(loginStart());\n    if (\n      /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(\n        login\n      ) == false\n    ) {\n      dispatch(loginFail(\"Ooops, it seems that email isn't correct!\"));\n    } else if (password.length < 6 || password.length > 20) {\n      dispatch(\n        loginFail(\"Ooops, password has to be between 6 and 20 characters!\")\n      );\n    } else {\n      const authData = {\n        email: login,\n        password: password,\n        returnSecureToken: true,\n      };\n      axios\n        .post(\n          \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyByJGBJ1ZfClAOLx6PR3391TK2f7bZM6bs\",\n          authData\n        )\n        .then((response) => {\n          console.log(response);\n          dispatch(loginSuccess(response.data.idToken, response.data.localId));\n        })\n        .catch((error) => {\n          console.log(error);\n          if (typeof error == \"string\") {\n            dispatch(loginFail(error));\n          } else {\n            // if error.response \"ooips email already exists\"\n            dispatch(loginFail(\"Ooops, login or password is incorrect\"));\n          }\n        });\n    }\n  };\n};\nexport const setPath = (path) => {\n  return { type: actionTypes.SET_PATH, path: path };\n};\nexport const setRedirectPath = (path) => {\n  return (dispatch) => {\n    if (path == \"null\") {\n      dispatch(setPath(\"null\"));\n    } else {\n      dispatch(setPath(path));\n    }\n  };\n};\nexport const logout = () => {\n  return { type: actionTypes.LOGOUT };\n};\n//\n//\n//\nexport const createWorkFail = (error) => {\n  return { type: actionTypes.CREATE_WORK_FAIL, error: error };\n};\nexport const createWorkStart = () => {\n  return { type: actionTypes.CREATE_WORK_START };\n};\nexport const createWorkSuccess = () => {\n  return {\n    type: actionTypes.CREATE_WORK_SUCCESS,\n  };\n};\nexport const createWork = (name, description, userId, token) => {\n  return (dispatch) => {\n    dispatch(createWorkStart());\n\n    if (name.length < 1 || name.length > 50) {\n      dispatch(\n        createWorkFail(\"Ooops, name has to be between 1 and 20 characters!\")\n      );\n    } else if (description.length < 3 || description.length > 500) {\n      dispatch(\n        createWorkFail(\n          \"Ooops, description has to be between 3 and 500 characters!\"\n        )\n      );\n    } else {\n      let work = {\n        name: name,\n        description: description,\n        ownerId: userId,\n        workers: [],\n      };\n\n      axios\n        .get(\"https://www.uuidgenerator.net/api/version1\")\n        .then((response) => {\n          console.log(response);\n          work = { ...work, password: response.data };\n          return axios.post(\n            `https://strongmanagment-default-rtdb.firebaseio.com/works.json?auth=${token}`,\n            work\n          );\n        })\n        .then((response) => {\n          dispatch(createWorkSuccess());\n        })\n        .catch((error) => {\n          console.log(error);\n          if (typeof error == \"string\") {\n            dispatch(createWorkFail(error));\n          } else {\n            console.log(error);\n            // if error.response \"ooips email already exists\"\n            dispatch(createWorkFail(\"Ooops, some propblem exists\"));\n          }\n        });\n    }\n  };\n};\nexport const uploadWorksStart = () => {\n  return { type: actionTypes.UPLOAD_WORKS_START };\n};\nexport const uploadWorksFail = (error) => {\n  return { type: actionTypes.UPLOAD_WORKS_FAIL, error: error };\n};\nexport const uploadWorksSuccess = (works) => {\n  return {\n    type: actionTypes.UPLOAD_WORKS_SUCCESS,\n    works: works,\n  };\n};\nfunction getUserWorks(userId, worksObject) {\n  let worksArray = [];\n  Object.keys(worksObject).map((key) => {\n    if (worksObject[key].ownerId == userId) {\n      worksArray.push({ ...worksObject[key], id: key });\n    }\n  });\n  return worksArray;\n}\nexport const uploadWorks = (userId, token) => {\n  return (dispatch) => {\n    dispatch(uploadWorksStart());\n    axios\n      .get(\n        `https://strongmanagment-default-rtdb.firebaseio.com/works.json?auth=${token}`\n      )\n      .then((response) => {\n        console.log(response.data);\n        dispatch(uploadWorksSuccess(getUserWorks(userId, response.data)));\n      })\n      .catch((error) => {\n        console.log(error);\n        if (typeof error == \"string\") {\n          dispatch(uploadWorksFail(error));\n        } else {\n          console.log(error);\n          // if error.response \"ooips email already exists\"\n          dispatch(uploadWorksFail(\"Ooops, some propblem exists\"));\n        }\n      });\n  };\n};\n//\n//\n//\n//\n//\n\nexport const removeWorkStart = () => {\n  return { type: actionTypes.REMOVE_WORK_START };\n};\nexport const removeWorkFail = (error) => {\n  return { type: actionTypes.REMOVE_WORK_FAIL, error: error };\n};\nexport const removeWorkSuccess = (works) => {\n  return {\n    type: actionTypes.REMOVE_WORK_SUCCESS,\n    works: works,\n  };\n};\nexport const removeWork = (workId, token, prevWorks) => {\n  return (dispatch) => {\n    dispatch(removeWorkStart());\n    axios\n      .delete(\n        `https://strongmanagment-default-rtdb.firebaseio.com/works/${workId}.json?auth=${token}`\n      )\n      .then((response) => {\n        console.log(response.data);\n        let newWorks = [];\n        for (let i = 0; i < prevWorks.length; i++) {\n          if (prevWorks[i].id != workId) {\n            newWorks.push(prevWorks[i]);\n          }\n        }\n        dispatch(removeWorkSuccess(newWorks));\n      })\n      .catch((error) => {\n        dispatch(removeWorkFail(error));\n      });\n  };\n};\n//\n//\n//\nexport const getJobStart = () => {\n  return { type: actionTypes.GET_JOB_START };\n};\nexport const getJobFail = (error) => {\n  return { type: actionTypes.GET_JOB_FAIL, error: error };\n};\nexport const getJobSuccess = () => {\n  return {\n    type: actionTypes.GET_JOB_SUCCESS,\n  };\n};\nexport const getJob = (password, userId, token) => {\n  return (dispatch) => {\n    dispatch(getJobStart());\n    if (password.length != 36) {\n      dispatch(getJobFail(\"Ooops,password must be 36 characters long\"));\n    } else {\n      axios\n        .get(\n          `https://strongmanagment-default-rtdb.firebaseio.com/works.json?auth=${token}`\n        )\n        .then((response) => {\n          console.log(response.data);\n          let allWorks = response.data;\n          let findedWork = getWorkByPassword(allWorks, password);\n          if (findedWork.error) {\n            return Promise.reject(findedWork.error);\n          } else {\n            let findedWorkValue = findedWork.work;\n            let updatedWorkers = [];\n            console.log(findedWorkValue + \"findedWork\");\n\n            if (findedWorkValue.workers) {\n              console.log(findedWorkValue.workers + \"findedWork.workers\");\n              updatedWorkers = findedWorkValue.workers;\n              for (let existedWorker of updatedWorkers) {\n                if (existedWorker == userId) {\n                  return Promise.reject(\"You already work at this job\");\n                }\n              }\n              updatedWorkers.push(userId);\n            } else {\n              updatedWorkers.push(userId);\n            }\n            console.log(updatedWorkers + \"updated workers\");\n            let updatedWork = { ...findedWorkValue, workers: updatedWorkers };\n            console.log(findedWork.id);\n            return axios.patch(\n              `https://strongmanagment-default-rtdb.firebaseio.com/works/${findedWorkValue.id}.json?auth=${token}`,\n              updatedWork\n            );\n          }\n        })\n        .then((response) => {\n          console.log(response);\n          dispatch(getJobSuccess());\n        })\n        .catch((error) => {\n          console.log(error);\n          dispatch(getJobFail(error));\n        });\n    }\n  };\n};\nexport const setRedirectWorkPath = (path) => {\n  return { type: actionTypes.SET_REDIRECT_WORK_PATH, path: path };\n};\n\nexport const uploadWorkersFail = (error) => {\n  return { type: actionTypes.UPLOAD_WORKERS_FAIL, error: error };\n};\nexport const uploadWorkersStart = () => {\n  return { type: actionTypes.UPLOAD_WORKERS_START };\n};\nexport const uploadWorkersSuccess = (workers) => {\n  return {\n    type: actionTypes.UPLOAD_WORKERS_SUCCESS,\n    workers: workers,\n  };\n};\nexport const uploadWorkers = (workId, userId, token) => {\n  return (dispatch) => {\n    dispatch(uploadWorkersStart());\n    axios\n      .get(\n        `https://strongmanagment-default-rtdb.firebaseio.com/works.json?auth=${token}`\n      )\n      .then((response) => {\n        console.log(response.data);\n        console.log(workId);\n        let selectedWork = response.data[workId];\n        console.log(selectedWork);\n        if (selectedWork.ownerId != userId) {\n          return Promise.reject(\n            \"Oooops, you dont have enough permissions to upload this page\"\n          );\n        } else {\n          return Promise.all([\n            axios.get(\n              `https://strongmanagment-default-rtdb.firebaseio.com/users.json?auth=${token}`\n            ),\n            selectedWork,\n          ]);\n        }\n      })\n      .then(([response, selectedWork]) => {\n        console.log(response.data, \"promose.ALL RESPONSE\");\n        console.log(selectedWork, \"promose.ALL selectedWork\");\n        let allWorkersArray = getWorkersByWork(response.data, selectedWork);\n        dispatch(uploadWorkersSuccess(allWorkersArray.workers));\n      })\n      .catch((error) => {\n        if (typeof error == \"string\") {\n          console.log(error);\n          dispatch(uploadWorkersFail(error));\n        } else {\n          dispatch(uploadWorkersFail(\"Ooops, something went wrong\"));\n          console.log(error);\n        }\n      });\n  };\n};\nexport const setEmptyWorkers = () => {\n  return {\n    type: actionTypes.SET_EMPTY_WORKERS,\n  };\n};\n\n//\n//\n//\nexport const getWorksTasksStart = () => {\n  return { type: actionTypes.GET_WORKS_TASKS_START };\n};\nexport const getWorksTasksFail = (error) => {\n  return { type: actionTypes.GET_WORKS_TASKS_FAIL, error: error };\n};\nexport const getWorksTasksSuccess = (worksTask) => {\n  return { type: actionTypes.GET_WORKS_TASKS_SUCCESS, worksTask: worksTask };\n};\n\nexport const getWorksTasks = (userId, token) => {\n  return (dispatch) => {\n    dispatch(getWorksTasksStart());\n    axios\n      .get(\n        `https://strongmanagment-default-rtdb.firebaseio.com/works.json?auth=${token}`\n      )\n      .then((response) => {\n        let worksTasks = [];\n        let allWorks = response.data;\n        for (let key in allWorks) {\n          if (allWorks[key].hasOwnProperty(\"workers\")) {\n            if (allWorks[key].workers.includes(userId)) {\n              worksTasks.push(allWorks[key]);\n            }\n          }\n        }\n        return Promise.all([\n          axios.get(\n            `https://strongmanagment-default-rtdb.firebaseio.com/tasks.json?auth=${token}`\n          ),\n          worksTasks,\n        ]);\n      })\n      .then(() => {\n        dispatch(getWorksTasksSuccess(worksTasks));\n      })\n      .catch((error) => {\n        console.log(error);\n        dispatch(getWorksTasksFail(error));\n      });\n  };\n};\n//\n//\n//\n//\n//\nexport const leaveWorkFail = (error) => {\n  return { type: actionTypes.LEAVE_WORK_FAIL, error: error };\n};\nexport const leaveWorkStart = () => {\n  return { type: actionTypes.LEAVE_WORK_START };\n};\nexport const leaveWorkSuccess = (updatedTasks) => {\n  return {\n    type: actionTypes.LEAVE_WORK_SUCCESS,\n    newTasks: updatedTasks,\n  };\n};\nexport const leaveWork = (workId, userId, token) => {\n  return (dispatch, getState) => {\n    dispatch(leaveWorkStart());\n    axios\n      .get(\n        `https://strongmanagment-default-rtdb.firebaseio.com/works.json?auth=${token}`\n      )\n      .then((response) => {\n        let selectedWork = response.data[workId];\n        console.log(selectedWork);\n        let workersIdSelectedWork = selectedWork.workers;\n        console.log(workersIdSelectedWork);\n        let selfLeaveFromWork = workersIdSelectedWork.filter(\n          (workerId) => workerId != userId\n        );\n\n        let updatedWork = { ...selectedWork, workers: selfLeaveFromWork };\n        return axios.patch(\n          `https://strongmanagment-default-rtdb.firebaseio.com/works/${workId}.json?auth=${token}`,\n          updatedWork\n        );\n      })\n      .then((response) => {\n        let updatedTasks = getState().works.worksTask.filter(\n          (w) => w.id != workId\n        );\n        console.log(updatedTasks);\n        dispatch(leaveWorkSuccess(updatedTasks));\n      })\n      .catch((err) => {\n        console.log(err);\n        dispatch(leaveWorkFail(err));\n      });\n  };\n};\n//\n//\n//\n//\nexport const addTaskFail = (error) => {\n  return { type: actionTypes.ADD_TASK_FAIL, error: error };\n};\nexport const addTaskStart = () => {\n  return { type: actionTypes.ADD_TASK_START };\n};\nexport const addTaskSuccess = (tasks) => {\n  return {\n    type: actionTypes.ADD_TASK_SUCCESS,\n    tasks: tasks,\n  };\n};\nexport const addTask = (\n  workId,\n  recipientId,\n  token,\n  taskLabel,\n  taskDescription\n) => {\n  return (dispatch) => {\n    dispatch(addTaskStart());\n    console.log(token);\n    axios\n      .post(\n        `https://strongmanagment-default-rtdb.firebaseio.com/tasks.json?auth=${token}`,\n        {\n          workId: workId,\n          recipientId: recipientId,\n          name: taskLabel,\n          description: taskDescription,\n        }\n      )\n      .then((response) => {\n        dispatch(addTaskSuccess());\n      })\n      .catch((err) => {\n        console.log(err);\n        if (typeof err == \"string\") {\n          dispatch(addTaskFail(err));\n        } else {\n          dispatch(addTaskFail(\"Something went wrong\"));\n        }\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}