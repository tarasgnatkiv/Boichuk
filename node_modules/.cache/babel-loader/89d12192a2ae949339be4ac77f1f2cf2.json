{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\taras\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\Evolution\\\\Boichuk\\\\src\\\\containers\\\\Tasks\\\\MyTasks.js\";\nimport React, { Component } from \"react\"; // import classes from \"./MyTasks.module.css\";\n// import { CopyToClipboard } from \"react-copy-to-clipboard\";\n\nimport TaskComponent from './TaskConponent/TaskComponent';\nimport * as actions from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\n\nclass MyTasks extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showWorks = () => {\n      let MyWorks;\n\n      if (this.state.works.length > 0) {\n        MyWorks = this.state.works.map(i => {\n          return /*#__PURE__*/_jsxDEV(TaskComponent, {\n            info: i\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this);\n        });\n      } else {\n        MyWorks = /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"None\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 23\n        }, this);\n      }\n\n      return MyWorks;\n    };\n\n    this.state = {\n      works: [{\n        description: \"aaaaaaaaaaaaaaaaaaa\",\n        name: \"aaaaaa\",\n        ownerId: \"RVgsz2FKqiQqEF0lijGySmI0EQ13\",\n        password: \"6ab95fa8-4547-11eb-b378-0242ac130002\",\n        number: 11\n      }, {\n        description: \"bbbbbbbbb\",\n        name: \"aaaaaa\",\n        ownerId: \"RVgsz2FKqiQqEF0lijGySmI0EQ13\",\n        password: \"6ab95fa8-4547-11eb-b378-0242ac130002\",\n        number: 11\n      }, {\n        description: \"qqqqqqq\",\n        name: \"qqqqqqqqqqqqqqqqqqq\",\n        ownerId: \"RVgsz2FKqiQqEF0lijGySmI0EQ13\",\n        password: \"6ab95fa8-4547-11eb-b378-0242ac130002\",\n        number: 11\n      }, {\n        description: \"taras\",\n        name: \"qqqqqqqqqqqqqqqqqqq\",\n        ownerId: \"RVgsz2FKqiQqEF0lijGySmI0EQ13\",\n        password: \"6ab95fa8-4547-11eb-b378-0242ac130002\",\n        number: 11\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: this.showWorks()\n    }, void 0, false);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    userId: state.auth.userId,\n    error: state.auth.error,\n    redirect: state.auth.redirect,\n    loading: state.auth.loading,\n    works: state.works.works,\n    loadingWork: state.works.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onUploadWorks: (userId, token) => dispatch(actions.uploadWorks(userId, token)),\n    setRedirectPath: path => dispatch(actions.setRedirectPath(path))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyWorks);","map":{"version":3,"sources":["C:/Users/taras/OneDrive/Рабочий стол/Evolution/Boichuk/src/containers/Tasks/MyTasks.js"],"names":["React","Component","TaskComponent","actions","connect","MyTasks","constructor","props","showWorks","MyWorks","state","works","length","map","i","description","name","ownerId","password","number","render","mapStateToProps","token","auth","userId","error","redirect","loading","loadingWork","mapDispatchToProps","dispatch","onUploadWorks","uploadWorks","setRedirectPath","path"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n// import classes from \"./MyTasks.module.css\";\r\n// import { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport TaskComponent from './TaskConponent/TaskComponent'\r\nimport * as actions from \"../../store/actions/index\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nclass MyTasks extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            works: [\r\n                {\r\n                    description: \"aaaaaaaaaaaaaaaaaaa\",\r\n                    name: \"aaaaaa\",\r\n                    ownerId: \"RVgsz2FKqiQqEF0lijGySmI0EQ13\",\r\n                    password: \"6ab95fa8-4547-11eb-b378-0242ac130002\",\r\n                    number: 11\r\n                },\r\n                {\r\n                    description: \"bbbbbbbbb\",\r\n                    name: \"aaaaaa\",\r\n                    ownerId: \"RVgsz2FKqiQqEF0lijGySmI0EQ13\",\r\n                    password: \"6ab95fa8-4547-11eb-b378-0242ac130002\",\r\n                    number: 11\r\n                }, \r\n                {\r\n                    description: \"qqqqqqq\",\r\n                    name: \"qqqqqqqqqqqqqqqqqqq\",\r\n                    ownerId: \"RVgsz2FKqiQqEF0lijGySmI0EQ13\",\r\n                    password: \"6ab95fa8-4547-11eb-b378-0242ac130002\",\r\n                    number: 11\r\n                },\r\n                {\r\n                    description: \"taras\",\r\n                    name: \"qqqqqqqqqqqqqqqqqqq\",\r\n                    ownerId: \"RVgsz2FKqiQqEF0lijGySmI0EQ13\",\r\n                    password: \"6ab95fa8-4547-11eb-b378-0242ac130002\",\r\n                    number: 11\r\n\r\n                }\r\n            ],\r\n        }\r\n    }\r\n\r\n    showWorks = () => {\r\n        let MyWorks\r\n        if (this.state.works.length > 0) {\r\n            MyWorks = this.state.works.map(i => {\r\n                return  <TaskComponent info={i}/>\r\n            })\r\n        } else {\r\n            MyWorks = <div>None</div>\r\n        }\r\n\r\n        return MyWorks\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.showWorks()}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      token: state.auth.token,\r\n      userId: state.auth.userId,\r\n      error: state.auth.error,\r\n      redirect: state.auth.redirect,\r\n      loading: state.auth.loading,\r\n      works: state.works.works,\r\n      loadingWork: state.works.loading,\r\n    };\r\n  };\r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      onUploadWorks: (userId, token) =>\r\n        dispatch(actions.uploadWorks(userId, token)),\r\n      setRedirectPath: (path) => dispatch(actions.setRedirectPath(path)),\r\n    };\r\n  };\r\n  export default connect(mapStateToProps, mapDispatchToProps)(MyWorks);"]},"metadata":{},"sourceType":"module"}