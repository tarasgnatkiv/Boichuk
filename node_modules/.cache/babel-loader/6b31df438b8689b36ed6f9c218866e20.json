{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/vladichka/Boichuk/src/components/Works/WorkComponent/WorkComponent.js\";\nimport React, { Component } from \"react\";\nimport classes from \"./WorkComponent.module.css\";\nimport \"../../../../node_modules/@fortawesome/fontawesome-free/css/all.css\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport * as actions from \"../../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\nimport { Redirect, NavLink } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\n\nclass WorkComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.cancelDelete = () => {\n      console.log(\"pyk\");\n      this.setState({\n        delete: !this.state.delete\n      });\n    };\n\n    this.removeWork = workId => {\n      this.props.onRemoveWork(workId, this.props.token, this.props.works);\n    };\n\n    this.redirectClick = () => {\n      this.props.history.push(`selectedWorkers?workId=${this.props.workId}`);\n    };\n\n    this.state = {\n      copied: false,\n      delete: false\n    };\n  }\n\n  render() {\n    let redirect = null;\n\n    if (this.props.redirectWork) {\n      redirect = /*#__PURE__*/_jsxDEV(Redirect, {\n        to: this.props.redirectWork\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 18\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: classes.Work,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.TopWorkHeader,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.RemoveWork,\n          onClick: this.cancelDelete,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fas fa-trash-alt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.Label,\n          children: this.props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.Description,\n        children: [/*#__PURE__*/_jsxDEV(\"style\", {\n          children: \"@import url('https://fonts.googleapis.com/css2?family=Langar&family=Pacifico&family=Questrial&display=swap');\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), this.props.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.Password,\n        children: [/*#__PURE__*/_jsxDEV(\"style\", {\n          children: \"@import url('https://fonts.googleapis.com/css2?family=Andika+New+Basic:ital@1&display=swap');\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.PasswordFont,\n          children: this.props.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n          onCopy: this.props.copyFunc,\n          text: this.props.password,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.clipBoard,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"far fa-copy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: this.redirectClick,\n        className: classes.Users,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.UserGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fa fa-users\",\n            \"aria-hidden\": \"true\",\n            children: \":\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"font\", {\n            className: classes.UsersGroupValue,\n            children: this.props.workers ? this.props.workers.length : 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.UserGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fas fa-user-tie\",\n            children: \":\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"font\", {\n            className: classes.UsersGroupValue,\n            children: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.UserGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fas fa-hospital-user\",\n            children: \":\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"font\", {\n            className: classes.UsersGroupValue,\n            children: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.state.delete ? [classes.active, classes.DeleteContainer].join(\" \") : classes.DeleteContainer,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.container,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Delete Work\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Are you sure you want to delete your work?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.clearfix,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: this.cancelDelete,\n              className: classes.cancelbtn,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => this.removeWork(this.props.workId),\n              className: classes.deletebtn,\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    userId: state.auth.userId,\n    error: state.auth.error,\n    redirect: state.auth.redirect,\n    loading: state.auth.loading,\n    works: state.works.works,\n    redirectWork: state.works.redirectWork\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onRemoveWork: (id, token, oldWorks) => dispatch(actions.removeWork(id, token, oldWorks)),\n    setRedirectPath: path => dispatch(actions.setRedirectPath(path)),\n    setRedirectWorkPath: path => dispatch(actions.setRedirectWorkPath(path))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(WorkComponent));","map":{"version":3,"sources":["/home/vladichka/Boichuk/src/components/Works/WorkComponent/WorkComponent.js"],"names":["React","Component","classes","CopyToClipboard","actions","connect","Spinner","Redirect","NavLink","withRouter","WorkComponent","constructor","props","cancelDelete","console","log","setState","delete","state","removeWork","workId","onRemoveWork","token","works","redirectClick","history","push","copied","render","redirect","redirectWork","Work","TopWorkHeader","RemoveWork","Label","name","Description","description","Password","PasswordFont","password","copyFunc","clipBoard","Users","UserGroup","UsersGroupValue","workers","length","active","DeleteContainer","join","container","clearfix","cancelbtn","deletebtn","mapStateToProps","auth","userId","error","loading","mapDispatchToProps","dispatch","id","oldWorks","setRedirectPath","path","setRedirectWorkPath"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport classes from \"./WorkComponent.module.css\";\nimport \"../../../../node_modules/@fortawesome/fontawesome-free/css/all.css\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport * as actions from \"../../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\nimport { Redirect, NavLink } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\n\nclass WorkComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      copied: false,\n      delete: false,\n    };\n  }\n\n  cancelDelete = () => {\n    console.log(\"pyk\");\n    this.setState({\n      delete: !this.state.delete,\n    });\n  };\n  removeWork = (workId) => {\n    this.props.onRemoveWork(workId, this.props.token, this.props.works);\n  };\n  redirectClick = () => {\n    this.props.history.push(`selectedWorkers?workId=${this.props.workId}`);\n  };\n\n  render() {\n    let redirect = null;\n    if (this.props.redirectWork) {\n      redirect = <Redirect to={this.props.redirectWork} />;\n    }\n    return (\n      <li className={classes.Work}>\n        <div className={classes.TopWorkHeader}>\n          <div className={classes.RemoveWork} onClick={this.cancelDelete}>\n            <i class=\"fas fa-trash-alt\"></i>\n          </div>\n          <div className={classes.Label}>{this.props.name}</div>\n        </div>\n        <div className={classes.Description}>\n          <style>\n            @import\n            url('https://fonts.googleapis.com/css2?family=Langar&family=Pacifico&family=Questrial&display=swap');\n          </style>\n          {this.props.description}\n        </div>\n\n        <div className={classes.Password}>\n          <style>\n            @import\n            url('https://fonts.googleapis.com/css2?family=Andika+New+Basic:ital@1&display=swap');\n          </style>\n          <div>password:</div>\n          <div className={classes.PasswordFont}>{this.props.password}</div>\n          <CopyToClipboard onCopy={this.props.copyFunc} text={this.props.password}>\n            <div className={classes.clipBoard}>\n              <i class={\"far fa-copy\"}></i>\n            </div>\n          </CopyToClipboard>\n        </div>\n        <div onClick={this.redirectClick} className={classes.Users}>\n          <div className={classes.UserGroup}>\n            <i class=\"fa fa-users\" aria-hidden=\"true\">\n              :\n            </i>\n            <font className={classes.UsersGroupValue}>\n              {this.props.workers ? this.props.workers.length : 0}\n            </font>\n          </div>\n          <div className={classes.UserGroup}>\n            <i class=\"fas fa-user-tie\">:</i>\n            <font className={classes.UsersGroupValue}>0</font>\n          </div>\n          <div className={classes.UserGroup}>\n            <i class=\"fas fa-hospital-user\">:</i>\n            <font className={classes.UsersGroupValue}>0</font>\n          </div>\n        </div>\n        <div\n          className={\n            this.state.delete\n              ? [classes.active, classes.DeleteContainer].join(\" \")\n              : classes.DeleteContainer\n          }\n        >\n          <div className={classes.container}>\n            <h1>Delete Work</h1>\n            <p>Are you sure you want to delete your work?</p>\n\n            <div className={classes.clearfix}>\n              <button\n                type=\"button\"\n                onClick={this.cancelDelete}\n                className={classes.cancelbtn}\n              >\n                Cancel\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => this.removeWork(this.props.workId)}\n                className={classes.deletebtn}\n              >\n                Delete\n              </button>\n            </div>\n          </div>\n        </div>\n      </li>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    userId: state.auth.userId,\n    error: state.auth.error,\n    redirect: state.auth.redirect,\n    loading: state.auth.loading,\n    works: state.works.works,\n    redirectWork: state.works.redirectWork,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onRemoveWork: (id, token, oldWorks) =>\n      dispatch(actions.removeWork(id, token, oldWorks)),\n    setRedirectPath: (path) => dispatch(actions.setRedirectPath(path)),\n    setRedirectWorkPath: (path) => dispatch(actions.setRedirectWorkPath(path)),\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(WorkComponent));\n"]},"metadata":{},"sourceType":"module"}